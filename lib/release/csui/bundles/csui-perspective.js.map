{"version":3,"sources":["../../src/perspective.manage/impl/nls/lang.js","../../src/perspective.manage/impl/nls/root/lang.js","../../src/perspective.manage/impl/options.form.wrapper!hbs","../../src/perspective.manage/impl/options.form!css","../../src/perspective.manage/impl/options.form.view.js","../../src/perspective.manage/impl/widget.item!hbs","../../src/perspective.manage/impl/widget.drag.template!hbs","../../src/perspective.manage/impl/widget.list.view.js","../perspective.manage/impl/perspectivelayouts!csui-ext","../../src/perspective.manage/impl/perspectivelayouts.js","../../src/perspective.manage/impl/pman.panel!hbs","../../src/perspective.manage/impl/list.item!hbs","../../src/perspective.manage/impl/list!hbs","../../src/perspective.manage/impl/pman.panel!css","../../src/perspective.manage/impl/pman.panel.view.js","../../src/perspective.manage/impl/pman!hbs","../../src/perspective.manage/impl/pman!css","../../src/perspective.manage/behaviours/impl/nls/lang.js","../../src/perspective.manage/behaviours/impl/nls/root/lang.js","../../src/perspective.manage/behaviours/impl/widget.masking!hbs","../../src/perspective.manage/behaviours/impl/widget.masking!css","../../src/perspective.manage/behaviours/pman.widget.config.behaviour.js","../../src/perspective.manage/pman.view.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/lang.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/root/lang.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder!hbs","../../src/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder!css","../../src/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.view.js","../../src/perspective.manage/widgets/perspective.widget/impl/nls/lang.js","../../src/perspective.manage/widgets/perspective.widget/impl/nls/root/lang.js","../../src/perspective.manage/widgets/perspective.widget/impl/perspective.widget!hbs","../../src/perspective.manage/widgets/perspective.widget/impl/perspective.widget!css","../../src/perspective.manage/widgets/perspective.widget/perspective.widget.view.js","../../src/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.manifest.json!json","../../src/perspective.manage/widgets/perspective.widget/perspective.widget.manifest.json!json","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/perspective.placeholder.manifest.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/root/perspective.placeholder.manifest.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/perspective.placeholder.manifest!i18n","../../src/perspective.manage/widgets/perspective.widget/impl/nls/perspective.widget.manifest.js","../../src/perspective.manage/widgets/perspective.widget/impl/nls/root/perspective.widget.manifest.js","../../src/perspective.manage/widgets/perspective.widget/impl/nls/perspective.widget.manifest!i18n","csui-perspective.js"],"names":["csui","define","root","en-us","en","layoutTabTitle","widgetTabTitle","expandTab","collapseTab","noTitle","goBackTooltip","templateMessage","changePageLayoutConfirmatonText","proceedButton","changeLayoutCancelButton","FlowLayoutTitle","LcrLayoutTitle","perspectiveSaveSuccess","saveConfirmMsg","saveConfirmTitle","addWidget","save","close","cancel","configNotSupported","module","hbs","Handlebars","t","template","compiler","main","depth0","helpers","partials","data","helper","this","escapeExpression","title","helperMissing","call","name","hash","description","registerPartial","_","$","Backbone","Marionette","Alpaca","LayoutViewEventsPropagationMixin","PerfectScrollingBehavior","FormView","lang","WidgetOptionsFormWrapperView","LayoutView","extend","className","regions","bodyRegion","behaviors","PerfectScrolling","behaviorClass","contentParent","templateHelpers","options","manifest","ui","unSupportedConfig","constructor","prototype","apply","arguments","_createForm","formModel","widgetOptionsFormView","WidgetOptionsFormView","context","model","mode","listenToOnce","trigger","bind","listenTo","field","_hasSchema","schema","properties","isEmpty","_hasRequiredFields","required","length","onRender","hide","_prepareFormModel","hasValidSchema","_normalizeOptions","attributes","fields","show","onPopoverShow","popover","find","addClass","getValues","_getOptionsData","validate","reqVal","reqFields","each","fieldName","_isPreviewWidget","widgetConfig","type","JSON","parse","stringify","formOptions","_addWidgetSizePropertyIfSupported","Model","perspectiveView","getSupportedWidgetSizes","supportedKinds","widgetView","kindSchema","widgetSizeTitle","widgetSizeDescription","enum","map","sk","kind","kindOption","optionLabels","label","removeDefaultNone","selectedKind","size","selected","widgetSizeProperty","sizeSchema","sizeOptions","push","_resolveOptionsType","getSchemaType","isArray","defaultSchemaFieldMapping","schemaProperies","optionFields","hasValidTypes","fieldId","fieldOpts","fieldData","optType","getFieldClass","defaults","item","items","1","blockParams","depths","stack1","lambda","draggable","fn","program","inverse","noop","icon","2","widgets","useDepths","header","body","base","Lang","WidgetCollection","WidgetItemTemplate","WidgetDragTemplate","config","dragImageOffsetTop","dragImageOffsetLeft","WidgetItemView","ItemView","tagName","widgetCollection","Collection","dndContainer","models","accordionHeader","accordionContent","accordionHeaderIcon","widget","events","click @ui.accordionHeader","dragstart @ui.widget","dragend @ui.widget","toggle","isClosed","hasClass","toggleClass","parentView","$el","removeClass","_makeWidgetSortable","hasDragDropNative","document","createElement","dragDrop","_hasNativeDragImageSupport","on","_handleDragImageForIE","self","widgetEls","parent","get","sortable","connectWith","containment","event","widgetModel","index","widgetDragTemplate","widgetDragTemplateView","newWidget","render","width","height","css","opacity","appendTo","closest","cursor","tolerance","cursorAt","top","left","start","placeholder","dragStart","stop","dragEnd","e","originalEvent","$img","clone","currentTarget","text","Math","max","pageY","pageX","position","pointerEvents","setTimeout","remove","dataTransfer","setData","toJSON","onDragStart","setDragImage","window","DataTransfer","Clipboard","onDragEnd","any","behavior","key","suppressScrollX","scrollYMarginOffset","allWidgets","fetch","done","collection","_groupWidgetsByModule","initialize","bindAll","renderItem","itemView","el","append","moduleCollection","filter","has","set","groupBy","serverModule","id","val","first","replace","add","_sanitiseWidgetLibrary","onInitWidgets","empty","extraPerspectiveLayouts","perspectivelayouts","union","iconClass","goBackAria","require","BlockerView","WidgetListView","perspectiveLayouts","ListItemTemplate","ListTemplate","PManPanelView","click @ui.layoutTab","tabPannel","listPannel","layoutTab","widgetTab","onPanelOpen","accordionView","triggerMethod","accordionRegion","Region","blockActions","unblockActions","imbue","listView","destroy","onTabClicked","args","itemClassName","pmanView","listregion","ListView","ListItemView","click .csui-layout-item:not(.binf-active)","debounce","perspective","CompositeView","ViewCollection","idAttribute","back","click @ui.back","childEvents","change:layout","set:active","childViewContainer","childView","childViewOptions","onClickBack","preventDefault","stopPropagation","setActive","onChangeLayout","ModalAlertView","confirmWarning","buttons","showYes","labelYes","showNo","labelNo","deleteConfirmMsg","deleteConfirmTitle","replaceConfirmMsg","replaceConfirmTitle","removeWidget","i18n","log","WidgetModel","maskingTemplate","WidgetMaskingView","delete","masking","click @ui.masking","drop","dragover","dragenter","dragleave","click @ui.delete","dropCounter","undefined","_isConfigurable","_loadManifest","_createOptionsForm","_updateWidgetOptions","_showCallout","_showOptionsCallout","_calculatePopoverPlacement","isIE11","activeElement","blur","$popoverEl","binf_popover","optionsFormView","_showPopover","afterRenderCallback","_onChangeField","adjust","_determineCalloutPlacement","placement","mirror","$popoverContainer","availableSpace","popoverOptions","html","content","viewport","selector","perspectiveSelector","padding","animation","off","_handleCalloutHide","next","itemFirst","ele","focus","_registerPopoverEvents","cid","view","_documentClickHandler","_windowResizeHandler","_unregisterPopoverEvents","isValid","target","is","contains","value","_evalRequiredFormWidth","formWidth","scrollWidth","offsetWidth","_calculateSpaceAroundWidget","documentWidth","leftOffset","offset","rightOffset","right","rightFlip","leftFlip","i","perfectSpace","highSpace","isRtl","settings","rtl","allSpaces","spacings","current","perspectiveWidget","Deferred","resolve","deferred","then","error","reject","promise","onDeleteClick","alertDialog","confirmQuestion","yes","_doDeleteWidget","_doReplaceWidget","widgetToReplace","onDragOver","onDragEnter","siblings","onDragLeave","_extractWidgetToDrop","dragData","getData","onDrop","placeholderWidget","userConfirmed","Behavior","Error","message","getPManPlaceholderWidget","_ensureWidgetElement","isObject","$widgetEl","_checkAndApplyMask","_resolveWidgetConfiguration","maskingView","getPManWidgetConfig","isFunction","onDestroy","NonEmptyingRegion","pmanContainer","pmanPanel","cancelEdit","addIcon","saveBtn","trashArea","click @ui.cancelEdit","click @ui.addIcon","click @ui.saveBtn","applyMasking","container","_prepareForEdit","_registerEventHandler","newLayoutType","perspectiveMode","silent","_triggerEditMode","togglePannel","_savePerspective","_onChangePerspective","_doExitPerspective","originalPerspective","_clonePrespective","isNew","_getDefaultPerspectiveConfig","original","perspectiveConfig","getContainer","class","center","perspectiveChanges","GlobalMessage","showMessage","errorMessage","responseJSON","errorHtml","MessageHelper","toHtml","reset","onClickSave","popoverTarget","onClickClose","_closeToolsPanel","_openToolsPanel","pmanPanelView","attr","_initializeWidgets","pmanPanelRegion","droppable","hoverClass","accept","_documentClick","_doCleanup","placeHolderWidget","dndWidgetsHere","onShow","noConfig","clickToConfig","widgetTitle","widgetMessage","wConfig","$schema","styleLoad"],"mappings":"AAAAA,KAAAC,OAAA,yCAEAC,QAAA,EAEAC,SAAA,EACAC,MAAA,IAGAJ,KAAAC,OAAA,8CCPAI,iBAAA,qBACAC,iBAAA,aACAC,YAAA,aACAC,cAAA,eACAC,UAAA,sBACAC,gBAAA,UACAC,kBAAA,iCACAC,kCAAA,iEACAC,gBAAA,UACAC,2BAAA,SACAC,kBAAA,cACAC,iBAAA,oBACAC,yBAAA,6CACAC,iBAAA,6KACAC,mBAAA,mBACAC,YAAA,aACAC,OAAA,OACAC,QAAA,QACAC,SAAA,SACAC,qBAAA,qDClBAxB,KAAAC,OAAA,yDAAA,SAAA,MAAA,uBAAA,SAAAwB,EAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,UAAAC,YAAA,EAAA,mBAAAC,OAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,EAEA,OAAA,gFACAC,KAAAC,kBAAAF,EAAA,OAAAA,EAAAH,EAAAM,QAAA,MAAAP,EAAAA,EAAAO,MAAAP,IAAAI,EAAAH,EAAAO,cAAA,kBAAAJ,GAAAA,EAAAK,KAAAT,GAAAU,OAAA,QAAAC,YAAAP,IACA,yDACAC,KAAAC,kBAAAF,EAAA,OAAAA,EAAAH,EAAAW,cAAA,MAAAZ,EAAAA,EAAAY,YAAAZ,IAAAI,EAAAH,EAAAO,cAAA,kBAAAJ,GAAAA,EAAAK,KAAAT,GAAAU,OAAA,cAAAC,YAAAP,IACA,qRACAC,KAAAC,kBAAAF,EAAA,OAAAA,EAAAH,EAAAT,qBAAA,MAAAQ,EAAAA,EAAAR,mBAAAQ,IAAAI,EAAAH,EAAAO,cAAA,kBAAAJ,GAAAA,EAAAK,KAAAT,GAAAU,OAAA,qBAAAC,YAAAP,IACA,4HAGA,OADAT,GAAAkB,gBAAA,oDAAAjB,GACAA,ICdA5B,KAAAC,OAAA,mDAAA,cACAD,KAAAC,OAAA,kDAAA,sBAAA,kBAAA,oBAAA,sBCDA,4BACA,yFACA,0DACA,+BACA,6CACA,wDACA,iDACA,SAAA6C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EACAC,EAAAC,EAAAzB,GAEA,GAAA0B,GAAAN,EAAAO,WAAAC,QAEA5B,WAAAA,EAEA6B,YAAA,yBAEAC,WACAC,aAAA,2BAGAC,aACAC,oBACAC,gBAAAX,EACAY,gBAAA,oDAIAC,kBAAA,WACA,OACA1B,QAAAF,KAAA6B,QAAAC,SAAA5B,MACAK,cAAAP,KAAA6B,QAAAC,SAAAvB,YACApB,qBAAA8B,EAAA9B,qBAIA4C,MACAC,oBAAA,gCACAzB,cAAA,+BAGA0B,cAAA,SAAAJ,GACA7B,KAAA6B,QAAAA,MACA7B,KAAA8B,SAAA9B,KAAA6B,QAAAC,SACAlB,EAAAO,WAAAe,UAAAD,YAAAE,MAAAnC,KAAAoC,YAGAC,cAAA,SAAAC,GACAtC,KAAAuC,sBAAA,GAAAC,IACAC,UAAAzC,KAAA6B,QAAAY,QACAC,QAAAJ,EACAK,OAAA,WAGA3C,KAAA4C,aAAA5C,KAAAuC,sBAAA,cAAA,WACAvC,KAAA6C,QAAA,gBACAC,KAAA9C,OAEAA,KAAA+C,SAAA/C,KAAAuC,sBAAA,eAAA,SAAAS,GACAhD,KAAA6C,QAAA,eAAAG,IACAF,KAAA9C,QAGAiD,aAAA,WACA,UAAAjD,KAAA8B,UAAA9B,KAAA8B,SAAAoB,QAAAlD,KAAA8B,SAAAoB,OAAAC,aACA1C,EAAA2C,QAAApD,KAAA8B,SAAAoB,OAAAC,cAOAE,qBAAA,WACA,SAAArD,KAAA8B,UAAA9B,KAAA8B,SAAAoB,QAAAlD,KAAA8B,SAAAoB,OAAAI,UACAtD,KAAA8B,SAAAoB,OAAAI,SAAAC,OAAA,IAOAC,WAAA,WAGA,GAFAxD,KAAA+B,GAAAC,kBAAAyB,QACAzD,KAAAiD,aAIA,WADAjD,MAAA6C,QAAA,cAGA,IAAAP,GAAAtC,KAAA0D,mBACA1D,MAAA2D,eAAAzC,EAAA0C,kBACAtB,EAAAuB,WAAAX,OAAAC,WAAAb,EAAAuB,WAAAhC,QAAAiC,OACAxB,EAAAuB,WAAA/D,MACAE,KAAA2D,gBACA3D,KAAAqC,YAAAC,GACAtC,KAAAuB,WAAAwC,KAAA/D,KAAAuC,yBAGAvC,KAAA+B,GAAAxB,YAAAkD,OACAzD,KAAA+B,GAAAC,kBAAA+B,OACA/D,KAAA6C,QAAA,iBAIAmB,gBAAA,SAAAC,GACAjE,KAAAiD,eAAAjD,KAAA2D,iBACAM,EAAAC,KAAA,yBAAAC,SAAA,mBACAF,EAAAC,KAAA,eAAAC,SAAA,qBAIAC,YAAA,WACA,GAAApE,KAAAiD,aAGA,MAAAjD,MAAA2D,eACA3D,KAAAuC,sBAAA6B,YAEApE,KAAAqE,mBAIAC,WAAA,WACA,IAAAtE,KAAAiD,aACA,OAAA,CAGA,KAAAjD,KAAA2D,eAAA,CACA,GAAAY,IAAA,CAGA,IAAAvE,KAAAqD,qBAAA,CACA,GAAAvD,GAAAE,KAAAqE,kBACAG,EAAAxE,KAAA8B,SAAAoB,OAAAI,QACA7C,GAAAgE,KAAAD,EAAA,SAAAE,GACA5E,EAAA4E,KACAH,GAAA,KAIA,MAAAA,GAGA,MAAAvE,MAAAuC,sBAAA+B,YAGAK,mBAAA,WACA,MACA,uDADA3E,KAAA6B,QAAA+C,aAAAC,MAIAnB,oBAAA,WACA,GAAA5D,GAAAE,KAAAqE,kBAEAnB,EAAA4B,KAAAC,MAAAD,KAAAE,UAAAhF,KAAA8B,SAAAoB,SACA+B,EAAAH,KAAAC,MAAAD,KAAAE,UAAAhF,KAAA8B,SAAAD,aAcA,OAbAoD,KACAA,MAEAA,EAAAnB,SACAmB,EAAAnB,WAEA9D,KAAAkF,kCAAAhC,EAAA+B,EAAAnF,GAEA,GAAAa,GAAAwE,OACAjC,SAAAA,EACArB,UAAAoD,EACAnF,OAAAA,KAMAuE,kBAAA,WACA,GAAAvE,GAAAE,KAAA6B,QAAA+C,aAAA/C,WAMA,OALA7B,MAAA2E,qBAGA7E,EAAAA,EAAA+B,aAEA/B,GAQAoF,oCAAA,SAAAhC,EAAArB,EAAA/B,GACA,GAAAE,KAAA6B,QAAAuD,gBAAAC,wBAAA,CAIA,GAAAC,GAAAtF,KAAA6B,QAAAuD,gBAAAC,wBAAArF,KAAA8B,SACA9B,KAAA6B,QAAA0D,WACA,IAAAD,GAAA,IAAAA,EAAA/B,OAAA,CAIA,GAAAiC,IACAtF,QAAAe,EAAAwE,gBACAlF,cAAAU,EAAAyE,sBACAb,OAAA,SACAc,OAAAlF,EAAAmF,IAAAN,EAAA,SAAAO,GACA,MAAAA,GAAAC,QAGAC,GACAlB,OAAA,SACAmB,eAAAvF,EAAAmF,IAAAN,EAAA,SAAAO,GACA,MAAAA,GAAAI,QAEAC,qBAAA,GAEAC,EAAA1F,EAAAyD,KAAAoB,EAAA,SAAAc,GAAA,MAAAA,GAAAC,UACAF,KACArG,EAAAoB,EAAAoF,oBAAAH,EAAAL,KAEA,IAAAS,KACAA,GAAArF,EAAAoF,oBAAAd,EACAtC,EAAAC,WAAA1C,EAAAW,OAAAmF,EAAArD,EAAAC,WAEA,IAAAqD,KACAA,GAAAtF,EAAAoF,oBAAAP,EACAlE,EAAAiC,OAAArD,EAAAW,OAAAoF,EAAA3E,EAAAiC,QAEAZ,EAAAI,SAAAJ,EAAAI,aACAJ,EAAAI,SAAAmD,KAAAvF,EAAAoF,yBAIAA,qBAAA,eAKAI,sBAAA,SAAAxD,EAAApD,GACA,GAAA+E,GAAA3B,EAAA2B,IAYA,OAXAA,KACAA,EAAAhE,EAAA8F,cAAA7G,IAEA+E,IAEAA,EADA/E,GAAAe,EAAA+F,QAAA9G,GACA,QAGA,UAGAoD,GAAAA,EAAA,KACAA,EAAA,KAAAK,OAAA,EACA,SAEA,QAGA1C,EAAAgG,0BAAAhC,IAOAjB,oBAAA,SAAAkD,EAAAC,EAAAjH,GACA,GAAAkH,IAAA,CAqEA,OApEAvG,GAAAgE,KAAAqC,EAAA,SAAA9D,EAAAiE,GACA,GAAAC,GAAAH,EAAAE,GACAE,EAAArH,EAAAmH,EACAC,KACAH,EAAAE,GAAAC,KAGA,IAAAE,GAAAF,EAAArC,IAUA,SATAuC,GAAApE,EAAA6B,OAEAuC,EAAAlG,EAAAwF,oBAAA1D,EAAAmE,IAGAtG,EAAAwG,cAAAD,KACAJ,GAAA,GAGAhE,EAAA6B,MACA,IAAA,QAWA,GAVAqC,EAAApD,QACArD,EAAA6G,SAAAJ,GACApD,UACAyD,aAIAL,EAAAM,QACAN,EAAApD,OAAAyD,KAAAL,EAAAM,OAEA,WAAAxE,EAAAwE,MAAA3C,KAAA,CACAqC,EAAApD,OAAAyD,KAAA1C,OAAAhE,EAAAwG,cAAAH,EAAApD,OAAAyD,KAAA1C,QACAmC,GAAA,GAEAE,EAAApD,OAAAyD,KAAAzD,SAAAoD,EAAApD,OAAAyD,KAAAzD,WACAqD,GAAA,IAAAA,EAAA5D,SACAzD,EAAAmH,GAAAE,OAEAjG,GAAA0C,kBACAZ,EAAAwE,MAAArE,WAAA+D,EAAApD,OAAAyD,KAAAzD,OACAqD,EAAA,MAEAH,GAAA,GAGAG,IACArH,EAAAmH,IAAA,MAEA,MACA,KAAA,SACAE,IACArH,EAAAmH,GAAAE,MAEAD,EAAApD,SACAoD,EAAApD,UAEA5C,GAAA0C,kBAAAZ,EAAAG,WACA+D,EAAApD,OAAAqD,KAEAH,GAAA,EAEA,MACA,SACAG,IACArH,EAAAmH,GAAA,SAKAD,KAIAxE,EAAAxB,EAAAI,QACAC,YAAA,WAEA,MADAL,GAAAkB,UAAAb,UAAAjB,KAAAJ,MACA,4BAEAiC,cAAA,SAAAJ,GACAb,EAAAmB,MAAAnC,KAAAoC,aAMA,OAFA3B,GAAAW,OAAAoB,EAAAN,UAAApB,GAEAI,IC5VAvD,KAAAC,OAAA,gDAAA,SAAA,MAAA,uBAAA,SAAAwB,EAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,UAAAiI,IAAA,SAAA9H,EAAAC,EAAAC,EAAAC,EAAA4H,EAAAC,GACA,GAAAC,EAEA,OAAA,2GACA5H,KAAAC,iBAAAD,KAAA6H,OAAA,OAAAD,EAAA,MAAAjI,EAAAA,EAAAkE,WAAAlE,GAAAiI,EAAA1H,MAAA0H,EAAAjI,IACA,MACA,OAAAiI,EAAAhI,EAAA,GAAAQ,KAAAT,EAAA,MAAAgI,EAAA,GAAAA,EAAA,GAAAG,UAAAH,EAAA,IAAAtH,OAAA,KAAAC,UAAAyH,KAAA/H,KAAAgI,QAAA,EAAAlI,EAAA,EAAA4H,EAAAC,GAAAM,UAAAjI,KAAAkI,QAAAN,EAAA,IACA,0BACA5H,KAAAC,iBAAAD,KAAA6H,OAAA,OAAAD,EAAA,MAAAjI,EAAAA,EAAAkE,WAAAlE,GAAAiI,EAAA1H,MAAA0H,EAAAjI,IACA,uDACAK,KAAAC,iBAAAD,KAAA6H,OAAA,OAAAD,EAAA,MAAAjI,EAAAA,EAAAkE,WAAAlE,GAAAiI,EAAAO,KAAAP,EAAAjI,IACA,sDACAyI,IAAA,SAAAzI,EAAAC,EAAAC,EAAAC,GACA,MAAA,qBACAL,YAAA,EAAA,mBAAAC,OAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAA4H,EAAAC,GACA,GAAAC,EAEA,OAAA,6CACA5H,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAAO,MAAAP,EAAAA,IACA,oDACAK,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAAO,MAAAP,EAAAA,IACA,8RACA,OAAAiI,EAAAhI,EAAA6E,KAAArE,KAAAT,EAAA,MAAAA,EAAAA,EAAA0I,QAAA1I,GAAAU,OAAA,OAAAC,UAAAyH,KAAA/H,KAAAgI,QAAA,EAAAlI,EAAA,EAAA4H,EAAAC,GAAAM,UAAAjI,KAAAkI,QAAAN,EAAA,IACA,oCACAU,aAAA,GAEA,OADAhJ,GAAAkB,gBAAA,2CAAAjB,GACAA,IC3BA5B,KAAAC,OAAA,yDAAA,SAAA,MAAA,uBAAA,SAAAwB,EAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,UAAAC,YAAA,EAAA,mBAAAC,OAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAA,6EACAE,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAA4I,OAAA5I,EAAAA,IACA,+CACAK,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAA6I,KAAA7I,EAAAA,IACA,qBAGA,OADAL,GAAAkB,gBAAA,oDAAAjB,GACAA,IAIA5B,KAAAC,OAAA,iDAAA,SCdA,sBACA,kBACA,oBACA,sBACA,kBACA,0DACA,iDACA,kDACA,uCACA,+CACA,yDACA,SAAAwB,EAAAqB,EAAAC,EAAAC,EAAAC,EAAA6H,EAAA1H,EACAyB,EAAAkG,EACAC,EACAC,EAAAC,GACA,YAEA,IAAAC,GAAA1J,EAAA0J,QACArI,GAAA6G,SAAAwB,GACAC,qBAAA,GACAC,sBAAA,IAGA,IAAAC,GAAArI,EAAAsI,SAAA9H,QAEAa,cAAA,SAAAJ,GACAjB,EAAAsI,SAAAhH,UAAAD,YAAAE,MAAAnC,KAAAoC,YAGA+G,UAAA,MAEA9H,YAAA,oBAEA7B,WAAAoJ,EAEAhH,kBAAA,WACA,GAAAwH,GAAA,GAAAzI,GAAA0I,WAAArJ,KAAA0C,MAAAmB,WAAAwE,SACAiB,EAAA5I,EAAA,4CACAoH,EAAA,IAAAwB,EAAA/F,MACA,QACA8E,UAAAe,EAAAG,OACAzB,YAAAA,IAIA/F,MACAyH,kBAAA,yBACAC,mBAAA,0BACAC,sBAAA,kCACAC,SAAA,qBAGAC,UACAC,4BAAA,SACAC,uBAAA,cACAC,qBAAA,aAGAC,SAAA,WACA,GAAAC,GAAAjK,KAAA+B,GAAAyH,gBAAAU,SAAA,wBACAlK,MAAA+B,GAAAyH,gBAAAW,YAAA,yBACAnK,KAAA6B,QAAAuI,WAAAC,IAAAnG,KAAA,sBAAAoG,YAAA,0BACApG,KAAA,0BAAAoG,YAAA,yBACAL,IACAjK,KAAAqK,IAAAlG,SAAA,0BACAnE,KAAA+B,GAAAyH,gBAAArF,SAAA,2BAIAX,WAAA,WAEA,GADA9C,EAAA,4CACA6C,OAEAvD,KAAAuK,0BACA,CAEA,GAAAC,GAAA,kBAAAC,UAAAC,cAAA,QAAAC,UACA3K,KAAA4K,8BAAAJ,GACAxK,KAAA+B,GAAA4H,OAAAkB,GAAA,YAAA7K,KAAA8K,sBAAAhI,KAAA9C,SAKAuK,sBAAA,WACA,GAAAQ,GAAA/K,KACAgL,EAAAhL,KAAAqK,IAAAnG,KAAA,qBAAA+G,QACAD,GAAAlL,KAAA,cAAAE,KAAA0C,MAAAwI,IAAA,YACAF,EAAAG,UACAC,eAAA,2CACA,yCACAC,cAAA,wBACAtL,SAAA,SAAAuL,EAAAvJ,GAEA,GAAAwJ,GAAAxJ,EAAAkJ,SAAAO,OAWA,OAVAT,GAAAU,mBAAA,GAAAC,IACAxL,QAAA6K,EAAArI,MAAAwI,IAAA,WAAAK,GAAAL,IAAA,SACAS,YAAAZ,EAAArI,MAAAwI,IAAA,WAAAK,KAEAR,EAAAU,mBAAAG,SAEAb,EAAAU,mBAAApB,IAAAwB,MAAA,SACAd,EAAAU,mBAAApB,IAAAyB,OAAA,SACAf,EAAAU,mBAAApB,IAAA0B,KAAAC,UAAA,MACAjB,EAAAU,mBAAApB,IAAA4B,SAAAlB,EAAAlJ,QAAAuI,WAAAC,IAAA6B,QAAA,iBACAnB,EAAAU,mBAAApB,KAEA8B,SAAA,WACAC,YAAA,UACAC,YAAAC,MAAAxD,EAAAC,mBAAAwD,OAAAzD,EAAAE,qBACAwD,QAAA,SAAAlB,EAAAvJ,GACAA,EAAAwF,KAAAwE,IAAA,UAAA,SACAhK,EAAA0K,YAAAV,IAAA,UAAA,SACAhB,EAAA2B,aAEAC,OAAA,WACA5B,EAAA6B,cAKA9B,wBAAA,SAAA+B,GACA,GAAAC,GAAAD,EAAAC,cACAC,EAAArM,EAAA,0BAAAsM,QACArD,EAAA3J,KAAA0C,MAAAwI,IAAA,WAAAxK,EAAAmM,EAAAI,eAAAhC,SAAAO,QACAuB,GAAA7I,KAAA,yBAAAgJ,KAAAvD,EAAAuB,IAAA,UACA6B,EAAAhB,KACAO,MAAAa,KAAAC,IAAA,EAAAN,EAAAO,MAAAvE,EAAAC,oBAAA,KACAwD,OAAAY,KAAAC,IAAA,EAAAN,EAAAQ,MAAAxE,EAAAE,qBAAA,KACAuE,WAAA,WACAC,gBAAA,SACAvB,SAAAxB,SAAAjC,MAEAiF,WAAA,WACAV,EAAAW,WAEAX,EAAAlC,GAAA,YAAApK,EAAAqC,KAAA,SAAAwI,GACA,GAAA3B,GAAA3J,KAAA0C,MAAAwI,IAAA,WAAAxK,EAAAmM,EAAAI,eAAAhC,SAAAO,QACAF,GAAAwB,cAAAa,aACAC,QAAA,OAAA9I,KAAAE,UAAA2E,EAAAkE,WACA7N,KAAA0M,aACA1M,OACA+M,EAAAlC,GAAA,UAAApK,EAAAqC,KAAA,SAAAwI,GACAtL,KAAA4M,WACA5M,OACA+M,EAAA,GAAApC,YAGAmD,cAAA,SAAAxC,GACA,GAAA3B,GAAA3J,KAAA0C,MAAAwI,IAAA,WAAAxK,EAAA4K,EAAA2B,eAAAhC,SAAAO,SACAmC,EAAArC,EAAAwB,cAAAa,aACAnO,EAAAkB,EAAA,yBACAlB,GAAA0E,KAAA,yBAAAgJ,KAAAvD,EAAAuB,IAAA,UACAlL,KAAA4K,+BACA+C,EAAAC,QAAA,OAAA9I,KAAAE,UAAA2E,EAAAkE,WAEAF,EAAAI,aAAAvO,EAAA,GAAAsJ,EAAAE,oBACAF,EAAAC,qBAEA/I,KAAA0M,aAGA9B,6BAAA,WAEA,MAAA,iBADAoD,OAAAC,cAAAD,OAAAE,WACAhM,WAGAiM,YAAA,SAAA7C,GACAtL,KAAA4M,WAGAF,YAAA,WACA1M,KAAAqK,IAAA6B,QAAA,oBAAA/H,SAAA,wBACAzD,EAAA+J,SAAAjC,MAAArE,SAAA,yBAGAyI,UAAA,WACA5M,KAAAqK,IAAA6B,QAAA,oBAAA5B,YAAA,wBACA5J,EAAA+J,SAAAjC,MAAA8B,YAAA,2BAKAoB,EAAA9K,EAAAsI,SAAA9H,QACAa,cAAA,SAAAJ,GACAjB,EAAAsI,SAAAhH,UAAAD,YAAAE,MAAAnC,KAAAoC,YAGA+G,UAAA,MAEA9H,YAAA,wBAEA7B,WAAAqJ,EAEAjH,kBAAA,WACA,OACA2G,SAAAvI,KAAA6B,SAAA7B,KAAA6B,QAAA3B,MACAsI,OAAAE,EAAApK,kBAIAkF,WAAA,WACAxD,KAAAqK,IAAAvK,KAAA,cAAAE,KAAA6B,QAAA8J,aA4GA,OAxGA/K,GAAAsI,SAAA9H,QACA+H,UAAA,MAEA3J,WAAAoJ,EAEA3G,cAAA,SAAAJ,GACAA,IAAAA,MACAA,EAAA/B,OAAA+B,EAAA/B,SAKAE,KAAAwB,WAAAf,EAAA2N,IAAApO,KAAAwB,UAAA,SAAA6M,EAAAC,GACA,MAAAD,GAAA3M,gBAAAX,MAEAf,KAAAwB,UAAAf,EAAAW,QACAK,oBACAC,gBAAAX,EACAY,gBAAA,kBACA4M,mBAAA,EAEAC,sBAAA,KAEAxO,KAAAwB,YAGAZ,EAAAsI,SAAA9I,KAAAJ,KAAA6B,EAEA,IAAAkJ,GAAA/K,IACAA,MAAAyO,WAAA,GAAA9F,GACA3I,KAAAyO,WAAAC,QAAAC,KAAA,WACA5D,EAAA6D,WAAA7D,EAAA8D,wBAEA9D,EAAAa,SACAb,EAAAlI,QAAA,oBAIAiM,aAAA,WACArO,EAAAsO,QAAA/O,KAAA,eAGAqB,YAAA,iBAEAuK,SAAA,WACA5L,KAAA4O,YAAA5O,KAAA4O,WAAAnK,KAAAzE,KAAAgP,aAGAA,aAAA,SAAAtM,GACA,GAAA0H,GAAApK,KACAiP,EAAA,GAAAhG,IAAAvG,QAAAA,EAAA0H,aAAAA,GACA6E,GAAArD,SACAlL,EAAAV,KAAAkP,IAAAC,OAAAF,EAAAC,KAGAL,wBAAA,WAEA,GAAAO,GAAA,GAAAzO,GAAA0I,WACAhB,EAAArI,KAAAyO,WAAAY,OAAA,SAAA1F,GACA,GAAA7H,GAAA6H,EAAAuB,IAAA,WACA,KAAApJ,IAAArB,EAAA6O,IAAAxN,EAAA,WAAArB,EAAA6O,IAAAxN,EAAA,eACA,OAAA,CAEA,IAAAoB,GAAA4B,KAAAC,MAAAD,KAAAE,UAAAlD,EAAAoB,aACArB,EAAAiD,KAAAC,MAAAD,KAAAE,UAAAlD,EAAAD,aAGA,SAFAW,EAAAoB,kBACAV,EAAAC,WAAAtB,EAAAiC,gBAuBA,OAhBArD,GAAAgE,KAAA4D,EAAA,SAAAsB,GACA,GAAA7H,GAAA6H,EAAAuB,IAAA,WACAvB,GAAA4F,IAAA,QAAAzN,GAAAA,EAAA5B,OAAAwI,EAAAtK,WAGAqC,EAAAgE,KAAAhE,EAAA+O,QAAAnH,EAAA,SAAAsB,GACA,MAAAA,GAAA8F,aAAAC,KACA,SAAAC,EAAArB,GACA,GAAApO,GAAAO,EAAAmP,MAAAD,GAAAF,aAAAvE,IAAA,QACAhL,GAAAA,EAAAA,EAAA2P,QAAA,YAAA,IAAAnH,EAAAtK,QACAgR,EAAAU,KACAJ,KAAApB,EACApO,QAAAA,EACAmI,UAAAsH,MAGAP,GAGAW,yBAAA,aAKAC,gBAAA,WACAhQ,KAAAqK,IAAA4F,QACAjQ,KAAA4L,cChTAjO,KAAAC,OAAA,mDCAA,sBACA,kDAEA,uDACA,SAAA6C,EAAAiI,EAAAwH,GAEA,GAAAC,KAEAjQ,QAAAwI,EAAA/J,eACAkG,OAAA,oBACAsD,OAAA,oBAGAjI,QAAAwI,EAAAhK,gBACAmG,OAAA,OACAsD,OAAA,oBAQA,OAJA+H,KACAC,EAAA1P,EAAA2P,MAAAD,EAAAD,IAGAC,ICtBAxS,KAAAC,OAAA,+CAAA,SAAA,MAAA,uBAAA,SAAAwB,EAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,UAAAC,YAAA,EAAA,mBAAAC,OAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAA,0EACAE,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAA3B,eAAA2B,EAAAA,IACA,aACAK,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAA3B,eAAA2B,EAAAA,IACA,4DACAK,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAA1B,eAAA0B,EAAAA,IACA,aACAK,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAA1B,eAAA0B,EAAAA,IACA,8TACAK,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAArB,gBAAAqB,EAAAA,IACA,iCAGA,OADAL,GAAAkB,gBAAA,0CAAAjB,GACAA,ICfA5B,KAAAC,OAAA,8CAAA,SAAA,MAAA,uBAAA,SAAAwB,EAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,UAAAC,YAAA,EAAA,mBAAAC,OAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAA,eACAE,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAA0B,UAAA1B,EAAAA,IACA,YACAK,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAAO,MAAAP,EAAAA,IACA,uBACAK,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAAmI,UAAAnI,EAAAA,IACA,gBACAK,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAAO,MAAAP,EAAAA,IACA,6CACAK,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAA0Q,UAAA1Q,EAAAA,IACA,uBAGA,OADAL,GAAAkB,gBAAA,yCAAAjB,GACAA,ICfA5B,KAAAC,OAAA,yCAAA,SAAA,MAAA,uBAAA,SAAAwB,EAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,UAAAC,YAAA,EAAA,mBAAAC,OAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,EAEA,OAAA,iHACAC,KAAAC,kBAAAF,EAAA,OAAAA,EAAAH,EAAA0Q,aAAA,MAAA3Q,EAAAA,EAAA2Q,WAAA3Q,IAAAI,EAAAH,EAAAO,cAAA,kBAAAJ,GAAAA,EAAAK,KAAAT,GAAAU,OAAA,aAAAC,YAAAP,IACA,oEACAC,KAAAC,kBAAAF,EAAA,OAAAA,EAAAH,EAAAvB,gBAAA,MAAAsB,EAAAA,EAAAtB,cAAAsB,IAAAI,EAAAH,EAAAO,cAAA,kBAAAJ,GAAAA,EAAAK,KAAAT,GAAAU,OAAA,gBAAAC,YAAAP,IACA,yGAGA,OADAT,GAAAkB,gBAAA,oCAAAjB,GACAA,ICZA5B,KAAAC,OAAA,iDAAA,cACAD,KAAAC,OAAA,gDAAA,UAAA,SAAA,kBAAA,oBCDA,sBAAA,sBACA,wCACA,0DACA,gDACA,kDACA,kDACA,8CACA,6CACA,wCACA,wDACA,+CAEA,SAAA2S,EAAAnR,EAAAsB,EAAAC,EAAAF,EAAAG,EAAA4P,EAAAzP,EACA0P,EAAAC,EAAAhI,EAAAlJ,EAAAmR,EAAAC,EACA/H,GACA,YAEA,IAAAgI,GAAAjQ,EAAAsI,SAAA9H,QACA+H,UAAA,MAEA3J,WAAAA,EAEAoK,UACAkH,sBAAA,gBAGA/O,MACAgP,YAAA,mBACAC,aAAA,oBACAC,YAAA,mBACAC,YAAA,mBACA1R,WAAA,yBAGA6B,YAAA,kBAEAG,aACAC,oBACAC,gBAAAX,EACAY,gBAAA,mBACA4M,mBAAA,EACAC,sBAAA,IAIA5M,kBAAA,WACA,OACA5D,iBAAA0K,EAAA1K,eACAC,iBAAAyK,EAAAzK,eACAK,kBAAAoK,EAAApK,kBAIA6S,cAAA,WACAnR,KAAAoR,cAAAC,cAAA,gBACArR,KAAA6C,QAAA,qBAGAW,WAAA,WACAxD,KAAA+B,GAAAmP,UAAAzN,OACAzD,KAAA+B,GAAAkP,UAAAxN,OACAzD,KAAAsR,gBAAA,GAAA1Q,GAAA2Q,QACArC,KAAAlP,KAAA+B,GAAAmP,YAEAlR,KAAAoR,cAAA,GAAAX,GACAzQ,KAAAsR,gBAAAvN,KAAA/D,KAAAoR,eACApR,KAAAwR,eACAxR,KAAA+C,SAAA/C,KAAAoR,cAAA,gBAAA,WACApR,KAAAyR,iBACAzR,KAAA+B,GAAAkP,UAAAlN,OACA/D,KAAA+B,GAAAmP,UAAAnN,UAIA9B,cAAA,SAAAJ,GACA7B,KAAA6B,QAAAA,MACAjB,EAAAsI,SAAAhH,UAAAD,YAAAE,MAAAnC,KAAAoC,WACAoO,EAAAkB,MAAA1R,MACAA,KAAA+C,SAAA/C,KAAA,cAAA,WACAA,KAAA2R,UAAA3R,KAAA2R,SAAAC,aAIAC,eAAA,SAAAhQ,GACA,GAAAiQ,GAAAjQ,EAAA/B,KAAA+B,GACA/B,QACA0H,QAAAkJ,GAGAoB,GAAAhK,YAAAgK,EAAAhS,KAAAgI,UACAgK,EAAAC,cAAA,mBACAD,EAAAE,SAAAhS,KAAA6B,QAAAmQ,SAEAhS,KAAA+B,GAAAgP,UAAA5M,SAAA,eACAnE,KAAAiS,WAAA,GAAArR,GAAA2Q,QACArC,KAAAlP,KAAA+B,GAAAiP,aAEAhR,KAAA2R,SAAA,GAAAO,GAAAJ,GACA9R,KAAAiS,WAAAlO,KAAA/D,KAAA2R,UAGA3R,KAAA+C,SAAA/C,KAAA2R,SAAA,iBAAA,WACA3R,KAAA+B,GAAAgP,UAAAzG,YAAA,iBACAvH,SAAA/C,KAAA2R,SAAA,aAAA,WACA3R,KAAA2R,SAAAC,eAKAO,EAAAvR,EAAAsI,SAAA9H,QACAa,cAAA,SAAAJ,GACAjB,EAAAsI,SAAAhH,UAAAD,YAAAE,MAAAnC,KAAAoC,YAGA+G,UAAA,MAEA3J,WAAAmR,EAEA/O,kBAAA,WACA,OACAkG,cAAA9H,KAAA6B,QAAAiG,UACAzG,YAAArB,KAAA6B,QAAAkQ,cACA1B,YAAArQ,KAAA0C,MAAAwI,IAAA,UAIAtB,UACAwI,4CAAA3R,EAAA4R,SAAA,WACArS,KAAA6C,QAAA,kBACA,KAAA,IAGAW,WAAA,WACAxD,KAAA0C,MAAAwI,IAAA,UAAAlL,KAAA6B,QAAAmQ,SAAAM,YAAApH,IAAA,eAAArG,MACA7E,KAAA6C,QAAA,iBAMAqP,EAAAtR,EAAA2R,cAAAnR,QAEAa,cAAA,SAAAJ,GA2BA,GA1BAA,IAAAA,MACAA,EAAA/B,OAAA+B,EAAA/B,SAKAE,KAAAwB,WAAAf,EAAA2N,IAAApO,KAAAwB,UAAA,SAAA6M,EAAAC,GACA,MAAAD,GAAA3M,gBAAAX,MAEAf,KAAAwB,UAAAf,EAAAW,QACAK,oBACAC,gBAAAX,EACAY,gBAAA,kBACA4M,mBAAA,EAEAC,sBAAA,KAEAxO,KAAAwB,YAGAZ,EAAA2R,cAAAnS,KAAAJ,KAAA6B,GAMA7B,KAAA6B,QAAA/B,MAAAE,KAAA6B,QAAA/B,KAAA0H,MAAA,CACA,IAAAxH,KAAA4O,WAAA,CACA,GAAA4D,GAAA7R,EAAA0I,WAAAjI,QACAsB,QAAA/B,EAAAwE,MAAA/D,QACAqR,cAAA,QAGAzS,MAAA4O,WAAA,GAAA4D,GAEAxS,KAAA4O,WAAAkB,IAAA9P,KAAA6B,QAAA/B,KAAA0H,SAIAzF,MACA2Q,OAAA,eAEArR,YAAA,iBAEAuI,UACA+I,iBAAA,eAGAC,eACAC,gBAAA,iBACAC,aAAA,aAGAtT,WAAAoR,EAEAhP,kBAAA,WACA,OACAvD,gBAAAqK,EAAArK,gBAIA0U,qBAAA,iBAEAC,YAAAb,EAEAc,mBAAA,WACA,MAAAjT,MAAA6B,SAGAqR,cAAA,SAAA5H,GACAA,EAAA6H,iBACA7H,EAAA8H,kBACApT,KAAA6C,QAAA,eAGAwQ,YAAA,SAAAL,GACAhT,KAAAqK,IAAAnG,KAAA,qBAAAoG,YAAA,eACA0I,EAAA3I,IAAAnG,KAAA,qBAAAC,SAAA,gBAGAmP,iBAAA,SAAAN,GACA,GAAAjI,GAAA/K,IACArC,MAAA4S,SAAA,wCAAA,SAAAgD,GACAA,EAAAC,eAAA9K,EAAAnK,gCAAAmK,EAAA1K,gBAEAyV,WACAC,WAAA,EACAC,WAAAjL,EAAAlK,cACAoV,UAAA,EACAC,UAAAnL,EAAAjK,4BAGAkQ,KAAA,SAAAgF,GACAA,IACA5I,EAAAsI,UAAAL,GACAjI,EAAAlJ,QAAAmQ,SAAAnP,QAAA,gBAAAmQ,EAAAtQ,MAAAwI,IAAA,gBAQA,OAAA2F,KCrPAlT,KAAAC,OAAA,yCAAA,SAAA,MAAA,uBAAA,SAAAwB,EAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,UAAAC,YAAA,EAAA,mBAAAC,OAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAA,0SACAE,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAAZ,UAAAY,EAAAA,IACA,yOACAK,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAAX,KAAAW,EAAAA,IACA,KACAK,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAAX,KAAAW,EAAAA,IACA,uGACAK,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAAT,OAAAS,EAAAA,IACA,KACAK,KAAAC,iBAAAD,KAAA6H,OAAA,MAAAlI,EAAAA,EAAAT,OAAAS,EAAAA,IACA,8KAGA,OADAL,GAAAkB,gBAAA,oCAAAjB,GACAA,IChBA5B,KAAAC,OAAA,2CAAA,cACAD,KAAAC,OAAA,oDCAAC,QAAA,EAEAC,SAAA,EACAC,MAAA,IAGAJ,KAAAC,OAAA,yDCPAkW,mBAAA,2CACAC,qBAAA,gBACAC,oBAAA,4CACAC,sBAAA,iBACAxO,kBAAA,cACAC,wBAAA,uIACAwO,eAAA,kBCLAvW,KAAAC,OAAA,8DAAA,SAAA,MAAA,uBAAA,SAAAwB,EAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,UAAAC,YAAA,EAAA,mBAAAC,OAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,EAEA,OAAA,qGACAC,KAAAC,kBAAAF,EAAA,OAAAA,EAAAH,EAAAsU,eAAA,MAAAvU,EAAAA,EAAAuU,aAAAvU,IAAAI,EAAAH,EAAAO,cAAA,kBAAAJ,GAAAA,EAAAK,KAAAT,GAAAU,OAAA,eAAAC,YAAAP,IACA,sKAGA,OADAT,GAAAkB,gBAAA,yDAAAjB,GACAA,ICVA5B,KAAAC,OAAA,gEAAA,cC4BAD,KAAAC,OAAA,mEAAA,UAAA,OAAA,sBAAA,kBACA,sBAAA,kBAAA,oBAAA,iBACA,kCACA,iDACA,wDACA,6DACA,8DACA,SAAA2S,EAAA4D,EAAA1T,EAAAC,EAAAE,EAAA6H,EAAA9H,EAAAyT,EAAAC,EACA7R,EAAAvB,EAAAqT,GACA,YAKA,IAAAC,GAAA3T,EAAAsI,SAAA9H,QACA5B,WAAA8U,EACAjT,YAAA,WACA,MAAAkT,GAAAlT,WAGAO,kBAAA,WACA,OACAsS,eAAAjT,EAAAiT,eAIAnS,MACAyS,SAAA,0BACAC,UAAA,6BAGA7K,UACA8K,oBAAA,eACAC,OAAA,SACAC,WAAA,aACAC,YAAA,cACAC,YAAA,cACAC,mBAAA,iBAGA9S,cAAA,SAAAJ,GACAjB,EAAAsI,SAAA/G,MAAAnC,KAAAoC,WACApC,KAAAgV,YAAA,EACAhV,KAAA8B,aAAAmT,GACAjV,KAAAoF,gBAAAvD,EAAAuD,gBACApF,KAAAuF,WAAA1D,EAAA0D,WACAvF,KAAA4E,aAAA/C,EAAA+C,cAGAsQ,kBAAA,WACA,QAAAlV,KAAA4E,eAAAnE,EAAA2C,QAAApD,KAAA4E,eACA,4DAAA5E,KAAA4E,aAAAC,MACA,uBAAA7E,KAAA4E,aAAAC,MAGArB,WAAA,WACA,GAAAxD,KAAAkV,kBAAA,CAIA,GAAAnK,GAAA/K,IACAA,MAAAmV,gBAAAxG,KAAA,SAAA7M,GACAiJ,EAAAqK,mBAAA,WACArK,EAAAsK,6BAKAC,eAAA,WACAtV,KAAAkV,mBAKAlV,KAAAmV,gBAAAxG,KAAA,SAAA7M,GACA9B,KAAAuV,oBAAAzT,IACAgB,KAAA9C,QAGAuV,sBAAA,SAAAzT,GAOA,GANA9B,KAAAwV,6BAGA/M,EAAAgN,UAAAhL,SAAAiL,eACAjL,SAAAiL,cAAAC,OAEA3V,KAAA4V,WAAA9V,KAAA,gBAIA,MAFAE,MAAA4V,WAAAC,aAAA,gBACA7V,KAAA8V,iBAAA9V,KAAA8V,gBAAAzL,IAAAqD,SAGA1N,MAAAoF,gBAAAiF,IAAAnG,KAAA,IAAAqQ,EAAAlT,UACA,8BAAAwU,aAAA,WAEA7V,KAAA8V,gBAEA9V,KAAA+V,eAEA/V,KAAAoV,sBAIAA,qBAAA,SAAAY,GACAhW,KAAA8V,gBAAA,GAAAtT,GAAA/B,EAAA6G,UACA7E,UAAAzC,KAAAoF,gBAAAvD,QAAAY,QACAX,WAAA9B,KAAA8B,UACA9B,KAAA6B,UACAmU,GACAhW,KAAA8V,gBAAAlT,aAAA5C,KAAA8V,gBAAA,cAAAE,GAEAhW,KAAA8V,gBAAAlK,SACA5L,KAAA8V,gBAAA/S,SAAA/C,KAAA8V,gBAAA,eACA9V,KAAAiW,eAAAnT,KAAA9C,QAGAwV,6BAAA,WACA,GAAAU,GAAAlW,KAAAmW,4BACAnW,MAAA4V,WAAA5V,KAAAqK,IAAAnG,KAAA,sBAAAgS,EAAAE,WACAF,EAAAG,SACAH,EAAAE,UAAA,SAAAF,EAAAE,UAAA,OAAA,SAEApW,KAAAoW,UAAAF,EAAAE,UACApW,KAAAsW,kBAAA5V,EACA,iMACAV,KAAAsW,kBAAAvK,IAAA,YAAAmK,EAAAK,eAAA,OAMAR,eAAA,WACA,GAAAS,IACAC,QAAA,EACAC,UAAA1W,KAAA8V,gBAAA5G,GACArM,UAAA,SACA8T,YACAC,WAAA5W,KAAA6B,QAAAgV,oBACAC,UAAA,IAEAV,YAAApW,KAAAoW,UACA5W,WAAAQ,KAAAsW,kBACAS,aAAA,EAEA/W,MAAA4V,WAAAC,aAAAW,GACAxW,KAAA4V,WAAAoB,IAAA,uBACAnM,GAAA,sBAAA7K,KAAAiX,mBAAAnU,KAAA9C,OACAA,KAAA4V,WAAAC,aAAA,QAEA7V,KAAA8V,gBAAA9R,cAAAhE,KAAAsW,mBACAtW,KAAA8V,gBAAAzL,IAAAnG,KAAA,wBAAArB,QAAA,uBACA,IAAAoB,GAAAjE,KAAA4V,WAAAsB,KAAA,iBACAC,EAAAlT,EAAAC,KAAA,+BACA,IAAAiT,EAAA5T,OAAA,CACA4T,EAAAA,EAAAvH,OACA,IAAAwH,GAAAD,EAAAjT,KACA,uEACAkT,GAAA7T,QACA6T,EAAAC,QAGArX,KAAAsX,yBACAtX,KAAA8V,gBAAAjT,QAAA,qBAGAyU,yBAAA,WACA5W,EAAA,8CAAAmK,GAAA,SAAA7K,KAAAuX,KACAC,OAAAxX,MAEAA,KAAAyX,uBACA/W,EAAA,mBAAAmK,GAAA,SAAA7K,KAAAuX,KACAC,OAAAxX,MACAA,KAAAyX,uBACA/W,EAAAsN,QAAAnD,GAAA,UAAA7K,KAAAuX,KACAC,OAAAxX,MACAA,KAAA0X,uBAGAA,uBAAA,SAAApM,GACAA,EAAAxL,KAAA0X,KAEA5B,WAAAC,aAAA,YAGA8B,2BAAA,WACAjX,EAAA,8CAAAsW,IAAA,SAAAhX,KAAAuX,IACAvX,KAAAyX,uBACA/W,EAAA,mBAAAsW,IAAA,SAAAhX,KAAAuX,IAAAvX,KAAAyX,uBACA/W,EAAAsN,QAAAgJ,IAAA,UAAAhX,KAAAuX,IAAAvX,KAAA0X,uBAMAT,qBAAA,WACAjX,KAAA2X,2BACA3X,KAAAqV,wBAGAA,uBAAA,WACA,GAAAuC,GAAA5X,KAAA8V,gBAAAxR,WACAzC,EAAA7B,KAAA8V,gBAAA1R,WACApE,MAAAoF,gBAAAvC,QAAA,yBACA0C,aAAAvF,KAAAuF,WACAqS,UAAAA,EACA/V,UAAAA,IAEA+V,EACA5X,KAAAuF,WAAA8E,IAAAC,YAAA,kBAEAtK,KAAAuF,WAAA8E,IAAAlG,SAAA,mBAOAsT,wBAAA,SAAAnM,GACA,GAAAP,GAAAO,EAAAxL,KAAA0X,IACA9W,GAAA4K,EAAAuM,QAAA3L,QAAA,iBAAA3I,QAIAwH,EAAAV,IAAAyN,GAAAxM,EAAAuM,SAAA9M,EAAAV,IAAAiF,IAAAhE,EAAAuM,QAAAtU,QAIA7C,EAAAqX,SAAAtN,SAAAa,EAAAuM,UAIA9M,EAAA4M,2BACA5M,EAAA6K,WAAAC,aAAA,aAGAI,iBAAA,SAAAjT,GACAA,EAAA3C,OAAAmC,EAAA8D,qBAEAtG,KAAAoF,gBAAAvC,QAAA,qBAAA7C,KAAA6B,QAAA0D,WAAAvC,EAAAgV;mHAEAhY,KAAA4V,WAAAC,aAAA,aAOAoC,yBAAA,WAIAjY,KAAA8V,gBAAAzL,IAAAlG,SAAA,uBACAnE,KAAA8V,gBAAAzL,IAAAlG,SAAA,uBACAnE,KAAA8V,gBAAAzL,IAAA4B,SAAAxB,SAAAjC,MACAxI,KAAA8V,gBAAAzL,IAAAnG,KAAA,wBAAArB,QAAA,uBACA,IAAAqV,GAAAlY,KAAA8V,gBAAAzL,IAAAwB,OAMA,OALA7L,MAAA8V,gBAAAzL,IAAAnG,KAAA,wBAAAX,OAAA,IACA2U,GAAAlY,KAAA8V,gBAAAzL,IAAAnG,KAAA,wBAAA,GAAAiU,YACAnY,KAAA8V,gBAAAzL,IAAAnG,KAAA,wBAAA,GAAAkU,aAEApY,KAAA8V,gBAAAzL,IAAAC,YAAA,uBACA4N,GAGAG,8BAAA,WACA,GAEAC,IAFAtY,KAAAqK,IAAAwB,QAEAnL,EAAA+J,UAAAoB,SACA0M,EAAAvY,KAAAqK,IAAAnG,KAAA,2BAAAsU,SAAAjM,KACAkM,EAAAH,EAAAtY,KAAAqK,IAAAnG,KAAA,4BAAAsU,SAAAjM,IAwBA,QArBAmM,SACAtC,YAAA,QACAC,UAAA,EACAE,iBAAAkC,GAEAE,aACAvC,YAAA,QACAC,UAAA,EACAE,iBAAA+B,EAAAG,GAEAlM,QACA6J,YAAA,OACAC,UAAA,EACAE,iBAAAgC,GAEAK,YACAxC,YAAA,OACAC,UAAA,EACAE,iBAAA+B,EAAAC,KAMApC,6BAAA,WACA,GAGA0C,GAAAC,EAAAC,EAHAC,EAAA7E,GAAAA,EAAA8E,SAAAC,IACAhB,EAAAlY,KAAAiY,yBAAA,GACAkB,EAAAnZ,KAAAqY,8BAGAe,EAAAJ,GAEAG,EAAA5M,KAAA4M,EAAAT,MAAAS,EAAAR,UAAAQ,EAAAP,WADAO,EAAAT,MAAAS,EAAA5M,KAAA4M,EAAAP,SAAAO,EAAAR,UAGA,KAAAE,EAAA,EAAAA,EAAAO,EAAA7V,OAAAsV,IAAA,CACA,GAAAQ,GAAAD,EAAAP,EACA,IAAAX,EAAAmB,EAAA9C,eAAA,CACAuC,EAAAO,CACA,SAEAN,GAAAM,EAAA9C,eAAAwC,EAAAxC,kBACAwC,EAAAM,GASA,MANAP,KAEAA,EAAAC,GAEAD,EAAAvC,gBAAA,GAEAuC,GAGAnU,mBAAA,WACA,MAAA3E,MAAA4E,aAAAC,OAAA0P,EAAA+E,mBAGAnE,gBAAA,WACA,OAAAF,KAAAjV,KAAA8B,SACA,MAAApB,GAAA6Y,WAAAC,QAAAxZ,KAAA8B,SAEA,IAAA9B,KAAA2E,mBAIA,MADA3E,MAAA8B,SAAA9B,KAAA4E,aAAA/C,QAAA8H,OAAAuB,IAAA,YACAlL,KAAAmV,eAEA,IAAAsE,GAAA/Y,EAAA6Y,WACAxO,EAAA/K,KACAuL,EAAA,GAAA8I,IACA3E,KAAA1P,KAAA4E,aAAAC,MAQA,OANA0G,GAAAmD,QAAAgL,KAAA,WACA3O,EAAAjJ,SAAAyJ,EAAAL,IAAA,YACAuO,EAAAD,QAAAzO,EAAAjJ,WACA,SAAA6X,GACAF,EAAAG,OAAAD,KAEAF,EAAAI,WAGAC,gBAAA,SAAAxO,GACAA,EAAA6H,iBACA7H,EAAA8H,iBACA,IAAArI,GAAA/K,IACArC,MAAA4S,SAAA,wCAAA,SAAAwJ,GACAA,EAAAC,gBAAA/Y,EAAA6S,iBAAA7S,EAAA8S,oBACApF,KAAA,SAAAsL,GACAA,GACAlP,EAAAmP,uBAMAA,kBAAA,WACAla,KAAAoF,gBAAAvC,QAAA,gBAAA7C,KAAAuF,aAGA4U,mBAAA,SAAAC,GACA,GAAAtY,GAAAsY,EAAAlP,IAAA,eACAlL,MAAAoF,gBAAAvC,QAAA,iBAAA7C,KAAAuF,YACAV,OAAA0P,EAAA+E,kBACAxT,OAAAhE,EAAAgE,KACAjE,WACAA,aACA8H,SAAAyQ,MAKAC,aAAA,SAAA/O,GACAA,EAAA6H,kBAGAmH,cAAA,SAAAhP,GACAA,EAAA6H,iBACAnT,KAAAgV,cACAhV,KAAAqK,IAAAkQ,SAAA,iCAAApW,SAAA,qBAGAqW,cAAA,WAEA,MADAxa,KAAAgV,aAEAhV,KAAAqK,IAAAkQ,SAAA,iCAAAjQ,YAAA,qBAIAmQ,uBAAA,SAAAnP,GACA,GAAAoP,GAAApP,EAAAwB,cAAAa,aAAAgN,QAAA,OACA,IAAAD,EAGA,IAEA,MADA,IAAArG,GAAAvP,KAAAC,MAAA2V,IAEA,MAAA7N,GAEA,OAAA,IAIA+N,SAAA,SAAAtP,GACAA,EAAA6H,iBACAnT,KAAAwa,aACA,IAAAJ,GAAApa,KAAAya,qBAAAnP,EACA,IAAA8O,EAGA,GAAApa,KAAA4E,aAAAC,OAAA0P,EAAAsG,kBACA7a,KAAAma,iBAAAC,OACA,CACA,GAAArP,GAAA/K,IACArC,MAAA4S,SAAA,wCAAA,SAAAwJ,GACAA,EAAAC,gBAAA/Y,EAAA+S,kBAAA/S,EAAAgT,qBACAtF,KAAA,SAAAmM,GACAA,GACA/P,EAAAoP,iBAAAC,WAQA/Y,YAAA,oCACAiY,oBAAA,qDACAuB,oBAAA,0DACAvU,qBAAA,gBA4FA,OAzFA1F,GAAAma,SAAA3Z,QAEAkG,YACAuP,sBAAA,8CAGA5U,cAAA,SAAAJ,EAAA2V,GACA,IAAA3V,EAAAuD,gBACA,KAAA,IAAAxE,GAAAoa,OACA3a,OAAA,kBACA4a,UAAA,qCAGAjb,MAAAoF,gBAAAvD,EAAAuD,gBACAxE,EAAAma,SAAA7Y,UAAAD,YAAAE,MAAAnC,KAAAoC,WACApC,KAAAwX,KAAAA,EACA/W,EAAAW,OAAApB,KAAAoF,iBACA8V,2BAAA,WACA,OACArW,OAAA0P,EAAAsG,kBACAhZ,kBAMAsZ,uBAAA,WAKA,GAJA1a,EAAA2a,SAAApb,KAAAqb,aAEArb,KAAAqb,UAAArb,KAAA6B,QAAAqN,GAAAxO,EAAAV,KAAA6B,QAAAqN,IAAAlP,KAAAwX,KAAAnN,MAEArK,KAAAqb,WAAA,IAAArb,KAAAqb,UAAA9X,OACA,KAAA,IAAA3C,GAAAoa,MAAA,WAAAhb,KAAAqb,UAAAzE,SAAA,qBAEA,QAAA,GAGA0E,qBAAA,WACA,KAAAtb,KAAAqK,IAAAnG,KAAA,IAAAqQ,EAAAlT,WAAAkC,OAAA,GAAA,CAIAvD,KAAAmb,sBAGA,IAAAvW,GAAA5E,KAAAub,8BACAC,EAAA,GAAAjH,GACA9T,EAAAW,OAAApB,KAAA6B,SACA0D,aAAAvF,KAAAwX,KACA5S,eAAAA,IAEA4W,GAAA5P,SACA5L,KAAAqb,UAAAlM,OAAAqM,EAAAtM,IACAlP,KAAAqb,UAAAlX,SAAA,6BAEAnE,KAAAqb,UAAAvb,KAAA,eACA+D,cACA/B,WAAA8C,KAGAA,EAAAC,OAAA0P,EAAAsG,mBAEA7a,KAAAqb,UAAA/Q,YAAA,yBAIAiR,8BAAA,WACA,MAAAvb,MAAAwX,KAAA9U,OAAA1C,KAAAwX,KAAA9U,MAAAwI,IAAA,UAEAlL,KAAAwX,KAAA9U,MAAAwI,IAAA,UAEAlL,KAAAwX,KAAAiE,qBAAAhb,EAAAib,WAAA1b,KAAAwX,KAAAiE,qBAEAzb,KAAAwX,KAAAiE,sBAEAzb,KAAA6B,QAAA+C,aAEA5E,KAAA6B,QAAA+C,iBAFA,IAMApB,WAAA,WACAxD,KAAAsb,sBAGAK,YAAA,iBAOAhe,KAAAC,OAAA,qCAAA,sBAAA,kBAAA,oBAAA,sBCnjBA,kBACA,qDACA,+CACA,kDACA,wCACA,wCACA,mEACA,SAAA6C,EAAAC,EAAAC,EAAAC,EAAA6H,EAAAmT,EAAA/K,EAAA5P,EAAAzB,GAEA,GAAAqc,EA8PA,OA5PAjb,GAAAsI,SAAA9H,QACAC,YAAA,sBACA7B,WAAAA,EAEAoC,kBAAA,WACA,OACA7C,YAAAkC,EAAAlC,UACAC,OAAAiC,EAAAjC,KACAE,SAAA+B,EAAA/B,SAIA6C,MACA+Z,YAAA,oCACAC,aAAA,4BACAC,UAAA,gCACAC,UAAA,0BACAC,YAAA,iCAGAtS,UACAuS,uBAAA,eACAC,oBAAA,eACAC,oBAAA,eAGApa,cAAA,SAAAJ,GACAA,IAAAA,MACApB,EAAA6G,SAAAzF,GACAya,eAAAtc,KAAAsc,aAAAxZ,KAAA9C,MACAuc,YAAA9R,SAAAjC,OAEA3G,EAAA0a,UAAA7b,EAAAmB,EAAA0a,WACAvc,KAAAyC,QAAAZ,EAAAY,QACAzC,KAAAwc,gBAAA3a,EAAAyQ,aAAAzQ,EAAAY,QAAA6P,aACA1R,EAAAsI,SAAAhH,UAAAD,YAAA7B,KAAAJ,KAAA6B,GACA7B,KAAAyc,yBAGAA,wBAAA,WACAzc,KAAA+C,SAAA/C,KAAA,gBAAA,SAAA0c,GACA1c,KAAAsS,YAAA/C,IAAA,eACA1K,OAAA6X,EACA7a,WAAA8a,kBAAA,UACAC,UAAA,IACA5c,KAAA6c,mBACA7c,KAAA8c,iBAEA9c,KAAA+C,SAAA/C,KAAAyC,QAAA,mBAAAzC,KAAA+c,kBAEA/c,KAAA+C,SAAA/C,KAAAyC,QAAA,qBAAAzC,KAAAgd,sBACAhd,KAAA+C,SAAA/C,KAAAyC,QAAA,qBAAAzC,KAAAid,qBAGAT,kBAAA,SAAAU,GACA,IAAAA,EACA,KAAA,IAAAlC,OAAA,sBAEAhb,MAAAsS,YAAAtS,KAAAmd,kBAAAD,GACAld,KAAAsS,YAAA8K,SAEApd,KAAAsS,YAAA/C,IAAA,cAAAvP,KAAAqd,iCAGArd,KAAAsS,YAAApH,IAAA,eAAArJ,aACA8a,gBAAA,QAGAQ,oBAAA,SAAAG,GACA,GAAAC,GAAAD,EAAApS,IAAA,eACApC,EAAAhE,KAAAC,MAAAD,KAAAE,UAAAuY,GAEA,OADAD,GAAA/N,IAAA,cAAAzG,GACAwU,GAGAvZ,OAAA,WACA,GAAAwY,GAAAvc,KAAAwd,cAKA,OAJA,IAAA5B,IACA1M,KAAAqN,IAEAxY,KAAA/D,MACAA,MAGAwd,eAAA,WAIA,MAHA3B,IAAAnb,EAAAqX,SAAA/X,KAAA6B,QAAA0a,UAAAV,KACAA,EAAAnb,EAAA,SAAA+c,QAAA,iBAAAxR,SAAAjM,KAAA6B,QAAA0a,WAAA,IAEAV,GAMAwB,+BAAA,WAEA,OACAxY,OAAA,oBACAhD,WACA6b,UACA7Y,OAAA,8BASAkY,mBAAA,SAAAY,GACA3d,KAAAsS,YAAA/C,IAAAoO,EACA,IAAA5S,GAAA/K,IAEAA,MAAAsS,YAAAtT,OAAA0a,KAAA,WACA/b,KAAA4S,SACA,6CACA,SAAAqN,GAEAA,EAAAC,YAAA,UAAA5c,EAAArC,wBAEA+e,EAAArL,YAAA5C,GAAA3E,EAAAuH,YAAApH,IAAA,MACAH,EAAAtI,QAAA6P,YAAA/C,IAAAoO,EAAArL,aACAvH,EAAAkS,wBAEA,SAAAtD,GAEA,GAAAmE,EACA,IAAAnE,GAAAA,EAAAoE,cAAApE,EAAAoE,aAAApE,MACAmE,EAAAnE,EAAAoE,aAAApE,UACA,CACA,GAAAqE,GAAAvV,EAAAwV,cAAAC,QACAzV,GAAAwV,cAAAE,QACAL,EAAApd,EAAAsd,GAAA9Q,OAEAvP,KAAA4S,SACA,6CACA,SAAAqN,GACAA,EAAAC,YAAA,QAAAC,QAKAM,cAAA,WAEA,GAAAC,GAAAre,KAAA6B,QAAA0a,UAAArY,KAAA,gBACAma,GAAA9a,QACA8a,EAAAxI,aAAA,QAEA7V,KAAAyC,QAAA4O,cAAA,wBAAArR,KAAAsS,cAGAgM,eAAA,WACAte,KAAAid,sBAGAH,eAAA,WACA9c,KAAA+B,GAAA+Z,UAAA5R,SAAA,eAIAlK,KAAAue,mBAFAve,KAAAwe,mBAMAA,kBAAA,WACAxe,KAAAye,cAAA5b,QAAA,eACA7C,KAAA+B,GAAAia,QAAA7X,SAAA,eACAnE,KAAA+B,GAAAia,QAAA0C,KAAA,QAAAzd,EAAAhC,OACAe,KAAA+B,GAAA+Z,UAAA3X,SAAA,eACAnE,KAAAye,cAAApN,cAAA,eAGAkN,mBAAA,WACAve,KAAA+B,GAAA+Z,UAAAxR,YAAA,eACAtK,KAAA+B,GAAAia,QAAA0C,KAAA,QAAAzd,EAAAlC,WACAiB,KAAA+B,GAAAia,QAAA1R,YAAA,gBAGAgS,eAAA,aAIAqC,qBAAA,WACA3e,KAAA4e,gBAAA,GAAAhe,GAAA2Q,QACArC,KAAAlP,KAAA+B,GAAA+Z,YAEA9b,KAAAye,cAAA,GAAA5N,IACAmB,WAAAhS,OAEAA,KAAA4e,gBAAA7a,KAAA/D,KAAAye,eACAze,KAAA+B,GAAAma,UAAA2C,WACAzS,YAAA,UACA0S,aAAA,mBACAC,SAAA,WACA,OAAA,MAKAlC,mBAAA,WACA,GAAAU,GAAA,GAAA5c,GAAAwE,MAAAnF,KAAAsS,YAAApH,IAAA,eACAlL,MAAAyC,QAAA4O,cAAA,yBAAAkM,IAGA/Z,WAAA,WAEAxD,KAAA6B,QAAA0a,UAAApY,SAAA,uBACAnE,KAAA6B,QAAAya,eACAtc,KAAA2e,qBACA3e,KAAA6c,mBACAnc,EAAA+J,UAAAI,GAAA,SAAA7K,KAAAuX,KAAAC,OAAAxX,MAAAA,KAAAgf,iBAGAA,iBAAA,SAAA1T,GACA,GAAAP,GAAAO,EAAAxL,KAAA0X,IACAzM,GAAAhJ,GAAAia,QAAAlE,GAAAxM,EAAAuM,SAAA9M,EAAAhJ,GAAAia,QAAA1M,IAAAhE,EAAAuM,QAAAtU,QAIAwH,EAAAhJ,GAAA+Z,UAAAhE,GAAAxM,EAAAuM,SAAA9M,EAAAhJ,GAAA+Z,UAAAxM,IAAAhE,EAAAuM,QAAAtU,QAIAwH,EAAAwT,oBAGAvB,uBAAA,WACAhd,KAAAif,cAGAA,aAAA,WACA,GAAAZ,GAAAre,KAAA6B,QAAA0a,UAAArY,KAAA,gBACAma,GAAA9a,QACA8a,EAAAxI,aAAA,WAEA7V,KAAA6B,QAAA0a,UAAAjS,YAAA,uBACA5J,EAAA+J,UAAAuM,IAAA,SAAAhX,KAAAuX,IAAAvX,KAAAgf,gBACAhf,KAAA6C,QAAA,YAMAoa,qBAAA,WACAjd,KAAAif,aACAjf,KAAAyC,QAAA4O,cAAA,wBAAArR,KAAAsS,gBAIA4M,oBAAA,8DAMAvhB,KAAAC,OAAA,yECzQAC,QAAA,EAEAC,SAAA,EACAC,MAAA,IAGAJ,KAAAC,OAAA,8ECPAuhB,iBAAA,+BCCAxhB,KAAAC,OAAA,4FAAA,SAAA,MAAA,uBAAA,SAAAwB,EAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,UAAAC,YAAA,EAAA,mBAAAC,OAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,EAEA,OAAA,8CACAC,KAAAC,kBAAAF,EAAA,OAAAA,EAAAH,EAAAuf,iBAAA,MAAAxf,EAAAA,EAAAwf,eAAAxf,IAAAI,EAAAH,EAAAO,cAAA,kBAAAJ,GAAAA,EAAAK,KAAAT,GAAAU,OAAA,iBAAAC,YAAAP,IACA,+DACAC,KAAAC,kBAAAF,EAAA,OAAAA,EAAAH,EAAAuf,iBAAA,MAAAxf,EAAAA,EAAAwf,eAAAxf,IAAAI,EAAAH,EAAAO,cAAA,kBAAAJ,GAAAA,EAAAK,KAAAT,GAAAU,OAAA,iBAAAC,YAAAP,IACA,qBAGA,OADAT,GAAAkB,gBAAA,uFAAAjB,GACAA,ICZA5B,KAAAC,OAAA,8FAAA,cCGAD,KAAAC,OAAA,wFAAA,sBAAA,oBAAA,sBACA,6EACA,2FACA,4FACA,SAAA6C,EAAAE,EAAAC,EAAAK,EAAAzB,GAuBA,MAtBAoB,GAAAsI,SAAA9H,QACAC,YAAA,+BACA7B,WAAAA,EACAoC,kBAAA,WACA,OACAud,iBAAAle,EAAAke,iBAIAld,cAAA,SAAAJ,GACAjB,EAAAsI,SAAA/G,MAAAnC,KAAAoC,YAGAgd,SAAA,WACApf,KAAAqK,IAAAY,SAAA9G,SAAA,oCAGAwX,YAAA,WACA3b,KAAAqK,IAAAY,SAAAX,YAAA,wCAMA3M,KAAAC,OAAA,oEC/BAC,QAAA,EAEAC,SAAA,EACAC,MAAA,IAGAJ,KAAAC,OAAA,yECPAyhB,WAAA,0BACAC,gBAAA,yBCAA3hB,KAAAC,OAAA,kFAAA,SAAA,MAAA,uBAAA,SAAAwB,EAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,UAAAC,YAAA,EAAA,mBAAAC,OAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,EAEA,OAAA,kGACAC,KAAAC,kBAAAF,EAAA,OAAAA,EAAAH,EAAA2f,cAAA,MAAA5f,EAAAA,EAAA4f,YAAA5f,IAAAI,EAAAH,EAAAO,cAAA,kBAAAJ,GAAAA,EAAAK,KAAAT,GAAAU,OAAA,cAAAC,YAAAP,IACA,KACAC,KAAAC,kBAAAF,EAAA,OAAAA,EAAAH,EAAA2f,cAAA,MAAA5f,EAAAA,EAAA4f,YAAA5f,IAAAI,EAAAH,EAAAO,cAAA,kBAAAJ,GAAAA,EAAAK,KAAAT,GAAAU,OAAA,cAAAC,YAAAP,IACA,yDACAC,KAAAC,kBAAAF,EAAA,OAAAA,EAAAH,EAAA4f,gBAAA,MAAA7f,EAAAA,EAAA6f,cAAA7f,IAAAI,EAAAH,EAAAO,cAAA,kBAAAJ,GAAAA,EAAAK,KAAAT,GAAAU,OAAA,gBAAAC,YAAAP,IACA,gGACAC,KAAAC,kBAAAF,EAAA,OAAAA,EAAAH,EAAA4f,gBAAA,MAAA7f,EAAAA,EAAA6f,cAAA7f,IAAAI,EAAAH,EAAAO,cAAA,kBAAAJ,GAAAA,EAAAK,KAAAT,GAAAU,OAAA,gBAAAC,YAAAP,IACA,iCAGA,OADAT,GAAAkB,gBAAA,6EAAAjB,GACAA,IChBA5B,KAAAC,OAAA,oFAAA,cCEAD,KAAAC,OAAA,8EAAA,sBAAA,oBAAA,sBACA,wEACA,iFACA,kFACA,SAAA6C,EAAAE,EAAAC,EAAAK,EAAAzB,GAmBA,MAlBAoB,GAAAsI,SAAA9H,QACAC,YAAA,mBACA7B,WAAAA,EACAoC,kBAAA,WACA,GAAA6d,GAAAzf,KAAA2J,OAAAuB,IAAA,YACAmU,GAAAI,IAAAA,EAAAvc,SAAAuc,EAAAvc,OAAAC,YACA1C,EAAA2C,QAAAqc,EAAAvc,OAAAC,WACA,QACAoc,cAAAvf,KAAA2J,OAAAuB,IAAA,SACAsU,gBAAAH,EAAApe,EAAAoe,SAAApe,EAAAqe,gBAIArd,cAAA,SAAAJ,GACAjB,EAAAsI,SAAA/G,MAAAnC,KAAAoC,WACApC,KAAA2J,OAAA9H,EAAA/B,KAAA6J,YCtBAhM,KAAAC,OAAA,sGACA8hB,UAAA,sDACAxf,QAAA,YACAK,cAAA,kBACAuF,OAAA,OACA5C,UACA2B,OAAA,SACA1B,mBCPAxF,KAAAC,OAAA,4FACA8hB,UAAA,sDACAxf,QAAA,YACAK,cAAA,kBACAuF,OAAA,OACA5C,UACA2B,OAAA,SACA1B,mBAKAxF,KAAAC,OAAA,qGCXAC,QAAA,EAEAC,SAAA,EACAC,MAAA,IAGAJ,KAAAC,OAAA,0GCPAuhB,iBAAA,+BCAAxhB,KAAAC,OAAA,2FCCAC,QAAA,EAEAC,SAAA,EACAC,MAAA,IAGAJ,KAAAC,OAAA,gGCPAyhB,WAAA,0BACAC,gBAAA,yBCDA3hB,KAAAC,OAAA,4BCAA,oCACA,kEACA,uFACA,6EAGA,qGACA,2FAEA,yGACA,oGAGAD,KAAA4S,SAAA,UAAA,OAAA,SAAAA,EAAAxE,GACAA,EAAA4T,UAAApP,EAAA,iCAAA","file":"csui-perspective.js","sourcesContent":["csui.define('csui/perspective.manage/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/perspective.manage/impl/nls/root/lang',{\r\n  layoutTabTitle: 'Change page layout',\r\n  widgetTabTitle: 'Add widget',\r\n  expandTab: 'Expand tab',\r\n  collapseTab: 'Collapse tab',\r\n  noTitle: 'Title not available',\r\n  goBackTooltip: 'Go back',\r\n  templateMessage: 'Drag and Drop tile in position',\r\n  changePageLayoutConfirmatonText: 'All your previewsly added and configured widgets will be lost!',\r\n  proceedButton: 'Proceed',\r\n  changeLayoutCancelButton: 'Cancel',\r\n  FlowLayoutTitle: 'Flow Layout',\r\n  LcrLayoutTitle: 'Left-Center-Right',\r\n  perspectiveSaveSuccess: 'Perspective has been updated successfully.',\r\n  saveConfirmMsg: 'Please be aware this action will update all perspective overrides using this layout configuration. If you do not want this to happen, you should create a new perspective.',\r\n  saveConfirmTitle: 'Save perspective',\r\n  addWidget: 'Add widget',\r\n  save: 'Save',\r\n  close: 'Close',\r\n  cancel: 'Cancel',\r\n  configNotSupported:\"This widget cannot be configured with edit page.\"\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/options.form.wrapper',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"csui-pman-form-header\\\">\\r\\n    <div class=\\\"csui-pman-form-title\\\">\"\n    + this.escapeExpression(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"title\",\"hash\":{}}) : helper)))\n    + \"</div>\\r\\n    <div class=\\\"csui-pman-form-description\\\">\"\n    + this.escapeExpression(((helper = (helper = helpers.description || (depth0 != null ? depth0.description : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"description\",\"hash\":{}}) : helper)))\n    + \"</div>\\r\\n    <div class=\\\"csui-pman-config-unsupported\\\">\\r\\n        <div class=\\\"csui-state\\\">\\r\\n            <span class=\\\"csui-state-icon csui-icon csui-icon-notification-error-white\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"csui-error-message\\\">\\r\\n            <span>\"\n    + this.escapeExpression(((helper = (helper = helpers.configNotSupported || (depth0 != null ? depth0.configNotSupported : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"configNotSupported\",\"hash\":{}}) : helper)))\n    + \"</span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"csui-pman-form-content cs-formview-wrapper\\\"></div>\\r\\n\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_options.form.wrapper', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/impl/options.form',[],function(){});\n","csui.define('csui/perspective.manage/impl/options.form.view',['csui/lib/underscore', 'csui/lib/jquery', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/lib/alpaca/js/alpaca',\r\n  'csui/controls/mixins/layoutview.events.propagation/layoutview.events.propagation.mixin',\r\n  'csui/controls/tile/behaviors/perfect.scrolling.behavior',\r\n  'csui/controls/form/form.view',\r\n  'i18n!csui/perspective.manage/impl/nls/lang',\r\n  'hbs!csui/perspective.manage/impl/options.form.wrapper',\r\n  'css!csui/perspective.manage/impl/options.form',\r\n], function (_, $, Backbone, Marionette, Alpaca, LayoutViewEventsPropagationMixin,\r\n    PerfectScrollingBehavior,\r\n    FormView, lang, template) {\r\n\r\n  var WidgetOptionsFormWrapperView = Marionette.LayoutView.extend({\r\n\r\n    template: template,\r\n\r\n    className: 'csui-pman-form-wrapper',\r\n\r\n    regions: {\r\n      bodyRegion: '.csui-pman-form-content'\r\n    },\r\n\r\n    behaviors: {\r\n      PerfectScrolling: {\r\n        behaviorClass: PerfectScrollingBehavior,\r\n        contentParent: '.cs-form.cs-form-create.perspective-widget-form'\r\n      }\r\n    },\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        title: this.options.manifest.title,\r\n        description: this.options.manifest.description,\r\n        configNotSupported: lang.configNotSupported\r\n      }\r\n    },\r\n\r\n    ui: {\r\n      unSupportedConfig: '.csui-pman-config-unsupported',\r\n      description: '.csui-pman-form-description'\r\n    },\r\n\r\n    constructor: function WidgetOptionsFormHeaderView(options) {\r\n      this.options = options || {};\r\n      this.manifest = this.options.manifest;\r\n      Marionette.LayoutView.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    _createForm: function (formModel) {\r\n      this.widgetOptionsFormView = new WidgetOptionsFormView({\r\n        context: this.options.context,\r\n        model: formModel,\r\n        mode: 'create',\r\n      });\r\n\r\n      this.listenToOnce(this.widgetOptionsFormView, 'render:form', function () {\r\n        this.trigger('render:form');\r\n      }.bind(this))\r\n\r\n      this.listenTo(this.widgetOptionsFormView, 'change:field', function (field) {\r\n        this.trigger('change:field', field);\r\n      }.bind(this))\r\n    },\r\n\r\n    _hasSchema: function () {\r\n      if (!this.manifest || !this.manifest.schema || !this.manifest.schema.properties ||\r\n          _.isEmpty(this.manifest.schema.properties)) {\r\n        // No configuration required for the widget\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    //To check required fields in widget options\r\n    _hasRequiredFields: function () {\r\n      if (!!this.manifest && !!this.manifest.schema && !!this.manifest.schema.required &&\r\n          this.manifest.schema.required.length > 0) {\r\n        // Has required fields in the widget options\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    onRender: function () {\r\n      this.ui.unSupportedConfig.hide();\r\n      var hasSchema = this._hasSchema();\r\n      if (!hasSchema) {\r\n        // No schema defined for widget\r\n        this.trigger('render:form');\r\n        return;\r\n      }\r\n      var formModel = this._prepareFormModel();\r\n      this.hasValidSchema = WidgetOptionsFormWrapperView._normalizeOptions(\r\n          formModel.attributes.schema.properties, formModel.attributes.options.fields,\r\n          formModel.attributes.data);\r\n      if (this.hasValidSchema) {\r\n        this._createForm(formModel);\r\n        this.bodyRegion.show(this.widgetOptionsFormView);\r\n      } else {\r\n        // Widget configuration schema has unsupported alpaca fields\r\n        this.ui.description.hide();\r\n        this.ui.unSupportedConfig.show();\r\n        this.trigger('render:form');\r\n      }\r\n    },\r\n    //To change the border color to red for non supported widgets.\r\n    onPopoverShow: function (popover) {\r\n      if (this._hasSchema() && !this.hasValidSchema) {\r\n        popover.find('.binf-popover-content').addClass(\"invalid-options\");\r\n        popover.find('.binf-arrow').addClass(\"invalid-options\");\r\n      }\r\n    },\r\n\r\n    getValues: function () {\r\n      if (!this._hasSchema()) {\r\n        return undefined;\r\n      }\r\n      if (this.hasValidSchema) {\r\n        return this.widgetOptionsFormView.getValues();\r\n      } else {\r\n        return this._getOptionsData();\r\n      }\r\n    },\r\n\r\n    validate: function () {\r\n      if (!this._hasSchema()) {\r\n        return true;\r\n      }\r\n      // Widget configuration schema has unsupported alpaca fields\r\n      if (!this.hasValidSchema) {\r\n        var reqVal = true;\r\n        //Has required fields\r\n        //TODO to handle required fields of recursive schema\r\n        if (this._hasRequiredFields()) {\r\n          var data = this._getOptionsData();\r\n          var reqFields = this.manifest.schema.required;\r\n          _.each(reqFields, function (fieldName) {\r\n            if (!data[fieldName]) {\r\n              reqVal = false;\r\n            }\r\n          });\r\n        }\r\n        return reqVal;\r\n      }\r\n      // Widget configuration schema has supported alpaca fields\r\n      return this.widgetOptionsFormView.validate();\r\n    },\r\n\r\n    _isPreviewWidget: function () {\r\n      return this.options.widgetConfig.type ===\r\n             'csui/perspective.manage/widgets/perspective.widget';\r\n    },\r\n\r\n    _prepareFormModel: function () {\r\n      var data = this._getOptionsData();\r\n      // Clone schema and options from manifest as they would change by form.view\r\n      var schema      = JSON.parse(JSON.stringify(this.manifest.schema)),\r\n          formOptions = JSON.parse(JSON.stringify(this.manifest.options || {}));\r\n      if (!formOptions) {\r\n        formOptions = {};\r\n      }\r\n      if (!formOptions.fields) {\r\n        formOptions.fields = {};\r\n      }\r\n      this._addWidgetSizePropertyIfSupported(schema, formOptions, data);\r\n\r\n      var model = new Backbone.Model({\r\n        schema: schema,\r\n        options: formOptions,\r\n        data: data\r\n      });\r\n      return model;\r\n    },\r\n\r\n    //Common method to get widget config data\r\n    _getOptionsData: function () {\r\n      var data = this.options.widgetConfig.options || {};\r\n      if (this._isPreviewWidget()) {\r\n        // For widgets added using DnD, widget will be added as preview for original widget\r\n        // Resolve original widget options from preview widget's options\r\n        data = data.options || {};\r\n      }\r\n      return data;\r\n    },\r\n\r\n    /**\r\n     * Add a new properties to form to change \"Size\" if widgets.\r\n     * Size that can be configured depends on perspective's supported sizes as well as supported sizes of widget\r\n     *\r\n     */\r\n    _addWidgetSizePropertyIfSupported: function (schema, options, data) {\r\n      if (!this.options.perspectiveView.getSupportedWidgetSizes) {\r\n        // Perspective view doesn't support configuring widget sizes\r\n        return;\r\n      }\r\n      var supportedKinds = this.options.perspectiveView.getSupportedWidgetSizes(this.manifest,\r\n          this.options.widgetView);\r\n      if (!supportedKinds || supportedKinds.length === 0) {\r\n        // No supported sizes found for widget\r\n        return;\r\n      }\r\n      var kindSchema = {\r\n        title: lang.widgetSizeTitle,\r\n        description: lang.widgetSizeDescription,\r\n        type: 'string',\r\n        enum: _.map(supportedKinds, function (sk) {\r\n          return sk.kind;\r\n        })\r\n      };\r\n      var kindOption = {\r\n        type: 'select',\r\n        optionLabels: _.map(supportedKinds, function (sk) {\r\n          return sk.label;\r\n        }),\r\n        removeDefaultNone: true\r\n      };\r\n      var selectedKind = _.find(supportedKinds, function (size) {return size.selected;});\r\n      if (!!selectedKind) {\r\n        data[WidgetOptionsFormWrapperView.widgetSizeProperty] = selectedKind.kind;\r\n      }\r\n      var sizeSchema = {};\r\n      sizeSchema[WidgetOptionsFormWrapperView.widgetSizeProperty] = kindSchema;\r\n      schema.properties = _.extend(sizeSchema, schema.properties);\r\n\r\n      var sizeOptions = {};\r\n      sizeOptions[WidgetOptionsFormWrapperView.widgetSizeProperty] = kindOption;\r\n      options.fields = _.extend(sizeOptions, options.fields);\r\n\r\n      schema.required = schema.required || [];\r\n      schema.required.push(WidgetOptionsFormWrapperView.widgetSizeProperty);\r\n    },\r\n\r\n  }, {\r\n    widgetSizeProperty: '__widgetSize',\r\n\r\n    /**\r\n     * NOTE: Duplicate of Alpaca.createFieldInstance since this code is not exposed as function\r\n     */\r\n    _resolveOptionsType: function (schema, data) {\r\n      var type = schema.type;\r\n      if (!type) {\r\n        type = Alpaca.getSchemaType(data);\r\n      }\r\n      if (!type) {\r\n        if (data && Alpaca.isArray(data)) {\r\n          type = \"array\";\r\n        }\r\n        else {\r\n          type = \"object\"; // fallback\r\n        }\r\n      }\r\n      if (schema && schema[\"enum\"]) {\r\n        if (schema[\"enum\"].length > 3) {\r\n          return \"select\";\r\n        } else {\r\n          return \"radio\";\r\n        }\r\n      } else {\r\n        return Alpaca.defaultSchemaFieldMapping[type];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Recursively fill options for all respective schemas\r\n     */\r\n    _normalizeOptions: function (schemaProperies, optionFields, data) {\r\n      var hasValidTypes = true;\r\n      _.each(schemaProperies, function (field, fieldId) {\r\n        var fieldOpts = optionFields[fieldId];\r\n        var fieldData = data[fieldId];\r\n        if (!fieldOpts) {\r\n          optionFields[fieldId] = fieldOpts = {}\r\n        }\r\n\r\n        var optType = fieldOpts.type;\r\n        if (!optType && !!field.type) {\r\n          // Options not defined.. So resolve option type from Alp JSON schema type\r\n          optType = WidgetOptionsFormWrapperView._resolveOptionsType(field, fieldData);\r\n        }\r\n\r\n        if (!Alpaca.getFieldClass(optType)) {\r\n          hasValidTypes = false;\r\n        }\r\n\r\n        switch (field.type) {\r\n        case 'array':\r\n          if (!fieldOpts.fields) {\r\n            _.defaults(fieldOpts, {\r\n              fields: {\r\n                item: {}\r\n              }\r\n            });\r\n          }\r\n          if (!!fieldOpts.items) {\r\n            fieldOpts.fields.item = fieldOpts.items;\r\n          }\r\n          if (field.items.type === 'object') {\r\n            if (!!fieldOpts.fields.item.type && !Alpaca.getFieldClass(fieldOpts.fields.item.type)) {\r\n              hasValidTypes = false;\r\n            }\r\n            fieldOpts.fields.item.fields || (fieldOpts.fields.item.fields = {});\r\n            if (!fieldData || fieldData.length === 0) {\r\n              data[fieldId] = fieldData = [{}];\r\n            }\r\n            var hasValidArrayType = WidgetOptionsFormWrapperView._normalizeOptions(\r\n                field.items.properties, fieldOpts.fields.item.fields,\r\n                fieldData[0]);\r\n            if (!hasValidArrayType) {\r\n              hasValidTypes = false;\r\n            }\r\n          }\r\n          if (!fieldData) {\r\n            data[fieldId] = [null];\r\n          }\r\n          break;\r\n        case 'object':\r\n          if (!fieldData) {\r\n            data[fieldId] = fieldData = {};\r\n          }\r\n          if (!fieldOpts.fields) {\r\n            fieldOpts.fields = {};\r\n          }\r\n          var hasValidObjectType = WidgetOptionsFormWrapperView._normalizeOptions(field.properties,\r\n              fieldOpts.fields, fieldData);\r\n          if (!hasValidObjectType) {\r\n            hasValidTypes = false;\r\n          }\r\n          break;\r\n        default:\r\n          if (!fieldData) {\r\n            data[fieldId] = null;\r\n          }\r\n          break;\r\n        }\r\n      });\r\n      return hasValidTypes;\r\n    }\r\n  });\r\n\r\n  var WidgetOptionsFormView = FormView.extend({\r\n    className: function () {\r\n      var className = FormView.prototype.className.call(this);\r\n      return className + ' perspective-widget-form';\r\n    },\r\n    constructor: function WidgetOptionsFormView(options) {\r\n      FormView.apply(this, arguments);\r\n    }\r\n  });\r\n\r\n  _.extend(WidgetOptionsFormView.prototype, LayoutViewEventsPropagationMixin);\r\n\r\n  return WidgetOptionsFormWrapperView;\r\n\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/widget.item',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"1\":function(depth0,helpers,partials,data,blockParams,depths) {\n    var stack1;\n\n  return \"        <div>\\r\\n          <div class=\\\"csui-widget-item icon-draggable-handle\\\"\\r\\n               title=\\\"\"\n    + this.escapeExpression(this.lambda(((stack1 = (depth0 != null ? depth0.attributes : depth0)) != null ? stack1.title : stack1), depth0))\n    + \"\\\" \"\n    + ((stack1 = helpers['if'].call(depth0,(depths[1] != null ? depths[1].draggable : depths[1]),{\"name\":\"if\",\"hash\":{},\"fn\":this.program(2, data, 0, blockParams, depths),\"inverse\":this.noop})) != null ? stack1 : \"\")\n    + \">\\r\\n            <span>\"\n    + this.escapeExpression(this.lambda(((stack1 = (depth0 != null ? depth0.attributes : depth0)) != null ? stack1.title : stack1), depth0))\n    + \"</span>\\r\\n            <div class=\\\"csui-layout-icon \"\n    + this.escapeExpression(this.lambda(((stack1 = (depth0 != null ? depth0.attributes : depth0)) != null ? stack1.icon : stack1), depth0))\n    + \"\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n\";\n},\"2\":function(depth0,helpers,partials,data) {\n    return \" draggable=\\\"true\\\"\";\n},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data,blockParams,depths) {\n    var stack1;\n\n  return \"<div class=\\\"csui-accordion-header\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.title : depth0), depth0))\n    + \"\\\">\\r\\n  <div class=\\\"csui-accordion-header-title\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.title : depth0), depth0))\n    + \"</div>\\r\\n  <div class=\\\"csui-button-icon cs-icon icon-expandArrowDown\\\"></div>\\r\\n  <div class=\\\"csui-button-icon cs-icon icon-expandArrowUp\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"csui-accordion-content\\\">\\r\\n  <div class=\\\"cs-content csui-list-pannel\\\">\\r\\n    <div class=\\\"cs-list-group\\\">\\r\\n\"\n    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.widgets : depth0),{\"name\":\"each\",\"hash\":{},\"fn\":this.program(1, data, 0, blockParams, depths),\"inverse\":this.noop})) != null ? stack1 : \"\")\n    + \"    </div>\\r\\n  </div>\\r\\n</div>\";\n},\"useDepths\":true});\nHandlebars.registerPartial('csui_perspective.manage_impl_widget.item', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/widget.drag.template',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"csui-widget-template\\\">\\r\\n  <div class=\\\"csui-template-header\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.header : depth0), depth0))\n    + \"</div>\\r\\n  <div class=\\\"csui-template-body\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.body : depth0), depth0))\n    + \"</div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_widget.drag.template', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('csui/perspective.manage/impl/widget.list.view',['module',\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/lib/marionette',\r\n  'csui/utils/base',\r\n  'csui/controls/tile/behaviors/perfect.scrolling.behavior',\r\n  'csui/perspective.manage/impl/options.form.view',\r\n  'i18n!csui/perspective.manage/impl/nls/root/lang',\r\n  'csui/models/widget/widget.collection',\r\n  'hbs!csui/perspective.manage/impl/widget.item',\r\n  'hbs!csui/perspective.manage/impl/widget.drag.template'\r\n], function (module, _, $, Backbone, Marionette, base, PerfectScrollingBehavior,\r\n    WidgetOptionsFormView, Lang,\r\n    WidgetCollection,\r\n    WidgetItemTemplate, WidgetDragTemplate) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    dragImageOffsetTop: 50,\r\n    dragImageOffsetLeft: 50,\r\n  });\r\n\r\n  var WidgetItemView = Marionette.ItemView.extend({\r\n\r\n    constructor: function WidgetItemView(options) {\r\n      Marionette.ItemView.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    tagName: 'div',\r\n\r\n    className: 'csui-module-group',\r\n\r\n    template: WidgetItemTemplate,\r\n\r\n    templateHelpers: function () {\r\n      var widgetCollection = new Backbone.Collection(this.model.attributes.widgets);\r\n      var dndContainer = $('.perspective-editing .csui-dnd-container');\r\n      var draggable = dndContainer.length === 0;\r\n      return {\r\n        widgets: widgetCollection.models,\r\n        draggable: draggable\r\n      }\r\n    },\r\n\r\n    ui: {\r\n      accordionHeader: '.csui-accordion-header',\r\n      accordionContent: '.csui-accordion-content',\r\n      accordionHeaderIcon: '.csui-accordion-header .cs-icon',\r\n      widget: '.csui-widget-item'\r\n    },\r\n\r\n    events: {\r\n      'click @ui.accordionHeader': \"toggle\",\r\n      'dragstart @ui.widget': 'onDragStart',\r\n      'dragend @ui.widget': 'onDragEnd'\r\n    },\r\n\r\n    toggle: function () {\r\n      var isClosed = this.ui.accordionHeader.hasClass('csui-accordion-expand');\r\n      this.ui.accordionHeader.toggleClass(\"csui-accordion-expand\");\r\n      this.options.parentView.$el.find(\".csui-module-group\").removeClass('csui-accordion-visible')\r\n          .find('.csui-accordion-header').removeClass('csui-accordion-expand');\r\n      if (!isClosed) {\r\n        this.$el.addClass(\"csui-accordion-visible\");\r\n        this.ui.accordionHeader.addClass(\"csui-accordion-expand\");\r\n      }\r\n    },\r\n\r\n    onRender: function () {\r\n      var dndContainer = $('.perspective-editing .csui-dnd-container');\r\n      if (dndContainer.length) {\r\n        // Current perspective using sortable plugin for DnD. Get ready for it.\r\n        this._makeWidgetSortable();\r\n      } else {\r\n        // Current perspective relaying on HTML5 DnD. Get ready with IE workarounds\r\n        var hasDragDropNative = (typeof document.createElement(\"span\").dragDrop === \"function\");\r\n        if (!this._hasNativeDragImageSupport() && hasDragDropNative) {\r\n          this.ui.widget.on(\"mousedown\", this._handleDragImageForIE.bind(this));\r\n        }\r\n      }\r\n    },\r\n\r\n    _makeWidgetSortable: function () {\r\n      var self = this;\r\n      var widgetEls = this.$el.find('.csui-widget-item').parent();\r\n      widgetEls.data('pman.widget', this.model.get('widgets'));\r\n      widgetEls.sortable({\r\n        connectWith: [\".perspective-editing .csui-dnd-container\",\r\n          \".perspective-editing .pman-trash-area\"],\r\n        containment: \".perspective-editing \",\r\n        helper: function (event, ui) {\r\n          // Drag Image\r\n          var widgetModel = ui.parent().index();\r\n          self.widgetDragTemplate = new widgetDragTemplateView({\r\n            title: self.model.get(\"widgets\")[widgetModel].get('title'),\r\n            newWidget: self.model.get(\"widgets\")[widgetModel]\r\n          });\r\n          self.widgetDragTemplate.render();\r\n          //Set width and height to prevent jquery ui overriding Drag item width and height\r\n          self.widgetDragTemplate.$el.width('220px');\r\n          self.widgetDragTemplate.$el.height('220px');\r\n          self.widgetDragTemplate.$el.css({opacity: 0.75});\r\n          self.widgetDragTemplate.$el.appendTo(self.options.parentView.$el.closest('.pman-header'));\r\n          return self.widgetDragTemplate.$el;\r\n        },\r\n        cursor: 'grabbing',\r\n        tolerance: 'pointer',\r\n        cursorAt: {top: config.dragImageOffsetTop, left: config.dragImageOffsetLeft},\r\n        start: function (event, ui) {\r\n          ui.item.css('display', 'block');\r\n          ui.placeholder.css('display', 'block');\r\n          self.dragStart();\r\n        },\r\n        stop: function () {\r\n          self.dragEnd();\r\n        }\r\n      });\r\n    },\r\n\r\n    _handleDragImageForIE: function (e) {\r\n      var originalEvent = e.originalEvent,\r\n          $img          = $('.csui-template-wrapper').clone(),\r\n          widget        = this.model.get(\"widgets\")[$(e.currentTarget).parent().index()];\r\n      $img.find(\".csui-template-header\").text(widget.get(\"title\"));\r\n      $img.css({\r\n        \"top\": Math.max(0, originalEvent.pageY - config.dragImageOffsetTop) + \"px\",\r\n        \"left\": Math.max(0, originalEvent.pageX - config.dragImageOffsetLeft) + \"px\",\r\n        \"position\": \"absolute\",\r\n        \"pointerEvents\": \"none\"\r\n      }).appendTo(document.body);\r\n\r\n      setTimeout(function () {\r\n        $img.remove();\r\n      });\r\n      $img.on('dragstart', _.bind(function (event) {\r\n        var widget       = this.model.get(\"widgets\")[$(e.currentTarget).parent().index()],\r\n            dataTransfer = event.originalEvent.dataTransfer;\r\n        dataTransfer.setData(\"text\", JSON.stringify(widget.toJSON()));\r\n        this.dragStart();\r\n      }, this));\r\n      $img.on('dragend', _.bind(function (event) {\r\n        this.dragEnd();\r\n      }, this));\r\n      $img[0].dragDrop();\r\n    },\r\n\r\n    onDragStart: function (event) {\r\n      var widget       = this.model.get(\"widgets\")[$(event.currentTarget).parent().index()],\r\n          dataTransfer = event.originalEvent.dataTransfer;\r\n      var template = $('.csui-template-wrapper');\r\n      template.find(\".csui-template-header\").text(widget.get(\"title\"));\r\n      if (this._hasNativeDragImageSupport()) {\r\n        dataTransfer.setData(\"text\", JSON.stringify(widget.toJSON()));\r\n        // IE11 doesn't support 'setDragImage'. See `_handleDragImageForIE` function for Drag Image handling in IE.\r\n        dataTransfer.setDragImage(template[0], config.dragImageOffsetLeft,\r\n            config.dragImageOffsetTop);\r\n      }\r\n      this.dragStart();\r\n    },\r\n\r\n    _hasNativeDragImageSupport: function () {\r\n      var dataTransfer = window.DataTransfer || window.Clipboard;\r\n      return (\"setDragImage\" in dataTransfer.prototype);\r\n    },\r\n\r\n    onDragEnd: function (event) {\r\n      this.dragEnd();\r\n    },\r\n\r\n    dragStart: function () {\r\n      this.$el.closest(\".csui-pman-panel\").addClass(\"csui-pman-drag-start\");\r\n      $(document.body).addClass('csui-pman-dnd-active');\r\n    },\r\n\r\n    dragEnd: function () {\r\n      this.$el.closest(\".csui-pman-panel\").removeClass(\"csui-pman-drag-start\");\r\n      $(document.body).removeClass('csui-pman-dnd-active');\r\n    }\r\n\r\n  });\r\n\r\n  var widgetDragTemplateView = Marionette.ItemView.extend({\r\n    constructor: function WidgetItemView(options) {\r\n      Marionette.ItemView.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    tagName: 'div',\r\n\r\n    className: 'csui-template-wrapper',\r\n\r\n    template: WidgetDragTemplate,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        header: this.options && this.options.title,\r\n        body: Lang.templateMessage\r\n\r\n      }\r\n    },\r\n    onRender: function () {\r\n      this.$el.data('pman.widget', this.options.newWidget);\r\n    }\r\n  });\r\n\r\n  var WidgetListView = Marionette.ItemView.extend({\r\n    tagName: 'div',\r\n\r\n    template: WidgetItemTemplate,\r\n\r\n    constructor: function WidgetListView(options) {\r\n      options || (options = {});\r\n      options.data || (options.data = {});\r\n\r\n      // Provide the perfect scrollbar to every list view by default\r\n      // (Behaviors cannot be inherited; add the PerfectScrolling\r\n      //  to the local clone of the descendant's behaviors.)\r\n      if (!(this.behaviors && _.any(this.behaviors, function (behavior, key) {\r\n        return behavior.behaviorClass === PerfectScrollingBehavior;\r\n      }))) {\r\n        this.behaviors = _.extend({\r\n          PerfectScrolling: {\r\n            behaviorClass: PerfectScrollingBehavior,\r\n            contentParent: '.cs-module-list',\r\n            suppressScrollX: true,\r\n            // like bottom padding of container, otherwise scrollbar is shown always\r\n            scrollYMarginOffset: 15\r\n          }\r\n        }, this.behaviors);\r\n      }\r\n\r\n      Marionette.ItemView.call(this, options);\r\n\r\n      var self = this;\r\n      this.allWidgets = new WidgetCollection();\r\n      this.allWidgets.fetch().done(function () {\r\n        self.collection = self._groupWidgetsByModule();\r\n        // self._sanitiseWidgetLibrary();\r\n        self.render();\r\n        self.trigger(\"items:fetched\");\r\n      });\r\n    },\r\n\r\n    initialize: function () {\r\n      _.bindAll(this, \"renderItem\");\r\n    },\r\n\r\n    className: 'cs-module-list',\r\n\r\n    render: function () {\r\n      this.collection && this.collection.each(this.renderItem);\r\n    },\r\n\r\n    renderItem: function (model) {\r\n      var parentView = this;\r\n      var itemView = new WidgetItemView({model: model, parentView: parentView});\r\n      itemView.render();\r\n      $(this.el).append(itemView.el);\r\n    },\r\n\r\n    _groupWidgetsByModule: function () {\r\n      // creates a data model where widgets are grouped according to their module\r\n      var moduleCollection = new Backbone.Collection();\r\n      var widgets = this.allWidgets.filter(function (widget) {\r\n        var manifest = widget.get('manifest');\r\n        if (!manifest || !_.has(manifest, 'title') || !_.has(manifest, 'description')) {\r\n          return false;\r\n        }\r\n        var schema        = JSON.parse(JSON.stringify(manifest.schema || {})),\r\n            options       = JSON.parse(JSON.stringify(manifest.options || {})),\r\n            isValidSchema = WidgetOptionsFormView._normalizeOptions(\r\n                schema.properties, options.fields || {}, {});\r\n        if (!isValidSchema) {\r\n          // Found unknown properties.. hence widget unsupported.\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      _.each(widgets, function (widget) {\r\n        var manifest = widget.get('manifest')\r\n        widget.set(\"title\", (manifest && manifest.title) || Lang.noTitle);\r\n      });\r\n\r\n      _.each(_.groupBy(widgets, function (widget) {\r\n        return widget.serverModule.id;\r\n      }), function (val, key) {\r\n        var title = _.first(val).serverModule.get('title');\r\n        title = title ? title.replace(/OpenText /, '') : Lang.noTitle; // remove superfluous OpenText prefix\r\n        moduleCollection.add({\r\n          id: key,\r\n          title: title,\r\n          widgets: val\r\n        })\r\n      });\r\n      return moduleCollection;\r\n    },\r\n\r\n    _sanitiseWidgetLibrary: function () {\r\n      // checks to see if any widget groups or widgets have been whitelisted or blacklisted\r\n      // alpha-sorts the groups and the widgets within them.\r\n    },\r\n\r\n    onInitWidgets: function () {\r\n      this.$el.empty(); // FIXME Make this ItemView as CollectionView \r\n      this.render();\r\n    },\r\n\r\n  });\r\n\r\n  return WidgetListView;\r\n\r\n});\r\n\n","\n","csui.define('csui/perspective.manage/impl/perspectivelayouts',[\r\n    'csui/lib/underscore',\r\n    'i18n!csui/perspective.manage/impl/nls/root/lang',\r\n    // Load extra layout items to be added\r\n    'csui-ext!perspective.manage/impl/perspectivelayouts'\r\n], function(_, Lang, extraPerspectiveLayouts) {\r\n\r\n    var perspectivelayouts = [\r\n        {\r\n            title: Lang.LcrLayoutTitle, \r\n            type: \"left-center-right\",\r\n            icon: \"csui-layout-lcr\"\r\n        },\r\n        {\r\n            title: Lang.FlowLayoutTitle, \r\n            type: \"flow\",\r\n            icon: \"csui-layout-flow\"\r\n        }\r\n    ];\r\n\r\n    if(extraPerspectiveLayouts) {\r\n        perspectivelayouts = _.union(perspectivelayouts, extraPerspectiveLayouts);\r\n    }\r\n\r\n    return perspectivelayouts;\r\n});\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/pman.panel',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"csui-tab-pannel\\\">\\r\\n  <div class=\\\"csui-layout-tab\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.layoutTabTitle : depth0), depth0))\n    + \"\\\">\\r\\n    \"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.layoutTabTitle : depth0), depth0))\n    + \"\\r\\n  </div>\\r\\n  <div class=\\\"csui-AddWidget-tab\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.widgetTabTitle : depth0), depth0))\n    + \"\\\">\\r\\n    \"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.widgetTabTitle : depth0), depth0))\n    + \"\\r\\n  </div>\\r\\n  <div class=\\\"csui-widget-tab\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"csui-list-pannel\\\"></div>\\r\\n<div class=\\\"csui-template-overlay\\\"></div>\\r\\n<div class=\\\"csui-template-wrapper\\\">\\r\\n  <div class=\\\"csui-widget-template\\\">\\r\\n    <div class=\\\"csui-template-header\\\"></div>\\r\\n    <div class=\\\"csui-template-body\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.templateMessage : depth0), depth0))\n    + \"</div>\\r\\n  </div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_pman.panel', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/list.item',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.className : depth0), depth0))\n    + \"\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.title : depth0), depth0))\n    + \"\\\"\\r\\n     draggable=\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.draggable : depth0), depth0))\n    + \">\\r\\n  <span>\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.title : depth0), depth0))\n    + \"</span>\\r\\n  <div class=\\\"csui-layout-icon \"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.iconClass : depth0), depth0))\n    + \"\\\"></div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_list.item', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/list',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"cs-header binf-panel-heading cs-header-with-go-back\\\" tabindex=\\\"0\\\" role=\\\"link\\\"\\r\\n     aria-label=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.goBackAria || (depth0 != null ? depth0.goBackAria : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"goBackAria\",\"hash\":{}}) : helper)))\n    + \"\\\">\\r\\n  <span class=\\\"icon circular arrow_back cs-go-back\\\" title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.goBackTooltip || (depth0 != null ? depth0.goBackTooltip : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"goBackTooltip\",\"hash\":{}}) : helper)))\n    + \"\\\"></span>\\r\\n</div>\\r\\n<div class=\\\"cs-content\\\">\\r\\n  <div class=\\\"cs-list-group\\\"></div>\\r\\n</div>\\r\\n\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_list', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/impl/pman.panel',[],function(){});\n","csui.define('csui/perspective.manage/impl/pman.panel.view',['require', 'module', 'csui/lib/jquery', 'csui/lib/backbone',\r\n  'csui/lib/underscore', 'csui/lib/marionette',\r\n  \"csui/controls/progressblocker/blocker\",\r\n  'csui/controls/tile/behaviors/perfect.scrolling.behavior',\r\n  'csui/perspective.manage/impl/widget.list.view',\r\n  'csui/perspective.manage/impl/perspectivelayouts',\r\n  'i18n!csui/perspective.manage/impl/nls/root/lang',\r\n  'hbs!csui/perspective.manage/impl/pman.panel',\r\n  'hbs!csui/perspective.manage/impl/list.item',\r\n  'hbs!csui/perspective.manage/impl/list',\r\n  'hbs!csui/perspective.manage/impl/widget.drag.template',\r\n  'css!csui/perspective.manage/impl/pman.panel'\r\n\r\n], function (require, module, $, Backbone, _, Marionette, BlockerView, PerfectScrollingBehavior,\r\n  WidgetListView, perspectiveLayouts, Lang, template, ListItemTemplate, ListTemplate,\r\n    WidgetDragTemplate) {\r\n  'use strict';\r\n\r\n  var PManPanelView = Marionette.ItemView.extend({\r\n    tagName: 'div',\r\n\r\n    template: template,\r\n\r\n    events: {\r\n      'click @ui.layoutTab': \"onTabClicked\"\r\n    },\r\n\r\n    ui: {\r\n      tabPannel: \".csui-tab-pannel\",\r\n      listPannel: \".csui-list-pannel\",\r\n      layoutTab: \".csui-layout-tab\",\r\n      widgetTab: \".csui-widget-tab\",\r\n      template: \".csui-widget-template\"\r\n    },\r\n\r\n    className: 'csui-pman-panel',\r\n\r\n    behaviors: {\r\n      PerfectScrolling: {\r\n        behaviorClass: PerfectScrollingBehavior,\r\n        contentParent: '.csui-tab-pannel',\r\n        suppressScrollX: true,\r\n        scrollYMarginOffset: 8\r\n      }\r\n    },\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        layoutTabTitle: Lang.layoutTabTitle,\r\n        widgetTabTitle: Lang.widgetTabTitle,\r\n        templateMessage: Lang.templateMessage\r\n      }\r\n    },\r\n\r\n    onPanelOpen: function() {\r\n      this.accordionView.triggerMethod(\"init:widgets\");\r\n      this.trigger('ensure:scrollbar');\r\n    },\r\n\r\n    onRender: function () {\r\n      this.ui.widgetTab.hide();\r\n      this.ui.layoutTab.hide();\r\n      this.accordionRegion = new Marionette.Region({\r\n        el: this.ui.widgetTab\r\n      });\r\n      this.accordionView = new WidgetListView();\r\n      this.accordionRegion.show(this.accordionView);\r\n      this.blockActions();\r\n      this.listenTo(this.accordionView, \"items:fetched\", function () {\r\n            this.unblockActions();\r\n            this.ui.layoutTab.show();\r\n            this.ui.widgetTab.show();\r\n          });\r\n    },\r\n\r\n    constructor: function PManPanelView(options) {\r\n      this.options = options || {};\r\n      Marionette.ItemView.prototype.constructor.apply(this, arguments);\r\n      BlockerView.imbue(this);\r\n      this.listenTo(this, 'reset:items', function () {\r\n        this.listView && this.listView.destroy();\r\n      });\r\n    },\r\n\r\n    onTabClicked: function (options) {\r\n      var args = options.data ? options : {\r\n        data: {\r\n          items: perspectiveLayouts\r\n        }\r\n      };\r\n      args.draggable = !!args.data.draggable;\r\n      args.itemClassName = \"csui-layout-item\";\r\n      args.pmanView = this.options.pmanView;\r\n\r\n      this.ui.tabPannel.addClass(\"binf-hidden\");\r\n      this.listregion = new Marionette.Region({\r\n        el: this.ui.listPannel\r\n      });\r\n      this.listView = new ListView(args);\r\n      this.listregion.show(this.listView);\r\n\r\n      // Register events on listview to handle back\r\n      this.listenTo(this.listView, \"before:destroy\", function () {\r\n        this.ui.tabPannel.removeClass(\"binf-hidden\");\r\n      }).listenTo(this.listView, \"click:back\", function () {\r\n        this.listView.destroy();\r\n      });\r\n    },\r\n  });\r\n\r\n  var ListItemView = Marionette.ItemView.extend({\r\n    constructor: function ListItemView(options) {\r\n      Marionette.ItemView.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    tagName: 'div',\r\n\r\n    template: ListItemTemplate,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        draggable: !!this.options.draggable,\r\n        className: this.options.itemClassName,\r\n        iconClass: this.model.get('icon')\r\n      }\r\n    },\r\n\r\n    events: {\r\n      'click .csui-layout-item:not(.binf-active)': _.debounce(function () {\r\n        this.trigger('change:layout');\r\n      }, 200, true)\r\n    },\r\n    \r\n    onRender: function () {\r\n      if (this.model.get('type') === this.options.pmanView.perspective.get('perspective').type) {\r\n        this.trigger('set:active');\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  var ListView = Marionette.CompositeView.extend({\r\n\r\n    constructor: function ListView(options) {\r\n      options || (options = {});\r\n      options.data || (options.data = {});\r\n\r\n      // Provide the perfect scrollbar to every list view by default\r\n      // (Behaviors cannot be inherited; add the PerfectScrolling\r\n      //  to the local clone of the descendant's behaviors.)\r\n      if (!(this.behaviors && _.any(this.behaviors, function (behavior, key) {\r\n        return behavior.behaviorClass === PerfectScrollingBehavior;\r\n      }))) {\r\n        this.behaviors = _.extend({\r\n          PerfectScrolling: {\r\n            behaviorClass: PerfectScrollingBehavior,\r\n            contentParent: '.csui-pman-list',\r\n            suppressScrollX: true,\r\n            // like bottom padding of container, otherwise scrollbar is shown always\r\n            scrollYMarginOffset: 15\r\n          }\r\n        }, this.behaviors);\r\n      }\r\n\r\n      Marionette.CompositeView.call(this, options);\r\n\r\n      // TODO: Deprecate this, or fix it, so that a collection can be created\r\n      // without breaking the client\r\n      // Passing a collection without knowing its model schema and identifier\r\n      // is not possible in Backbone, where the collections should be indexed\r\n      if (this.options.data && this.options.data.items) {\r\n        if (!this.collection) {\r\n          var ViewCollection = Backbone.Collection.extend({\r\n            model: Backbone.Model.extend({\r\n              idAttribute: null\r\n            })\r\n          });\r\n          this.collection = new ViewCollection();\r\n        }\r\n        this.collection.add(this.options.data.items);\r\n      }\r\n    },\r\n\r\n    ui: {\r\n      back: '.cs-go-back'\r\n    },\r\n    className: 'csui-pman-list',\r\n\r\n    events: {\r\n      'click @ui.back': 'onClickBack'\r\n    },\r\n\r\n    childEvents: {\r\n      'change:layout': 'onChangeLayout',\r\n      'set:active': 'setActive'\r\n    },\r\n\r\n    template: ListTemplate,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        goBackTooltip: Lang.goBackTooltip\r\n      };\r\n    },\r\n\r\n    childViewContainer: '.cs-list-group',\r\n\r\n    childView: ListItemView,\r\n\r\n    childViewOptions: function () {\r\n      return this.options;\r\n    },\r\n\r\n    onClickBack: function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.trigger('click:back');\r\n    },\r\n\r\n    setActive: function (childView) {\r\n      this.$el.find('.csui-layout-item').removeClass('binf-active');\r\n      childView.$el.find('.csui-layout-item').addClass('binf-active');\r\n    },\r\n\r\n    onChangeLayout: function (childView) {\r\n      var self = this;\r\n      require(['csui/dialogs/modal.alert/modal.alert'], function (ModalAlertView) {\r\n        ModalAlertView.confirmWarning(Lang.changePageLayoutConfirmatonText, Lang.layoutTabTitle,\r\n            {\r\n              buttons: {\r\n                showYes: true,\r\n                labelYes: Lang.proceedButton,\r\n                showNo: true,\r\n                labelNo: Lang.changeLayoutCancelButton\r\n              }\r\n            })\r\n            .done(function (labelYes) {\r\n              if (labelYes) {\r\n                self.setActive(childView);\r\n                self.options.pmanView.trigger(\"change:layout\", childView.model.get('type'));\r\n              }\r\n            });\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  return PManPanelView;\r\n});\r\n\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/pman',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"pman-backdrop\\\"></div>\\r\\n<div class=\\\"pman-header\\\">\\r\\n  <div class=\\\"pman-header-backdrop\\\"></div>\\r\\n  <div class=\\\"pman-tools-container\\\">\\r\\n    <div class=\\\"pman-left-tools\\\">\\r\\n      <ul>\\r\\n        <li class=\\\"pman-toolitem\\\">\\r\\n          <button class=\\\"icon icon-toolbarAdd\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.addWidget : depth0), depth0))\n    + \"\\\"></button>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <div class=\\\"pman-pannel-wrapper\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"pman-right-tools\\\">\\r\\n      <ul>\\r\\n        <li>\\r\\n          <button class=\\\"binf-btn icon-save\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.save : depth0), depth0))\n    + \"\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.save : depth0), depth0))\n    + \"</button>\\r\\n        </li>\\r\\n        <li>\\r\\n          <button class=\\\"binf-btn cancel-edit\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.cancel : depth0), depth0))\n    + \"\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.cancel : depth0), depth0))\n    + \"</button>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"pman-trash-area\\\">\\r\\n    <div class=\\\"pman-trash-banner\\\"></div>\\r\\n  </div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_pman', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/impl/pman',[],function(){});\n","csui.define('csui/perspective.manage/behaviours/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/perspective.manage/behaviours/impl/nls/root/lang',{\r\n  deleteConfirmMsg: 'Are you sure, you want to remove widget?',\r\n  deleteConfirmTitle: 'Remove Widget',\r\n  replaceConfirmMsg: 'Are you sure, you want to replace widget?',\r\n  replaceConfirmTitle: 'Replace Widget',\r\n  widgetSizeTitle: 'Widget size',\r\n  widgetSizeDescription: 'Determines how much space the widget occupies. Note that widgets are re-sized automatically to display optimally on smaller screens.',\r\n  removeWidget: 'Remove widget'\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/behaviours/impl/widget.masking',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"csui-pman-widget-masking\\\">\\r\\n  <div class=\\\"csui-pman-widget-close clear-icon\\\" title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.removeWidget || (depth0 != null ? depth0.removeWidget : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"removeWidget\",\"hash\":{}}) : helper)))\n    + \"\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"csui-pman-popover-right csui-pman-popover-holder\\\"></div>\\r\\n<div class=\\\"csui-pman-popover-left csui-pman-popover-holder\\\"></div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_behaviours_impl_widget.masking', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/behaviours/impl/widget.masking',[],function(){});\n","/**\r\n * Responsibilities:\r\n *  - Masking the unit level widget of perpsective. In case of grid.view, it will be cell\r\n *  - Listen and handle DnD of widgets and act accordingly - replace widgets\r\n *  - Fire \"replace:widget\" on dropping of any widget\r\n *  - Deleting a widget from perspective\r\n *  - Configuration of widget using callouts\r\n *\r\n * Usage:\r\n *  - Should be applied to widgets of perspective to be able to configure them\r\n *\r\n * Required Inputs:\r\n *  - perspectiveView\r\n *  - widgetView\r\n *\r\n * Events:\r\n *  - replace:widget\r\n *    - Fires on perspectiveView\r\n *    - When dropping any widget from tools on perpsective widget\r\n *  - delete:widget\r\n *    - Fires on perspectiveView\r\n *    - When deleting a perspective widget\r\n *  - update:widget:size\r\n *    - Firex Fires on perspectiveView\r\n *    - When change in size of widget\r\n *  - update:widget:config\r\n *    - Firex Fires on perspectiveView\r\n *    - When widget configuration options updated\r\n */\r\ncsui.define('csui/perspective.manage/behaviours/pman.widget.config.behaviour',['require', 'i18n', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/marionette', 'csui/utils/base', 'csui/lib/backbone', 'csui/utils/log',\r\n  'csui/models/widget/widget.model',\r\n  'csui/perspective.manage/impl/options.form.view',\r\n  'i18n!csui/perspective.manage/behaviours/impl/nls/lang',\r\n  'hbs!csui/perspective.manage/behaviours/impl/widget.masking',\r\n  'css!csui/perspective.manage/behaviours/impl/widget.masking',\r\n], function (require, i18n, _, $, Marionette, base, Backbone, log, WidgetModel,\r\n    WidgetOptionsFormView, lang, maskingTemplate) {\r\n  'use strict';\r\n\r\n  /**\r\n   * View to mask the perspective widget and handles the widget configuration\r\n   */\r\n  var WidgetMaskingView = Marionette.ItemView.extend({\r\n    template: maskingTemplate,\r\n    className: function () {\r\n      return WidgetMaskingView.className\r\n    },\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        removeWidget: lang.removeWidget,\r\n      }\r\n    },\r\n\r\n    ui: {\r\n      delete: '.csui-pman-widget-close',\r\n      masking: '.csui-pman-widget-masking'\r\n    },\r\n\r\n    events: {\r\n      'click @ui.masking': '_showCallout',\r\n      'drop': 'onDrop',\r\n      'dragover': 'onDragOver',\r\n      'dragenter': 'onDragEnter',\r\n      'dragleave': 'onDragLeave',\r\n      'click @ui.delete': 'onDeleteClick'\r\n    },\r\n\r\n    constructor: function WidgetMaskingView(options) {\r\n      Marionette.ItemView.apply(this, arguments);\r\n      this.dropCounter = 0;\r\n      this.manifest = undefined;\r\n      this.perspectiveView = options.perspectiveView;\r\n      this.widgetView = options.widgetView;\r\n      this.widgetConfig = options.widgetConfig;\r\n    },\r\n\r\n    _isConfigurable: function () {\r\n      return !!this.widgetConfig && !_.isEmpty(this.widgetConfig) &&\r\n             this.widgetConfig.type !== 'csui/perspective.manage/widgets/perspective.placeholder' &&\r\n             this.widgetConfig.type !== 'csui/widgets/error';\r\n    },\r\n\r\n    onRender: function () {\r\n      if (!this._isConfigurable()) {\r\n        // Widget configuration not found. Hence cannot show callout\r\n        return;\r\n      }\r\n      var self = this;\r\n      this._loadManifest().done(function (manifest) {\r\n        self._createOptionsForm(function () {\r\n          self._updateWidgetOptions();\r\n        });\r\n      });\r\n    },\r\n\r\n    _showCallout: function () {\r\n      if (!this._isConfigurable()) {\r\n        // Widget configuration not found. Hence cannot show callout\r\n        return;\r\n      }\r\n      // open widget configuration callout\r\n      this._loadManifest().done(function (manifest) {\r\n        this._showOptionsCallout(manifest);\r\n      }.bind(this));\r\n    },\r\n\r\n    _showOptionsCallout: function (manifest) {\r\n      this._calculatePopoverPlacement();\r\n\r\n      //To resolve LPAD-73913 defect.\r\n      if (base.isIE11() && !!document.activeElement) {\r\n        document.activeElement.blur();\r\n      }\r\n      if (!!this.$popoverEl.data('binf.popover')) {\r\n        // Currently showing popover. Close it.\r\n        this.$popoverEl.binf_popover('destroy');\r\n        this.optionsFormView && this.optionsFormView.$el.remove();\r\n        return;\r\n      }\r\n      this.perspectiveView.$el.find('.' + WidgetMaskingView.className +\r\n                                    ' .csui-pman-popover-holder').binf_popover('destroy');\r\n\r\n      if (!!this.optionsFormView) {\r\n        // Toggle. Open popover with existing form.view\r\n        this._showPopover();\r\n      } else {\r\n        this._createOptionsForm();\r\n      }\r\n    },\r\n\r\n    _createOptionsForm: function (afterRenderCallback) {\r\n      this.optionsFormView = new WidgetOptionsFormView(_.defaults({\r\n        context: this.perspectiveView.options.context,\r\n        manifest: this.manifest\r\n      }, this.options));\r\n      if (!!afterRenderCallback) {\r\n        this.optionsFormView.listenToOnce(this.optionsFormView, 'render:form', afterRenderCallback);\r\n      }\r\n      this.optionsFormView.render();\r\n      this.optionsFormView.listenTo(this.optionsFormView, 'change:field',\r\n          this._onChangeField.bind(this));\r\n    },\r\n\r\n    _calculatePopoverPlacement: function () {\r\n      var adjust = this._determineCalloutPlacement();\r\n      this.$popoverEl = this.$el.find('.csui-pman-popover-' + adjust.placement);\r\n      if (adjust.mirror) {\r\n        adjust.placement = adjust.placement == 'right' ? 'left' : 'right';\r\n      }\r\n      this.placement = adjust.placement;\r\n      this.$popoverContainer = $(\r\n          '<div class=\"binf-popover pman-widget-popover pman-ms-popover\" role=\"tooltip\"><div class=\"binf-arrow\"></div><h3 class=\"binf-popover-title\"></h3><div class=\"binf-popover-content\"></div></div>');\r\n      this.$popoverContainer.css(\"max-width\", adjust.availableSpace + \"px\");\r\n    },\r\n\r\n    /**\r\n     * Determite callout position and show widget configuration callout\r\n     */\r\n    _showPopover: function () {\r\n      var popoverOptions = {\r\n        html: true,\r\n        content: this.optionsFormView.el,\r\n        trigger: 'manual',\r\n        viewport: { // Limit popover placement to perspective panel only\r\n          selector: this.options.perspectiveSelector,\r\n          padding: 15\r\n        },\r\n        placement: this.placement,\r\n        template: this.$popoverContainer,\r\n        animation: false\r\n      };\r\n      this.$popoverEl.binf_popover(popoverOptions);\r\n      this.$popoverEl.off('hidden.binf.popover')\r\n          .on('hidden.binf.popover', this._handleCalloutHide.bind(this));\r\n      this.$popoverEl.binf_popover('show');\r\n      //To change the border color to red for non supported widgets.\r\n      this.optionsFormView.onPopoverShow(this.$popoverContainer);\r\n      this.optionsFormView.$el.find('.cs-formview-wrapper').trigger('refresh:setcontainer');\r\n      var popover   = this.$popoverEl.next(\".binf-popover\"),\r\n          itemFirst = popover.find(\".alpaca-container-item-first\");\r\n      if (itemFirst.length) {\r\n        itemFirst = itemFirst.first();\r\n        var ele = itemFirst.find(\r\n            'input:visible, textarea:visible, button.binf-dropdown-toggle:visible');\r\n        if (ele.length) {\r\n          ele.focus();\r\n        }\r\n      }\r\n      this._registerPopoverEvents();\r\n      this.optionsFormView.trigger('ensure:scrollbar');\r\n    },\r\n\r\n    _registerPopoverEvents: function () {\r\n      $('.perspective-editing .cs-perspective-panel').on('click.' + this.cid, {\r\n            view: this\r\n          },\r\n          this._documentClickHandler);\r\n      $('.pman-container').on('click.' + this.cid, {\r\n        view: this\r\n      }, this._documentClickHandler);\r\n      $(window).on('resize.' + this.cid, {\r\n        view: this\r\n      }, this._windowResizeHandler);\r\n    },\r\n\r\n    _windowResizeHandler: function (event) {\r\n      var self = event.data.view;\r\n      // closing opened popover on window resize\r\n      self.$popoverEl.binf_popover('destroy');\r\n    },\r\n\r\n    _unregisterPopoverEvents: function () {\r\n      $('.perspective-editing .cs-perspective-panel').off('click.' + this.cid,\r\n          this._documentClickHandler);\r\n      $('.pman-container').off('click.' + this.cid, this._documentClickHandler);\r\n      $(window).off('resize.' + this.cid, this._windowResizeHandler);\r\n    },\r\n\r\n    /**\r\n     * Handle callout data update to widget on hidding of popover\r\n     */\r\n    _handleCalloutHide: function () {\r\n      this._unregisterPopoverEvents();\r\n      this._updateWidgetOptions();\r\n    },\r\n\r\n    _updateWidgetOptions: function () {\r\n      var isValid = this.optionsFormView.validate();\r\n      var options = this.optionsFormView.getValues();\r\n      this.perspectiveView.trigger(\"update:widget:options\", {\r\n        widgetView: this.widgetView,\r\n        isValid: isValid,\r\n        options: options\r\n      });\r\n      if (isValid) {\r\n        this.widgetView.$el.removeClass('binf-has-error');\r\n      } else {\r\n        this.widgetView.$el.addClass('binf-has-error');\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Listen document click to close callouts\r\n     */\r\n    _documentClickHandler: function (event) {\r\n      var self = event.data.view;\r\n      if (!!$(event.target).closest('.binf-popover').length) {\r\n        // Click on popover\r\n        return;\r\n      }\r\n      if (self.$el.is(event.target) || !!self.$el.has(event.target).length) {\r\n        // Click on current widget\r\n        return;\r\n      }\r\n      if (!$.contains(document, event.target)) {\r\n        // Not Exist in DOM\r\n        return;\r\n      }\r\n      self._unregisterPopoverEvents();\r\n      self.$popoverEl.binf_popover('destroy');\r\n    },\r\n\r\n    _onChangeField: function (field) {\r\n      if (field.name === WidgetOptionsFormView.widgetSizeProperty) {\r\n        // Notify perspective panel about size change to do respective DOM / style updates\r\n        this.perspectiveView.trigger(\"update:widget:size\", this.options.widgetView, field.value);\r\n        // Close popover for now.\r\n        this.$popoverEl.binf_popover('destroy');\r\n        // TODO Re-position popover as widget size may change\r\n        // this._calculatePopoverPlacement();\r\n        // this._showPopover();\r\n      }\r\n    },\r\n\r\n    _evalRequiredFormWidth: function () {\r\n      // var formContainer = $(\"<div class='pman-widget-popover'/>\");\r\n      // formContainer.appendTo(document.body);\r\n\r\n      this.optionsFormView.$el.addClass('pman-prerender-form');\r\n      this.optionsFormView.$el.addClass('pman-widget-popover');\r\n      this.optionsFormView.$el.appendTo(document.body);\r\n      this.optionsFormView.$el.find('.cs-formview-wrapper').trigger('refresh:setcontainer');\r\n      var formWidth = this.optionsFormView.$el.width();\r\n      if (this.optionsFormView.$el.find('.csui-scrollablecols').length > 0) {\r\n        formWidth += this.optionsFormView.$el.find('.csui-scrollablecols')[0].scrollWidth -\r\n                     this.optionsFormView.$el.find('.csui-scrollablecols')[0].offsetWidth;\r\n      }\r\n      this.optionsFormView.$el.removeClass('pman-widget-popover');\r\n      return formWidth;\r\n    },\r\n\r\n    _calculateSpaceAroundWidget: function () {\r\n      var elWidth       = this.$el.width(),\r\n          elWidth       = (elWidth / 2),\r\n          documentWidth = $(document).width(),\r\n          leftOffset    = this.$el.find('.csui-pman-popover-left').offset().left,\r\n          rightOffset   = documentWidth - this.$el.find('.csui-pman-popover-right').offset().left;\r\n\r\n      var aroundSpaces = {\r\n        right: {\r\n          placement: 'right',\r\n          mirror: false,\r\n          availableSpace: rightOffset\r\n        },\r\n        rightFlip: {\r\n          placement: 'right',\r\n          mirror: true,\r\n          availableSpace: (documentWidth - rightOffset)\r\n        },\r\n        left: {\r\n          placement: 'left',\r\n          mirror: false,\r\n          availableSpace: leftOffset\r\n        },\r\n        leftFlip: {\r\n          placement: 'left',\r\n          mirror: true,\r\n          availableSpace: (documentWidth - leftOffset)\r\n        }\r\n      };\r\n      return aroundSpaces;\r\n    },\r\n\r\n    _determineCalloutPlacement: function () {\r\n      var isRtl     = i18n && i18n.settings.rtl,\r\n          formWidth = this._evalRequiredFormWidth() + 20, // For additional spacing around Form\r\n          allSpaces = this._calculateSpaceAroundWidget(),\r\n          i, perfectSpace, highSpace;\r\n\r\n      var spacings = !isRtl ?\r\n          [allSpaces.right, allSpaces.left, allSpaces.leftFlip, allSpaces.rightFlip] :\r\n          [allSpaces.left, allSpaces.right, allSpaces.rightFlip, allSpaces.leftFlip];\r\n\r\n      for (i = 0; i < spacings.length; i++) {\r\n        var current = spacings[i];\r\n        if (formWidth < current.availableSpace) {\r\n          perfectSpace = current;\r\n          break;\r\n        }\r\n        if (!highSpace || current.availableSpace > highSpace.availableSpace) {\r\n          highSpace = current;\r\n        }\r\n      }\r\n      if (!perfectSpace) {\r\n        // Widget is not perfect fit in any edge. So take high availability\r\n        perfectSpace = highSpace;\r\n      }\r\n      perfectSpace.availableSpace -= 20; // For additional spacing around popover.\r\n\r\n      return perfectSpace;\r\n    },\r\n\r\n    _isPreviewWidget: function () {\r\n      return this.widgetConfig.type === WidgetMaskingView.perspectiveWidget;\r\n    },\r\n\r\n    _loadManifest: function () {\r\n      if (this.manifest !== undefined) {\r\n        return $.Deferred().resolve(this.manifest);\r\n      }\r\n      if (this._isPreviewWidget()) {\r\n        // For widgets added using DnD, get manifest from perspective widget's options \r\n        // since Perspective widget will be added as preview for original widget\r\n        this.manifest = this.widgetConfig.options.widget.get('manifest');\r\n        return this._loadManifest();\r\n      }\r\n      var deferred = $.Deferred();\r\n      var self        = this,\r\n          widgetModel = new WidgetModel({\r\n            id: this.widgetConfig.type\r\n          });\r\n      widgetModel.fetch().then(function () {\r\n        self.manifest = widgetModel.get('manifest');\r\n        deferred.resolve(self.manifest);\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    onDeleteClick: function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      var self = this;\r\n      require(['csui/dialogs/modal.alert/modal.alert'], function (alertDialog) {\r\n        alertDialog.confirmQuestion(lang.deleteConfirmMsg, lang.deleteConfirmTitle)\r\n            .done(function (yes) {\r\n              if (yes) {\r\n                self._doDeleteWidget();\r\n              }\r\n            });\r\n      });\r\n    },\r\n\r\n    _doDeleteWidget: function () {\r\n      this.perspectiveView.trigger(\"delete:widget\", this.widgetView);\r\n    },\r\n\r\n    _doReplaceWidget: function (widgetToReplace) {\r\n      var manifest = (widgetToReplace.get('manifest') || {});\r\n      this.perspectiveView.trigger('replace:widget', this.widgetView, {\r\n        type: WidgetMaskingView.perspectiveWidget,\r\n        kind: manifest.kind,\r\n        options: {\r\n          options: {}, // To be used and filled by callout form\r\n          widget: widgetToReplace\r\n        }\r\n      });\r\n    },\r\n\r\n    onDragOver: function (event) {\r\n      event.preventDefault();\r\n    },\r\n\r\n    onDragEnter: function (event) {\r\n      event.preventDefault();\r\n      this.dropCounter++;\r\n      this.$el.siblings(\".csui-perspective-placeholder\").addClass('csui-widget-drop');\r\n    },\r\n\r\n    onDragLeave: function () {\r\n      this.dropCounter--;\r\n      if (this.dropCounter === 0) {\r\n        this.$el.siblings(\".csui-perspective-placeholder\").removeClass('csui-widget-drop');\r\n      }\r\n    },\r\n\r\n    _extractWidgetToDrop: function (event) {\r\n      var dragData = event.originalEvent.dataTransfer.getData(\"text\");\r\n      if (!dragData) {\r\n        return undefined;\r\n      }\r\n      try { // TODO get rid of try catch and handle like non-droppable object\r\n        var widgetToReplace = new WidgetModel(JSON.parse(dragData));\r\n        return widgetToReplace;\r\n      } catch (e) {\r\n        // Unsupported drop\r\n        return false;\r\n      }\r\n    },\r\n\r\n    onDrop: function (event) {\r\n      event.preventDefault();\r\n      this.onDragLeave();\r\n      var widgetToReplace = this._extractWidgetToDrop(event);\r\n      if (!widgetToReplace) {\r\n        return;\r\n      }\r\n      if (this.widgetConfig.type === WidgetMaskingView.placeholderWidget) {\r\n        this._doReplaceWidget(widgetToReplace);\r\n      } else {\r\n        var self = this;\r\n        require(['csui/dialogs/modal.alert/modal.alert'], function (alertDialog) {\r\n          alertDialog.confirmQuestion(lang.replaceConfirmMsg, lang.replaceConfirmTitle)\r\n              .done(function (userConfirmed) {\r\n                if (userConfirmed) {\r\n                  self._doReplaceWidget(widgetToReplace);\r\n                }\r\n              });\r\n        });\r\n      }\r\n    }\r\n\r\n  }, {\r\n    className: 'csui-configure-perspective-widget',\r\n    perspectiveWidget: 'csui/perspective.manage/widgets/perspective.widget',\r\n    placeholderWidget: 'csui/perspective.manage/widgets/perspective.placeholder',\r\n    widgetSizeProperty: '__widgetSize'\r\n  });\r\n\r\n  var PerspectiveWidgetConfigurationBehaviour = Marionette.Behavior.extend({\r\n\r\n    defaults: {\r\n      perspectiveSelector: '.perspective-editing .cs-perspective > div'\r\n    },\r\n\r\n    constructor: function PerspectiveWidgetConfigurationBehaviour(options, view) {\r\n      if (!options.perspectiveView) {\r\n        throw new Marionette.Error({\r\n          name: 'perspectiveView',\r\n          message: 'Undefined perspectiveView options'\r\n        });\r\n      }\r\n      this.perspectiveView = options.perspectiveView;\r\n      Marionette.Behavior.prototype.constructor.apply(this, arguments);\r\n      this.view = view;\r\n      _.extend(this.perspectiveView, {\r\n        getPManPlaceholderWidget: function () {\r\n          return {\r\n            type: WidgetMaskingView.placeholderWidget,\r\n            options: {}\r\n          };\r\n        }\r\n      })\r\n    },\r\n\r\n    _ensureWidgetElement: function () {\r\n      if (!_.isObject(this.$widgetEl)) {\r\n        // Consider element to add mask can be provided through options\r\n        this.$widgetEl = this.options.el ? $(this.options.el) : this.view.$el;\r\n      }\r\n      if (!this.$widgetEl || this.$widgetEl.length === 0) {\r\n        throw new Marionette.Error('An \"el\" ' + this.$widgetEl.selector + ' must exist in DOM');\r\n      }\r\n      return true;\r\n    },\r\n\r\n    _checkAndApplyMask: function () {\r\n      if (this.$el.find('.' + WidgetMaskingView.className).length > 0) {\r\n        // Mask exist\r\n        return;\r\n      }\r\n      this._ensureWidgetElement();\r\n\r\n      // Get data configured to widget\r\n      var widgetConfig = this._resolveWidgetConfiguration();\r\n      var maskingView = new WidgetMaskingView(\r\n          _.extend(this.options, {\r\n            widgetView: this.view,\r\n            widgetConfig: widgetConfig\r\n          }));\r\n      maskingView.render();\r\n      this.$widgetEl.append(maskingView.el);\r\n      this.$widgetEl.addClass('csui-pman-editable-widget')\r\n      // To be used perspective.view to show placeholder watermark\r\n      this.$widgetEl.data('pman.widget', {\r\n        attributes: {\r\n          manifest: widgetConfig\r\n        }\r\n      });\r\n      if (widgetConfig.type === WidgetMaskingView.placeholderWidget) {\r\n        // Prevent perspective placeholder to participate in sorting.\r\n        this.$widgetEl.removeClass('csui-draggable-item');\r\n      }\r\n    },\r\n\r\n    _resolveWidgetConfiguration: function () {\r\n      if (!!this.view.model && !!this.view.model.get('widget')) {\r\n        // Try model of widget view - Flow, LCR, Grid.. who even using grid control \r\n        return this.view.model.get('widget');\r\n      }\r\n      if (!!this.view.getPManWidgetConfig && _.isFunction(this.view.getPManWidgetConfig)) {\r\n        // Widget configuration can be provided though a function \r\n        return this.view.getPManWidgetConfig();\r\n      }\r\n      if (!!this.options.widgetConfig) {\r\n        // Can be provided through behaviour's options\r\n        return this.options.widgetConfig;\r\n      }\r\n    },\r\n\r\n    onRender: function () {\r\n      this._checkAndApplyMask();\r\n    },\r\n\r\n    onDestroy: function () {}\r\n\r\n  });\r\n\r\n  return PerspectiveWidgetConfigurationBehaviour;\r\n\r\n});\n","csui.define('csui/perspective.manage/pman.view',['csui/lib/underscore', 'csui/lib/jquery', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/utils/base',\r\n  'csui/utils/non-emptying.region/non-emptying.region',\r\n  'csui/perspective.manage/impl/pman.panel.view',\r\n  'i18n!csui/perspective.manage/impl/nls/root/lang',\r\n  'hbs!csui/perspective.manage/impl/pman',\r\n  'css!csui/perspective.manage/impl/pman',\r\n  'csui/perspective.manage/behaviours/pman.widget.config.behaviour'\r\n], function (_, $, Backbone, Marionette, base, NonEmptyingRegion, PManPanelView, lang, template) {\r\n\r\n  var pmanContainer;\r\n\r\n  var PManView = Marionette.ItemView.extend({\r\n    className: 'pman pman-container',\r\n    template: template,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        addWidget: lang.addWidget,\r\n        save: lang.save,\r\n        cancel: lang.cancel\r\n      };\r\n    },\r\n\r\n    ui: {\r\n      \"pmanPanel\": \".pman-header .pman-pannel-wrapper\",\r\n      'cancelEdit': '.pman-header .cancel-edit',\r\n      'addIcon': '.pman-header .icon-toolbarAdd',\r\n      'saveBtn': '.pman-header .icon-save',\r\n      'trashArea': '.pman-header .pman-trash-area'\r\n    },\r\n\r\n    events: {\r\n      'click @ui.cancelEdit': \"onClickClose\",\r\n      'click @ui.addIcon': \"togglePannel\",\r\n      'click @ui.saveBtn': \"onClickSave\"\r\n    },\r\n\r\n    constructor: function PManView(options) {\r\n      options || (options = {});\r\n      _.defaults(options, {\r\n        applyMasking: this.applyMasking.bind(this),\r\n        container: document.body\r\n      });\r\n      options.container = $(options.container);\r\n      this.context = options.context;\r\n      this._prepareForEdit(options.perspective || options.context.perspective);\r\n      Marionette.ItemView.prototype.constructor.call(this, options);\r\n      this._registerEventHandler();\r\n    },\r\n\r\n    _registerEventHandler: function () {\r\n      this.listenTo(this, 'change:layout', function (newLayoutType) {\r\n        this.perspective.set('perspective', {\r\n          type: newLayoutType,\r\n          options: {perspectiveMode: 'edit'}\r\n        }, {silent: true});\r\n        this._triggerEditMode();\r\n        this.togglePannel();\r\n      });\r\n      this.listenTo(this.context, 'save:perspective', this._savePerspective);\r\n      // listen to change perspective and exit from edit mode\r\n      this.listenTo(this.context, 'change:perspective', this._onChangePerspective);\r\n      this.listenTo(this.context, 'retain:perspective', this._doExitPerspective);\r\n    },\r\n\r\n    _prepareForEdit: function (originalPerspective) {\r\n      if (!originalPerspective) {\r\n        throw new Error(\"Missing perspective\");\r\n      }\r\n      this.perspective = this._clonePrespective(originalPerspective);\r\n      if (this.perspective.isNew()) {\r\n        // No perspectives are configues to current node\r\n        this.perspective.set('perspective', this._getDefaultPerspectiveConfig());\r\n      }\r\n\r\n      var perspectiveOptions = this.perspective.get('perspective').options || {};\r\n      perspectiveOptions.perspectiveMode = 'edit';\r\n    },\r\n\r\n    _clonePrespective: function (original) {\r\n      var perspectiveConfig = original.get('perspective');\r\n      var config = JSON.parse(JSON.stringify(perspectiveConfig));\r\n      original.set('perspective', config);\r\n      return original;\r\n    },\r\n\r\n    show: function () {\r\n      var container = this.getContainer(),\r\n          region    = new NonEmptyingRegion({\r\n            el: container\r\n          });\r\n      region.show(this);\r\n      return this;\r\n    },\r\n\r\n    getContainer: function () {\r\n      if (!pmanContainer || !$.contains(this.options.container, pmanContainer)) {\r\n        pmanContainer = $('<div>', {'class': 'binf-widgets'}).appendTo(this.options.container)[0]\r\n      }\r\n      return pmanContainer;\r\n    },\r\n\r\n    /**\r\n     * Default perspective when no perspectives configured for a container\r\n     */\r\n    _getDefaultPerspectiveConfig: function () {\r\n      // TODO check if LCR is relevant to all containers.\r\n      return {\r\n        \"type\": \"left-center-right\",\r\n        \"options\": {\r\n          \"center\": {\r\n            \"type\": \"csui/widgets/nodestable\"\r\n          }\r\n        }\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Updates / creates perspective\r\n     */\r\n    _savePerspective: function (perspectiveChanges) {\r\n      this.perspective.set(perspectiveChanges);\r\n      var self = this;\r\n      // Save perspective to server\r\n      this.perspective.save().then(function () {\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          // Perspective save success\r\n          GlobalMessage.showMessage(\"success\", lang.perspectiveSaveSuccess);\r\n          // Update context's perspective and exit from inline editing\r\n          perspectiveChanges.perspective.id = self.perspective.get('id');\r\n          self.context.perspective.set(perspectiveChanges.perspective);\r\n          self._doExitPerspective();\r\n        });\r\n      }, function (error) {\r\n        // API error while saving..\r\n        var errorMessage;\r\n        if (error && error.responseJSON && error.responseJSON.error) {\r\n          errorMessage = error.responseJSON.error;\r\n        } else {\r\n          var errorHtml = base.MessageHelper.toHtml();\r\n          base.MessageHelper.reset();\r\n          errorMessage = $(errorHtml).text();\r\n        }\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          GlobalMessage.showMessage(\"error\", errorMessage);\r\n        });\r\n      });\r\n    },\r\n\r\n    onClickSave: function () {\r\n      //Close collout if any open\r\n      var popoverTarget = this.options.container.find(\".binf-popover\");\r\n      if (popoverTarget.length) {\r\n        popoverTarget.binf_popover('hide');\r\n      }\r\n      this.context.triggerMethod('serialize:perspective', this.perspective);\r\n    },\r\n\r\n    onClickClose: function () {\r\n      this._doExitPerspective();\r\n    },\r\n\r\n    togglePannel: function () {\r\n      if (!this.ui.pmanPanel.hasClass('binf-active')) {\r\n        // Reset before showing panel\r\n        this._openToolsPanel();\r\n      } else {\r\n        this._closeToolsPanel();\r\n      }\r\n    },\r\n\r\n    _openToolsPanel: function () {\r\n      this.pmanPanelView.trigger('reset:items');\r\n      this.ui.addIcon.addClass('binf-active');\r\n      this.ui.addIcon.attr(\"title\", lang.close);\r\n      this.ui.pmanPanel.addClass('binf-active');\r\n      this.pmanPanelView.triggerMethod(\"panel:open\");\r\n    },\r\n\r\n    _closeToolsPanel: function () {\r\n      this.ui.pmanPanel.removeClass('binf-active');\r\n      this.ui.addIcon.attr(\"title\", lang.addWidget);\r\n      this.ui.addIcon.removeClass('binf-active');\r\n    },\r\n\r\n    applyMasking: function () {\r\n\r\n    },\r\n\r\n    _initializeWidgets: function () {\r\n      this.pmanPanelRegion = new Marionette.Region({\r\n        el: this.ui.pmanPanel\r\n      });\r\n      this.pmanPanelView = new PManPanelView({\r\n        pmanView: this\r\n      });\r\n      this.pmanPanelRegion.show(this.pmanPanelView);\r\n      this.ui.trashArea.droppable({\r\n        tolerance: 'pointer',\r\n        hoverClass: \"pman-trash-hover\",\r\n        accept: function () {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    _triggerEditMode: function () {\r\n      var perspectiveConfig = new Backbone.Model(this.perspective.get('perspective'));\r\n      this.context.triggerMethod('enter:edit:perspective', perspectiveConfig);\r\n    },\r\n\r\n    onRender: function () {\r\n      var self = this;\r\n      this.options.container.addClass('perspective-editing');\r\n      this.options.applyMasking();\r\n      this._initializeWidgets();\r\n      this._triggerEditMode();\r\n      $(document).on('click.' + this.cid, {view: this}, this._documentClick);\r\n    },\r\n\r\n    _documentClick: function (event) {\r\n      var self = event.data.view;\r\n      if (self.ui.addIcon.is(event.target) || !!self.ui.addIcon.has(event.target).length) {\r\n        // Add Icon\r\n        return;\r\n      }\r\n      if (self.ui.pmanPanel.is(event.target) || !!self.ui.pmanPanel.has(event.target).length) {\r\n        // Pman panel\r\n        return;\r\n      }\r\n      self._closeToolsPanel();\r\n    },\r\n\r\n    _onChangePerspective: function() {\r\n      this._doCleanup();\r\n    },\r\n\r\n    _doCleanup: function() {\r\n      var popoverTarget = this.options.container.find(\".binf-popover\");\r\n      if (popoverTarget.length) {\r\n        popoverTarget.binf_popover('destroy');\r\n      }\r\n      this.options.container.removeClass('perspective-editing');\r\n      $(document).off('click.' + this.cid, this._documentClick);\r\n      this.trigger('destroy');\r\n    },\r\n\r\n    /**\r\n     * Edit from perspective inline editing mode.\r\n     */\r\n    _doExitPerspective: function () {\r\n      this._doCleanup();\r\n      this.context.triggerMethod('exit:edit:perspective', this.perspective);\r\n    },\r\n\r\n  }, {\r\n    placeHolderWidget: 'csui/perspective.manage/widgets/perspective.placeholder'\r\n  });\r\n\r\n  return PManView;\r\n});\r\n\n","csui.define('csui/perspective.manage/widgets/perspective.placeholder/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n  \n","csui.define('csui/perspective.manage/widgets/perspective.placeholder/impl/nls/root/lang',{\r\n  dndWidgetsHere: 'Drag and Drop widgets here'\r\n});\r\n  \n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"csui-placeholder-title\\\" title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.dndWidgetsHere || (depth0 != null ? depth0.dndWidgetsHere : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"dndWidgetsHere\",\"hash\":{}}) : helper)))\n    + \"\\\">\\r\\n  <div class=\\\"csui-placeholder-icon\\\"></div>\\r\\n  <div>\"\n    + this.escapeExpression(((helper = (helper = helpers.dndWidgetsHere || (depth0 != null ? depth0.dndWidgetsHere : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"dndWidgetsHere\",\"hash\":{}}) : helper)))\n    + \"</div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_widgets_perspective.placeholder_impl_perspective.placeholder', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder',[],function(){});\n","/**\r\n * Placeholder view to represent an empty widget in perpsective.\r\n * This will be replaces by perspective.widget (preview) on dropping of widgets on this\r\n */\r\ncsui.define('csui/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.view',['csui/lib/underscore', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'i18n!csui/perspective.manage/widgets/perspective.placeholder/impl/nls/lang',\r\n  'hbs!csui/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder',\r\n  'css!csui/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder'\r\n], function (_, Backbone, Marionette, lang, template) {\r\n  var PerspectivePlaceholderView = Marionette.ItemView.extend({\r\n    className: 'csui-perspective-placeholder',\r\n    template: template,\r\n    templateHelpers: function () {\r\n      return {\r\n        dndWidgetsHere: lang.dndWidgetsHere\r\n      }\r\n    },\r\n\r\n    constructor: function (options) {\r\n      Marionette.ItemView.apply(this, arguments);\r\n    },\r\n\r\n    onShow: function() {\r\n      this.$el.parent().addClass('csui-pman-placeholder-container');\r\n    },\r\n\r\n    onDestroy: function() {\r\n      this.$el.parent().removeClass('csui-pman-placeholder-container');\r\n    }\r\n\r\n  });\r\n  return PerspectivePlaceholderView;\r\n});\n","csui.define('csui/perspective.manage/widgets/perspective.widget/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n  \n","csui.define('csui/perspective.manage/widgets/perspective.widget/impl/nls/root/lang',{\r\n  noConfig: 'No configuration needed',\r\n  clickToConfig: 'Configuration needed'\r\n});\r\n  \n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/widgets/perspective.widget/impl/perspective.widget',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"tile-header\\\">\\r\\n  <div class=\\\"tile-title\\\">\\r\\n    <h2 class=\\\"csui-heading\\\" title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.widgetTitle || (depth0 != null ? depth0.widgetTitle : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"widgetTitle\",\"hash\":{}}) : helper)))\n    + \"\\\">\"\n    + this.escapeExpression(((helper = (helper = helpers.widgetTitle || (depth0 != null ? depth0.widgetTitle : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"widgetTitle\",\"hash\":{}}) : helper)))\n    + \"</h2>\\r\\n  </div>\\r\\n</div>\\r\\n<div>\\r\\n  <div title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.widgetMessage || (depth0 != null ? depth0.widgetMessage : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"widgetMessage\",\"hash\":{}}) : helper)))\n    + \"\\\" class=\\\"csui-pman-widget-msg\\\">\\r\\n    <div class=\\\"csui-pman-widget-icon\\\"></div>\\r\\n    <div>\"\n    + this.escapeExpression(((helper = (helper = helpers.widgetMessage || (depth0 != null ? depth0.widgetMessage : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"widgetMessage\",\"hash\":{}}) : helper)))\n    + \"</div>\\r\\n  </div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_widgets_perspective.widget_impl_perspective.widget', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/widgets/perspective.widget/impl/perspective.widget',[],function(){});\n","/**\r\n * Preview view of any widget\r\n */\r\ncsui.define('csui/perspective.manage/widgets/perspective.widget/perspective.widget.view',['csui/lib/underscore', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'i18n!csui/perspective.manage/widgets/perspective.widget/impl/nls/lang',\r\n  'hbs!csui/perspective.manage/widgets/perspective.widget/impl/perspective.widget',\r\n  'css!csui/perspective.manage/widgets/perspective.widget/impl/perspective.widget'\r\n], function (_, Backbone, Marionette, lang, template) {\r\n  var PerspectiveWidgetView = Marionette.ItemView.extend({\r\n    className: 'csui-pman-widget',\r\n    template: template,\r\n    templateHelpers: function () {\r\n      var wConfig = this.widget.get(\"manifest\");\r\n      var noConfig = !wConfig || !wConfig.schema || !wConfig.schema.properties ||\r\n                     _.isEmpty(wConfig.schema.properties);\r\n      return {\r\n        widgetTitle: this.widget.get('title'),\r\n        widgetMessage: noConfig ? lang.noConfig : lang.clickToConfig\r\n      }\r\n    },\r\n\r\n    constructor: function (options) {\r\n      Marionette.ItemView.apply(this, arguments);\r\n      this.widget = options.data.widget;\r\n    }\r\n  });\r\n  return PerspectiveWidgetView;\r\n});\n","\ncsui.define('json!csui/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.manifest.json',{\r\n  \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n  \"title\": \"{{title}}\",\r\n  \"description\": \"{{description}}\",\r\n  \"kind\": \"tile\",\r\n  \"schema\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {}\r\n  }\r\n}\r\n  \r\n);\n\n","\ncsui.define('json!csui/perspective.manage/widgets/perspective.widget/perspective.widget.manifest.json',{\r\n  \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n  \"title\": \"{{title}}\",\r\n  \"description\": \"{{description}}\",\r\n  \"kind\": \"tile\",\r\n  \"schema\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {}\r\n  }\r\n}\r\n);\n\n","csui.define('csui/perspective.manage/widgets/perspective.placeholder/impl/nls/perspective.placeholder.manifest',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/perspective.manage/widgets/perspective.placeholder/impl/nls/root/perspective.placeholder.manifest',{\r\n  dndWidgetsHere: 'Drag and Drop widgets here'\r\n});\r\n\n","\n","csui.define('csui/perspective.manage/widgets/perspective.widget/impl/nls/perspective.widget.manifest',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/perspective.manage/widgets/perspective.widget/impl/nls/root/perspective.widget.manifest',{\r\n  noConfig: 'No configuration needed',\r\n  clickToConfig: 'Configuration needed'\r\n});\r\n\n","\n","csui.define('bundles/csui-perspective',[\r\n    'csui/perspective.manage/pman.view',\r\n    'csui/perspective.manage/behaviours/pman.widget.config.behaviour',\r\n    'csui/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.view',\r\n    'csui/perspective.manage/widgets/perspective.widget/perspective.widget.view',\r\n    \r\n    // widgets manifests\r\n    'json!csui/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.manifest.json',\r\n    'json!csui/perspective.manage/widgets/perspective.widget/perspective.widget.manifest.json',\r\n\r\n    'i18n!csui/perspective.manage/widgets/perspective.placeholder/impl/nls/perspective.placeholder.manifest',\r\n    'i18n!csui/perspective.manage/widgets/perspective.widget/impl/nls/perspective.widget.manifest',\r\n], {});\r\n  \r\ncsui.require(['require', 'css'], function (require, css) {\r\n    css.styleLoad(require, 'csui/bundles/csui-perspective', true);\r\n});\r\n  \n"]}