{"version":3,"sources":["../../src/utils/command.error.js","../../src/utils/commands/nls/localized.strings.js","../../src/utils/commands/nls/root/localized.strings.js","../../src/utils/commands/nls/localized.strings!i18n","../../src/utils/commands/versions/nls/localized.strings.js","../../src/utils/commands/versions/nls/root/localized.strings.js","../../src/utils/commands/versions/nls/localized.strings!i18n","../../src/utils/commandhelper.js","../../src/models/command.js","../../src/integration/folderbrowser/commands/nls/localized.strings.js","../../src/integration/folderbrowser/commands/go.to.node.history.js","../../src/integration/folderbrowser/commands/nls/root/localized.strings.js","../../src/integration/folderbrowser/commands/nls/localized.strings!i18n","../../src/integration/folderbrowser/commands/open.full.page.container.js","../../src/models/commands.js","../../src/utils/commands!csui-ext","../../src/utils/commands.js","../../src/utils/commands/add.categories.js","../../src/dialogs/file.open/impl/file.open!hbs","../../src/dialogs/file.open/file.open.dialog.js","../../src/utils/commands/add.js","../../src/utils/commands/add.item.metadata.js","../../src/utils/commands/add.version.js","../../src/utils/commands/open.node.perspective.js","../../src/utils/commands/browse.js","../../src/utils/commands/collection/nls/lang.js","../../src/utils/commands/collection/nls/root/lang.js","../../src/utils/commands/collection/nls/lang!i18n","../../src/utils/commands/collection/collect.items.js","../../src/utils/commands/multiple.items.js","../../src/utils/commands/confirmable.js","../../src/utils/commands/collection/remove.collected.items.js","../../src/utils/commands/copy.js","../../src/utils/routing.js","../../src/utils/node.links/node.links!csui-ext","../../src/utils/node.links/node.links.js","../../src/utils/commands/copy.link.js","../../src/models/perspective/perspective.model.js","../../src/utils/commands/create.perspective.js","../../src/utils/commands/node.js","../../src/utils/commands/delete.js","../../src/utils/commands/download.js","../../src/utils/commands/zipanddownload.js","../../src/utils/commands/open.classic.page.js","../../src/utils/commands/edit.js","../../src/utils/commands/editactivex.js","../../src/utils/commands/editofficeonline.js","../../src/models/perspective/server.adaptor.mixin.js","../../src/models/perspective/perspective.template.model.js","../../src/utils/commands/edit.perspective.js","../../src/utils/commands/editwebdav.js","../../src/utils/commands/nls/lang.js","../../src/utils/commands/nls/root/lang.js","../../src/utils/commands/nls/lang!i18n","../../src/utils/commands/email.link.js","../../src/utils/commands/execute.saved.query.js","../../src/utils/commands/favorite.add.js","../../src/utils/commands/favorite.remove.js","../../src/utils/commands/inlineedit.js","../../src/utils/commands/move.js","../../src/utils/commands/navigate.js","../../src/utils/commands/open.plugins/open.plugins!csui-ext","../../src/utils/commands/open.plugins/open.plugins.js","../../src/utils/commands/open.js","../../src/utils/commands/open.discussion.js","../../src/utils/commands/open.form.js","../../src/utils/commands/open.milestone.js","../../src/utils/commands/open.channel.js","../../src/utils/commands/open.news.js","../../src/utils/commands/open.poll.js","../../src/utils/commands/open.prospector.js","../../src/utils/commands/open.specific.classic.page.js","../../src/utils/commands/open.specific.node.perspective.js","../../src/utils/commands/open.task.js","../../src/utils/commands/open.taskgroup.js","../../src/utils/commands/open.tasklist.js","../../src/utils/commands/open.topic.js","../../src/utils/commands/permissions.js","../../src/utils/commands/properties.js","../../src/utils/commands/rename.js","../../src/utils/commands/rename.favorite.js","../../src/utils/commands/reserve.js","../../src/utils/commands/run.livereport.js","../../src/utils/commands/sign.out.js","../../src/utils/commands/switch.to.classic.js","../../src/utils/commands/unreserve.js","../../src/utils/commands/user.profile.js","../../src/utils/commands/versions/delete.js","../../src/utils/commands/versions/download.js","../../src/utils/commands/versions/open.js","../../src/utils/commands/versions/properties.js","../../src/utils/commands/versions!csui-ext","../../src/utils/commands/versions.js","../../src/utils/commands/filter.js","../../src/utils/commands/description.toggle.js","../../src/utils/commands/thumbnail.toggle.js","../../src/utils/commands/save.filter.js","../../src/utils/commands/maximize.widget.view.js","../../src/utils/commands/restore.widget.size.js","../../src/utils/commands/permissions/apply.permission.js","../../src/utils/commands/permissions/edit.permission.js","../../src/utils/commands/permissions/change.owner.permission.js","../../src/utils/commands/permissions/delete.permission.js","../../src/utils/commands/permissions/add.user.group.js","../../src/utils/commands/permissions/add.owner.group.js","../../src/utils/commands/permissions/restore.public.access.js","../../src/temporary/cop/commands/open.blog.js","../../src/temporary/cop/commands/open.faq.js","../../src/temporary/cop/commands/open.forum.js","../../src/temporary/cop/commands/open.wiki.js","../../src/temporary/cop/commands/open.mailstore.js","../../src/utils/commands/goto.location.js","../../src/utils/commands/collection/collect.js","csui-commands.js"],"names":["csui","define","module","$","_","Backbone","log","base","CommandError","arg1","arg2","applyArg2","isString","this","errorDetails","Model","node","isObject","requestError","requestMessage","RequestErrorMessage","message","Error","stack","statusCode","call","name","prototype","Object","create","root","en-us","en","ShortcutPickerTitle","CommandNameAddItemMetadata","CommandNameAddVersion","CommandNameCopy","CommandVerbCopy","DialogTitleSingleCopy","DialogTitleCopy","SomeFilesNotCopiedSuccessfully","CopyingNodes","CopyingNode","CopyPageLeavingWarning","CopyingOneItem","CopyItems","CopySomeItems","CopyItemsNoneMessage","CopyOneItemSuccessMessage","CopySomeItemsSuccessMessage","CopyManyItemsSuccessMessage","CopyOneItemFailMessage","CopySomeItemsFailMessage","CopyManyItemsFailMessage","CopySomeItemsFailMessage2","CopyManyItemsFailMessage2","DeleteCommandConfirmDialogTitle","DeleteCommandConfirmDialogHtml","DeleteCommandConfirmDialogSingleMessage","DeleteCommandConfirmDialogMultipleMessage","CommandNameDelete","CommandVerbDelete","DeletePageLeavingWarning","DeleteItemFailed","DeleteItems","DeletingOneItem","DeletingSomeItems","DeleteItemsNoneMessage","DeleteOneItemSuccessMessage","DeleteSomeItemsSuccessMessage","DeleteManyItemsSuccessMessage","DeleteOneItemFailMessage","DeleteSomeItemsFailMessage","DeleteManyItemsFailMessage","DeleteSomeItemsFailMessage2","DeleteManyItemsFailMessage2","ApplyingManyItemsSuccessMessage","ApplyingOneItemFailMessage","ApplyingManyItemsFailMessage2","CommandNameDownload","CommandVerbDownload","CommandNameZipDownload","CommandVerbZipDownload","VerifyZipAndDownloadPrefetch","ExtractingZipAndDownload","CompressingZipAndDownload","CleanUpZipAndDownload","PreFlightDialogBtnContinue","DownloadDialogBtnDownload","DialogBtnCancel","InvalidArchiveCharacters","InvalidArchiveName","TheArchiveNameCannotBeEmpty","TheArchiveNameMaxLength","CommandNameMove","CommandNameVerbMove","DialogTitleSingleMove","DialogTitleMove","SomeFilesNotMovedSuccessfully","MovePageLeavingWarning","MovingNodes","MovingNode","MovingOneItem","MovingItems","MovingSomeItems","MoveItemsNoneMessage","MoveOneItemSuccessMessage","MoveSomeItemsSuccessMessage","MoveManyItemsSuccessMessage","MoveOneItemFailMessage","MoveSomeItemsFailMessage","MoveManyItemsFailMessage","MoveSomeItemsFailMessage2","MoveManyItemsFailMessage2","CommandNamePaste","CommandNameReserve","CommandVerbReserve","ReservePageLeavingWarning","ReserveItemsNoneMessage","ReserveOneItemSuccessMessage","ReserveSomeItemsSuccessMessage","ReserveManyItemsSuccessMessage","ReserveOneItemFailMessage","ReserveSomeItemsFailMessage","ReserveManyItemsFailMessage","CommandNameFavorite","CommandVerbFavorite","CommandDoneVerbFavorite","CommandRemovedVerbFavorite","updateFavoriteFailTitle","updateFavoriteFailMessage","CommandDescriptionToggle","CommandHideDescription","CommandShowDescription","CommandNameEmailLink","CommandVerbEmailLink","EmailLinkSubject","EmailLinkDesktop","EmailAppleLinkFormat","EmailLinkCommandFailedWithTooMuchItemsErrorMessage","EmailLinkCommandFailedWithTooMuchItemsDetailErrorMessage","SignOutCommandName","SwitchToClassicCommandName","CommandNameUnreserve","CommandVerbUnreserve","UnreservePageLeavingWarning","UnreserveItemsNoneMessage","UnreserveOneItemSuccessMessage","UnreserveSomeItemsSuccessMessage","UnreserveManyItemsSuccessMessage","UnreserveOneItemFailMessage","UnreserveSomeItemsFailMessage","UnreserveManyItemsFailMessage","UserProfileCommandName","CommandVerbRename","CommandNameSaveFilter","CommandVerbSaveFilter","DialogTitleSaveFilter","SaveFilterCommandSuccessfully","NoEditUrl","CommandNameCopyLink","CommandVerbCopyLink","CopyLinkSuccessMessage","CopyLinkFailMessage","DeletePermissionCommandRemoveOwner","DeletePermissionCommandRemoveGroup","DeletePermissionCommandRemovePublicAccess","DeletePermissionCommandRemoveOther","DeletePermissionCommandConfirmDialogTitle","DeletePermissionCommandConfirmDialogSingleMessage","DeletePermissionCommandConfirmDialogPublicAccessMessage","DeletePermissionCommandSuccessMessage","DeletePermissionCommandSuccessMessageWithCount","DeletePermissionCommandFailMessage","publicAccess","RestorePublicAccessSuccessMessage","RestorePublicAccessSuccessMessageWithCount","undefinedCollection","EditPermissionCommandFailMessage","Owner","CommandNameAddOwnerOrOwnerGroup","AddOwnerOrGroup","AddOwner","AddOwnerGroup","CommandNameAddUserorGroup","CommandNameRestorePublicAccess","AddButtonLabel","AddOwnerOrGroupDialogTitle","AddOwnerDialogTitle","AddOwnerGroupDialogTitle","ChangeOwnerPermissionCommand","ChangeOwnerGroupPermissionCommand","AddUserOrGroupSuccess","AddUserOrGroupFailure","AddUserOrGroupSuccessWithCount","formatForNone","formatForOne","formatForTwo","formatForFive","AppliedPermissions","AppliedPermissionsOneSuccess","AppliedPermissionsOnlySuccess","AppliedPermissionsOneFailure","AppliedPermissionsOnlyFailure","AppliedPermissionsSuccessAndFailure","CommandSuccessfullySingular","CommandFailedSingular","CommandSuccessfullyPlural","CommandFailedPlural","CommandFailedPartial","NoConnectivity","GoToOffline","viewTypeUnsupported","MobileIOS","DesktopAndroid","Close","warnTitle","warnMessage","yesButton","noButton","grammer","otheruser","allUsersAndGroups","addUsersAndGroups","allGroups","cancelButtonLabel","applyButtonLabel","ThumbnailTitle","ListViewTitle","DensityLabel","error","EditPerspective","editPerspectiveErrorMessage","CreatePerspective","CommandNameVersionDelete","CommandVerbVersionDelete","VersionDeleteCommandConfirmDialogSingleMessage","VersionDeleteCommandConfirmDialogMultipleMessage","DeleteVersionPageLeavingWarning","DeleteVersions","DeletingSomeVersions","DeletingOneVersion","DeleteVersionItemsNoneMessage","DeleteVersionOneItemSuccessMessage","DeleteVersionSomeItemsSuccessMessage","DeleteVersionManyItemsSuccessMessage","DeleteVersionOneItemFailMessage","DeleteVersionSomeItemsFailMessage2","DeleteVersionManyItemsFailMessage2","require","lang","versionsLang","VersionModel","config","CommandHelper","extend","Events","checkNodeTypesAndRights","nodes","types","rights","isArray","container","contains","length","all","get","right","checkNodeTypes","attributes","isBackbone","type","checkNodeRights","getJustOneNode","status","at","getAtLeastOneNode","Collection","collection","model","updateNode","attributesToUpdate","save","wait","patch","silent","then","fetch","force","commandError","Deferred","reject","handleExecutionResults","promise","options","handleExecutionResultsDeferred","modulePromise","GlobalMessage","resolve","whenAll","always","parameters","results","okCnt","failedCnt","each","result","undefined","cancelled","suppressSuccessMessage","showMessage","str","sformat","command","offlineSupport","suppressFailMessage","customError","_getErrorMessageFromResponse","err","errorMessage","responseJSON","errorHtml","MessageHelper","toHtml","reset","text","refreshModelAttributesFromServer","tempNode","clone","set","original","showOfflineMessage","yesCallBck","noCallBack","self","modalAlert","showInformation","buttons","YesNo","answer","window","location","href","trigger","idAttribute","constructor","apply","arguments","enabled","scope","_getNodesByScope","signatures","_checkPermittedActions","isNonPromoted","checkFn","_getNonPromotedCheckFunctionsForSignatures","find","action","models","_getCheckFunctionsForSignatures","checkNode","any","signature","actions","findRecursively","_getNodeActionForSignature","CommandModel","visitedNodesByContext","defaults","GoToHistory","visitedNodes","context","_ensureGoBackList","cid","execute","deferred","NextNodeModelFactory","nextNode","getModel","pop","clearHistory","NodeModelFactory","visitCurrentNode","Factory","nodeId","push","on","OpenFullPageContainer","nodeLinks","open","getUrl","getAllSignatures","chain","pluck","map","flatten","compact","unique","value","CommandCollection","extraCommands","commands","browse","download","add","navigate","version","Command","command_key","originalFormCollection","form","additionalProperties","MetadataAddCategoriesController","AddNewCategory","done","resp","addPropertiesCallback","parentView","catModel","fail","warn","console","last","hbs","Handlebars","t","template","compiler","main","depth0","helpers","partials","data","helper","escapeExpression","multiple","helperMissing","hash","registerPartial","Marionette","id","ItemView","className","templateHelpers","ui","fileInput","events","change @ui.fileInput","earlierElement","document","body","debug","remove","onDestroy","off","show","render","append","el","click","_processFiles","event","originalEvent","files","target","dataTransfer","NodeModel","FileOpenDialog","addableTypes","addableType","newNode","addableTypeName","_getAddableTypeName","forwardToTable","type_name","connector","_selectShortcutTarget","_selectFilesForUpload","errMsg","commandSignature","fileOpenDialog","listenTo","fileUploadHelper","uploadController","newUpload","addFilesToUpload","destroy","NodePicker","pickerOptions","dialogTitle","initialContainer","globalSearch","startLocation","unselectableTypes","resolveShortcuts","resultOriginalNode","nodePicker","args","original_id","original_id_expand","findWhere","_getAddableTypesWithoutInlineFormAsMap","144","isAddableTypeWithoutInlineForm","AddItemMetadataCommand","MetadataAddItemController","displayForm","ActionCollection","date","number","member","moment","fakeActions","ConnectorFactory","currentModel","recentVersionOwnerId","owner_id","currentLoggedInUserId","tableView","lockedForOtherContols","getObject","versions","allModels","recentVersion","_fileOpenDialog","_showWarnDialog","file","_uploadFiles","_getBodyMessage","versionInfo","currentDate","versDate","deserializeDate","create_date","difference","diff","version_owner","formatMemberName","owner_id_expanded","formatExactDate","formatFriendlyDateTimeNow","formatExactTimeOnly","formatDateTime","_getOwnerInfoOfLatestVersion","bind","DialogView","_dialog","iconLeft","title","bodyMessage","showTitleIcon","dialogClassName","label","default","disabled","_onClickSelectButton","onClickCancelButton","versionInfoOptions","url","connection","makeAjaxCall","dialogView","dialog","_dialogProgressUpload","AddVersionController","view","originatingView","selectedNode","uploadFile","fileUploadModel","response","sizeinbytes","sizeinkb","formatFileSize","isLocallyCreated","Array","OpenNodePerspectiveCommand","BrowseCommand","__super__","collectCommandSignature","addItemsToolTip","collectItemsDialogTitle","selectButtonLabel","selectCollectButtonLabel","conflictsItemsHeader","conflictsDialogCloseLabel","CollectItemsNoneMessage","CollectOneItemSuccessMessage","CollectManyItemsSuccessMessage","CollectOneItemFailMessage","CollectManyItemsFailMessage","RemoveCollectItemsCommandConfirmDialogHtml","RemoveCommandConfirmDialogSingleMessage","RemoveCommandConfirmDialogMultipleMessage","RemoveCommandConfirmDialogTitle","RemoveItemsNoneMessage","RemoveOneItemSuccessMessage","RemoveSomeItemsSuccessMessage","RemoveManyItemsSuccessMessage","RemoveOneItemFailMessage","RemoveSomeItemsFailMessage","RemoveManyItemsFailMessage","RemoveSomeItemsFailMessage2","RemoveManyItemsFailMessage2","RemoveItems","RemovingOneItem","RemovingSomeItems","CollectingOneItem","CollectingItems","CollectManyItemsFailMessage2","removefromCollection","Url","NodeCollection","parallelism","TaskQueue","UploadFileCollection","PageLeavingBlocker","CollectionConflictView","CollectCommand","successMessages","formatForMany","errorMessages","_addToCollection","selectedOptions","selectedNodes","state","count","total","targetFolder","uploadCollection","_announceOperationStart","fileUpload","unset","_addSelectedNodesToCollection","promises","hideFileUploadProgress","_checkPromises","failedNodes","_showDialog","resolveOption","kill","successNodes","_showGlobalMessage","_announceOperationEnd","showError","selectableTypes","showAllTypes","orderBy","selectMultiple","startLocations","targetCollection","queue","pending","worker","node_id","targetId","_collectNode","_addToCurrentTable","cause","showFileUploadProgress","oneFileTitle","oneFileSuccess","multiFileSuccess","oneFilePending","multiFilePending","oneFileFailure","multiFileFailure","someFileSuccess","someFilePending","someFileFailure","enableCancel","targetFolderID","nodeAttr","collection_id","collectOptions","replace","contentType","_getListView","conflictFiles","toolTip","_showConflictDialog","failureMessage","formatMessage","midSize","successPromises","failedPromises","prom","collectItem","refernce_id","unshift","successCount","successMessage","blockActions","enable","disable","unblockActions","_performActions","_announceStart","index","_performAction","_announceFinish","suppressMultipleSuccessMessage","showSuccess","suppressMultipleFailMessage","checkResult","countFailed","countOk","_getErrorMessage","msg","_getSuccessMessage","showSuccessWithLink","msgOptions","cnt","emessages","smessages","toLowerCase","pageLeavingWarning","MultipleItemsCommand","ConfirmableCommand","_confirmAction","_getConfirmTemplate","_getConfirmData","html","alertDialog","confirmQuestion","arg","omit","RemoveCollectionItemsCommand","allowCollectionRefetch","d","operation","containerCollection","jqxhr","abort","startGlobalMessage","localGlobalMessage","_executeRemoveCollectionItems","first","commandData","showProgressDialog","infiniteScroll","merge","oneSuccess","rejectResults","newStatus","errors","ConflictResolver","ApplyPropertiesSelectorView","CopyCommandParent","verb","_selectCopyOptions","applyProperties","openSelectedProperties","copyToCurrentFolder","namesToResolve","returnObj","mime_type","size","size_formatted","copyNamesToResolve","_resolveNamingConflicts","copyInstructions","instruction","_metadataHandling","sourceNode","aNode","_copySelectedNodes","nextNodeModelFactory","link_url","copyResults","userAction","contextMenuCopy","numNodes","parent","initialSelection","includeCombineProperties","propertiesSeletor","nodeNames","h1","h1Label","actionBtnLabel","excludeAddVersion","run","items","MetadataCopyMoveItemsController","controllerFunction","openMetadata","metadataController","CopyMoveItemsWithMetadata","APPLY_DESTINATION_PROPERTIES","COMBINE_ALL_PROPERTIES","CopyMoveItemsRequiredMetadata","KEEP_ORIGINAL_PROPERTIES","inheritance","_getCategories","categories","_copyNode","parent_id","newName","roles","assignTo","extended_data","getCategoriesOptions","param","statusText","categoryGroupMapping","forms","readOldSettings","moduleName","developmentPage","oldConfig","requirejs","s","contexts","routesWithSlashes","test","pathname","RulesMatchingMixin","routing","rules","NodeLinkModel","sequence","makeRulesMatching","mixin","NodeLinkCollection","comparator","rule","item","matchRules","completeUrl","serverUrl","charAt","getProtocol","combine","getOrigin","match","getCgiScript","absoluteUrl","indexOf","_getApplicationUrlPrefix","origin","search","NodeLinks","nodeLink","success","_copyToClipboard","clipboardData","setData","element","createTextNode","elParent","createElement","style","color","background","backgroundColor","appendChild","getSelection","selection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","removeChild","UploadableMixin","ConnectableMixin","PerspectiveModel","pick","makeUploadable","makeConnectable","isNew","urlBase","isNumber","prepareFormData","pData","JSON","stringify","enableInlinePerspectiveEditing","AncestorCollectionFactory","perspective","canEditPerspective","_applicationScope","inlinePerspectiveEditing","_editInline","_editInClassicPMan","_preparePerspectiveConfig","perspectiveConfig","widgets","overrideType","containerType","cascading","getCollection","nodepath","_getNodePath","PManView","Date","getTime","f","_getForm","submit","attr","_getUrl","appendTo","params","_getUrlQueryParameters","i","hasOwnProperty","toString","elements","btn-mode-code","btn-view-general","btn-view-rules","btn-view-layout","btn-view-widgets","view-perspective-action","perspective-action-create","perspective-action-edit","perspective-action-copy","view-perspective-form","perspective-title","perspective-type","perspective-scope","perspective-nodetypes","perspective-node","perspective-cascading","display-size-msg","rules-code","layout-flow","layout-left-center-right","layout-grid","layout-tabbed","widgetGroupsBlacklist","widgetsWhitelist","disableGrouping","NodeCommand","DeleteCommand","localUploadFileCollection","localNextNodeModelFactory","_executeDelete","setTimeout","parentId","Connector","doneVerb","CommandDoneVerbDownload","isAppleMobile","_openContent","_downloadContent","_executeContentCommand","token","_getContentUrl","_performDownload","content","focus","close","requestContentAuthToken","encodeURIComponent","iframe","hide","delay","Math","min","connectionTimeout","URL","PreFlightModel","StagesModel","ModalAlert","selfBlockOnly","flag","zipAndDownloadExists","idx","filter","downloadExists","stagesModel","_deferred","stageAndPrepeareDownload","_preFlightCheck","formData","id_list","preFlightModel","preflight","preflightXHR","showLoader","_getJobId","ajaxOptions","changeStageMessage","xhr","currentStage","changeLoaderMessage","_checkStage","jobIdModel","some","stage","complete","stageCheckTimeout","clearTimeout","_showdialogbox","dialogOptions","onHideDialog","jobs","checkStage","DownloadDialogView","archiveName","fileName","val","trim","errorEl","toolItem","$el","removeClass","appendQuery","openInNewTab","classicUnsupported","_classicUnsupported","_navigateTo","urlQuery","getUrlQueryParameters","shouldCloseTabAfterRedirect","showInfo","closeUrl","isFunction","supportPath","isAbsolute","combineQueryString","nextURL","parseParam","OpenClassicPageCommand","makeServerAdaptor","isFetchableDirectly","parse","perspectives","container_type","constantData","constant_data","override_type","overrideId","override_id","node_path","rule_data","constant_extraction_mode","pnodepath","perspective_node_path","ServerAdaptorMixin","PerspectiveTemplateModel","isFetchable","key","attrs","perspectiveCollection","pmanView","currentPerspective","allPerspectives","perspectiveId","perspectiveTemplate","perspective_id","publicLang","rewriteApplicationURL","enableAppleSupport","appleNodeLinkBase","applicationUrl","_getApplicationUrl","_getNodesLinks","newHref","_openNewHref","iOSEnabled","iOSText","androidText","desktopText","actionUrl","lastIndexOf","substr","join","SearchQueryModelFactory","searchQuery","clear","useContainer","FavoriteModel","modelId","selected","addToFavorites","removeFromFavorites","InlineEditCommand","inlineFormViewFactory","inlineFormView","getInlineFormView","MoveCommandParent","uploadFileModels","_selectMoveOptions","moveNamesToResolve","moveInstructions","_moveSelectedNodes","filemodel","NodeDestinationPicker","_moveNodeWithMetadata","_moveNode","errObj","bodyParam","moveOptions","method","getAjaxContentType","nodeID","finish","request","OpenPluginModel","plugin","OpenPluginCollection","findByNode","widgetOnly","openWindow","getUrlQuery","openWidget","createWidget","openPlugins","DownloadCommand","openAuthenticatedPage","forceDownload","_openWindow","widgetView","_openWidget","FullPageModal","ViewerView","_openURL","needsAuthentication","func","objAction","objId","nexturl","order","summaries","classicNodes","isSupported","smartNodes","navigationView","metadatanavigation","closest","_getAtLeastOneNode","addClass","PermissioNavigationWidget","MetadataView","PermissionsView","permissionsView","showInDialogView","mdv","shortcutNode","showCloseIcon","showBackIcon","activeTab","metadataTabView","selectedTab","tabLinks","showPermissionView","isExpandedView","nameAttribute","supportOriginatingView","targetView","triggerMethodOn","_showOriginatingView","$csProperties","$originatingView","width","direction","metadataView","isDisplayed","triggerMethod","requireSwitched","largeSize","header","MetadataNavigationWidget","NodeVersionCollection","metadata","selectedProperty","showThumbnails","_showNode","rename","RenameFavoriteCommand","inlineFormFavoriteView","isReservedClicked","UserModelFactory","user","ensureFetched","reserved_user_id","signInPageUrl","_signOut","cgiUrl","authenticator","unauthenticate","reason","query","ClassicNodes","applicationScope","urlQueryParameters","classicNode","_replaceParameters","viewType","isUnreservedClicked","UserWidgetView","userId","userid","baseElement","showUserProfileLink","showMiniProfile","loggedUserId","showUserProfileDialog","versionLang","VersionDeleteCommand","DeleteVersionSomeItemsFailMessage","DeleteVersionManyItemsFailMessage","selectedVersions","OpenCommand","PropertiesCommand","VersionDownloadCommand","VersionOpenCommand","VersionPropertiesCommand","_isSupported","notSupportedObjects","inArray","accessibleTable","exec","thumbnailViewState","showDescriptions","icon","langStr","contents","replaceWith","backbone","enableGridView","_selectSaveFilterOptions","facets","filterName","selectedFacets","filters","facet","facettypes","facetArrayType","values","facettype","ajaxFormData","location_id","selected_facets","saveFilterOptions","virtualFolderId","properties","virtualFolderNode","dets","responseText","errorObj","saveFilter","hasClass","checkMaximizeMode","permissionModel","right_id","permissionType","filterId","authenticatedUserPermissions","hasEditPermissionRights","admin_permissions","failureMsg","_getMessageWithUserDisplayName","EditPermissionHelper","PermissionPreCheck","loginUserId","editPermissionHelper","popoverPlacement","popoverAtBodyElement","popoverTragetElement","permissions","readonly","applyTo","_showSelectPermissionLevelPopover","userSelection","saveAttr","apply_to","include_sub_types","includeSubTypes","failure","errObject","commandName","errObjects","failedfilesCollection","errCollection","succesfull_count","langTitle","success_msg","showPermissionApplyingProgress","unformattedMsg","displayName","userExpandDetails","currentRow","permissionsContentView","UserPickerView","MemberModelFactory","NodePermissionModel","memberFilter","userPickerView","userPickerModel","userpickerRegion","Region","currentView","getReadPermissions","right_id_expand","DeletePermissionCommand","confirmDialogMessage","setCommandTitle","ApplyPermissionView","ApplyPermissionHeaderView","BlockingView","removePermission","_executeDeletePermission","_deletePermission","headerView","_view","imbue","origView","orginatingView","permissionModelType","subFolderSelected","destroyDialog","successMsg","processForEmptyOwner","handleFailure","failedPermissionsCollection","_selectAddUserOrGroupOptions","selectedMember","members","selectedPermissions","permissionModelData","nodePermissionModel","MembersPickerDialog","unSelectableMembers","originalCollection","permissionCollection","dialogClass","adduserorgroup","nodeModel","addButtonLabel","availablePermissions","unselectableMembers","isAdvancedVersioning","userRights","owner","noOwnerOrGroup","noGroup","_selectAddOwnerOrOwnerGroupOptions","include_sub_type","addOwnerGroup","hasEditPermission","_executeApplyPermission","restorePublicAccess","addPublicAccess","faq","supportedObjects","executeDefaultAction","cancel","defaultActionController","executeAction","CollectCommandParent","unsupportedObjects","that","_checkPromisess"],"mappings":"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AAA/S,GAAApX,EAAA+R,WACA+C,IACAuG,KAAA,QACAgH,QAAA9S,EAAA+U,0BACA8F,UAAA7a,EAAA+U,0BACA9H,QAAA,SAAAsC,GACA1H,EAAA7E,QAAA,QAAAuM,EAAAiE,UAIA,OADAriB,MAAA2pB,oBAAAF,EAAArV,GACAsC,GAGAiT,sBAAA,SAAAlZ,EAAA2D,GACA,GAAAH,GAAAjU,IACAV,GAAA+R,UACAlS,MAAAyP,SAAA,oCAAA,SAAAwS,GACA,GAAAwI,GAAAlqB,EAAAmqB,cAAApZ,EAAAd,OAAAsE,EAAApE,IAAA,kBACAwS,EAAA,GAAAjB,IACAG,QAAAqI,EACAE,WAAA,EACAxI,WAAA,qCACAzG,YAAA,mCACA2H,OAAAvO,EAAAuV,aAAA/Y,GACA2D,UAAAA,GAGA,OADAiO,GAAA3G,OACA2G,KAKAmH,eAAA,SAAAC,GAEA,MADA,IAAA7D,GAAArmB,EAAA2P,WAAAuB,aAAAgZ,MAIAhD,0BAAA,SAAApW,GACA,GAAAoS,GAAApS,EAAAoS,eACAA,GAAA8H,cACA9H,EAAA8H,eAEA5E,EAAA6E,OAAAxqB,KAAA6P,IAAA,wBAGAyX,wBAAA,SAAAjX,GACAsV,EAAA8E,SACA,IAAAhI,GAAApS,EAAAoS,eACAA,GAAAiI,gBACAjI,EAAAiI,sBAUAvrB,KAAAC,OAAA,yBCvUA,6DACA,mEACA,sBACA,qCACA,0BACA,wCACA,kCACA,6BACA,+CACA,wDACA,kCACA,2BACA,gCACA,yCACA,6BACA,+BACA,qCACA,2BAGA,kCACA,uCACA,uCACA,iCACA,iCACA,0CACA,mCACA,sCACA,iCACA,2BACA,qCACA,+BACA,2BACA,2BACA,4CACA,wCACA,sCACA,gCACA,qCACA,mCACA,gCACA,gCACA,sCACA,iDACA,qDACA,gCACA,qCACA,oCACA,iCACA,kCACA,iCACA,6BACA,sCACA,8BACA,qCACA,+BACA,wCACA,gCACA,mCACA,+BACA,sCACA,wCACA,oCACA,0CACA,6BACA,yCACA,uCACA,kCACA,2CACA,0CACA,mDACA,kDACA,0DACA,oDACA,iDACA,kDACA,wDAIA,iDACA,iDACA,+CACA,+CAIA,wCACA,uCACA,yCACA,wCACA,6CAGA,0CACA,sBACA,uBACA,2BACA,2BACA,gDACA,oCACA,yCACA,mCACA","file":"csui-commands.js","sourcesContent":["csui.define('csui/utils/command.error',[\"module\",\r\n  \"csui/lib/jquery\",\r\n  \"csui/lib/underscore\",\r\n  'csui/lib/backbone',\r\n  \"csui/utils/log\",\r\n  \"csui/utils/base\"\r\n], function (module, $, _, Backbone, log, base) {\r\n\r\n  // constructor!!\r\n  function CommandError(arg1, arg2) {\r\n\r\n    if (!arg1) {\r\n      throw new Error(\"No argument passed\");\r\n    }\r\n\r\n    function applyArg2() {\r\n      // the second argument can be a object with errorDetails and/or node members or just\r\n      // a single errorDetails string or a NodeModel\r\n      if (arg2 && _.isString(arg2)) {\r\n        this.errorDetails = arg2;\r\n      } else {\r\n        if (arg2 instanceof Backbone.Model) {\r\n          this.node = arg2;\r\n        } else {\r\n          if (arg2 && _.isObject(arg2)) {\r\n            if (arg2.errorDetails && _.isString(arg2.errorDetails)) {\r\n              this.errorDetails = arg2.errorDetails;\r\n            }\r\n            if (arg2.node instanceof Backbone.Model) {\r\n              this.node = arg2.node;\r\n            }\r\n            if (arg2.requestError && _.isObject(arg2.requestError)) {\r\n              var requestMessage = new base.RequestErrorMessage(arg2.requestError);\r\n              if (this.message) {\r\n                if (!this.errorDetails) {\r\n                  this.errorDetails = requestMessage.message;\r\n                }\r\n              } else {\r\n                this.message = requestMessage.message;\r\n                if (!this.errorDetails) {\r\n                  this.errorDetails = requestMessage.errorDetails;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (arg1 instanceof Error) {\r\n      this.message = arg1.message;\r\n      if (arg1.stack) {\r\n        this.stack = arg1.stack;\r\n      }\r\n    } else {\r\n      if (_.isString(arg1)) {\r\n        this.message = arg1;\r\n      } else {\r\n        var requestMessage = new base.RequestErrorMessage(arg1);\r\n        this.message = requestMessage.message;\r\n        this.errorDetails = requestMessage.errorDetails;\r\n        this.statusCode = requestMessage.statusCode;\r\n      }\r\n    }\r\n    applyArg2.call(this);\r\n    this.name = \"CommandError\";\r\n  }\r\n\r\n  CommandError.prototype = Object.create(Error.prototype);\r\n\r\n  return CommandError;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/nls/localized.strings',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/nls/root/localized.strings',{\r\n\r\n  // Add\r\n  ShortcutPickerTitle: \"Select target for Shortcut\",\r\n\r\n  // AddItemMetadata\r\n  CommandNameAddItemMetadata: \"Add Item with metadata\",\r\n\r\n  CommandNameAddVersion: \"AddVersion\",\r\n\r\n  // Copy\r\n  CommandNameCopy: \"Copy\",\r\n  CommandVerbCopy: \"copy\",\r\n  DialogTitleSingleCopy: \"Copy {0} item\",\r\n  DialogTitleCopy: \"Copy {0} items\",\r\n  SomeFilesNotCopiedSuccessfully: 'Some items were not successfully copied.',\r\n  CopyingNodes: 'Copying {0} nodes',\r\n  CopyingNode: 'Copying 1 node',\r\n  CopyPageLeavingWarning: \"If you leave the page now, pending items will not be copied.\",\r\n  CopyingOneItem: 'Copying item',\r\n  CopyItems: 'Copying {0} items',\r\n  CopySomeItems: 'Copying {0} items',\r\n  CopyItemsNoneMessage: \"No items copied.\",\r\n  CopyOneItemSuccessMessage: '1 item successfully copied.',\r\n  CopySomeItemsSuccessMessage: '{0} items successfully copied.',\r\n  CopyManyItemsSuccessMessage: '{0} items successfully copied.',\r\n  CopyOneItemFailMessage: '1 item failed to copy.',\r\n  CopySomeItemsFailMessage: '{0} items failed to copy.',\r\n  CopyManyItemsFailMessage: '{0} items failed to copy.',\r\n  CopySomeItemsFailMessage2: '{2} items failed to copy.',    // {2} !!\r\n  CopyManyItemsFailMessage2: '{2} items failed to copy.',    // {2} !!\r\n\r\n  // Delete\r\n  DeleteCommandConfirmDialogTitle: \"Delete\",\r\n  DeleteCommandConfirmDialogHtml: \"<span class='msgIcon WarningIcon'>\" +\r\n                                  \"<%- message %>\" +\r\n                                  \"</span>\",\r\n  DeleteCommandConfirmDialogSingleMessage: \"Do you want to delete {0}?\",\r\n  DeleteCommandConfirmDialogMultipleMessage: \"Do you want to delete {0} items?\",\r\n  CommandNameDelete: \"Delete\",\r\n  CommandVerbDelete: \"delete\",\r\n  DeletePageLeavingWarning: \"If you leave the page now, pending items will not be deleted.\",\r\n  DeleteItemFailed: 'Deleting item {0} failed.',\r\n  DeleteItems: 'Deleting {0} items',\r\n  DeletingOneItem: 'Deleting item',\r\n  DeletingSomeItems: 'Deleting {0} items',\r\n  DeleteItemsNoneMessage: \"No items deleted.\",\r\n  DeleteOneItemSuccessMessage: \"1 item successfully deleted.\",\r\n  DeleteSomeItemsSuccessMessage: \"{0} items successfully deleted.\",\r\n  DeleteManyItemsSuccessMessage: \"{0} items successfully deleted.\",\r\n  DeleteOneItemFailMessage: \"1 item failed to delete.\",\r\n  DeleteSomeItemsFailMessage: \"{0} items failed to delete.\",\r\n  DeleteManyItemsFailMessage: \"{0} items failed to delete.\",\r\n  DeleteSomeItemsFailMessage2: \"{2} items failed to delete.\",   // {2} !!\r\n  DeleteManyItemsFailMessage2: \"{2} items failed to delete.\",   // {2} !!\r\n\r\n  ApplyingManyItemsSuccessMessage: \"Applied successfully to {0} items.\",\r\n  ApplyingOneItemFailMessage: \"Failed to apply to 1 item.\",\r\n  ApplyingManyItemsFailMessage2: \"Failed to apply to {0} items.\",\r\n\r\n  // Download\r\n  CommandNameDownload: \"Download\",\r\n  CommandVerbDownload: \"download\",\r\n\r\n  // Zip & Download\r\n  CommandNameZipDownload: \"Download\",\r\n  CommandVerbZipDownload: \"Download\",\r\n  VerifyZipAndDownloadPrefetch: \"Verifying items\",\r\n  ExtractingZipAndDownload: \"Extracting items\",\r\n  CompressingZipAndDownload: \"Compressing items\",\r\n  CleanUpZipAndDownload: \"Cleaning up\",\r\n  PreFlightDialogBtnContinue: \"Continue\",\r\n  DownloadDialogBtnDownload: \"Download\",\r\n  DialogBtnCancel: \"Cancel\",\r\n  InvalidArchiveCharacters: \"Special characters cannot be used in archive name: ?:<>|\\\"\\/@^,{}[]!%&()~'\",\r\n  InvalidArchiveName: \"Invalid archive name.\",\r\n  TheArchiveNameCannotBeEmpty: \"Archive name cannot be empty.\",\r\n  TheArchiveNameMaxLength: \"Archive name is greater than the maximum length (248)\",\r\n\r\n  // Move\r\n  CommandNameMove: \"Move\",\r\n  CommandNameVerbMove: \"move\",\r\n  DialogTitleSingleMove: \"Move {0} item\",\r\n  DialogTitleMove: \"Move {0} items\",\r\n  SomeFilesNotMovedSuccessfully: 'Some items were not successfully moved.',\r\n  MovePageLeavingWarning: \"If you leave the page now, pending items will not be moved.\",\r\n  MovingNodes: 'Moving {0} nodes',\r\n  MovingNode: 'Moving 1 node',\r\n  MovingOneItem: 'Moving item',\r\n  MovingItems: 'Moving {0} items',\r\n  MovingSomeItems: 'Moving {0} items',\r\n  MoveItemsNoneMessage: \"No items moved.\",\r\n  MoveOneItemSuccessMessage: '1 item successfully moved.',\r\n  MoveSomeItemsSuccessMessage: '{0} items successfully moved.',\r\n  MoveManyItemsSuccessMessage: '{0} items successfully moved.',\r\n  MoveOneItemFailMessage: '1 item failed to move.',\r\n  MoveSomeItemsFailMessage: '{0} items failed to move.',\r\n  MoveManyItemsFailMessage: '{0} items failed to move.',\r\n  MoveSomeItemsFailMessage2: '{2} items failed to move.',    // {2} !!\r\n  MoveManyItemsFailMessage2: '{2} items failed to move.',    // {2} !!\r\n\r\n  // Paste\r\n  CommandNamePaste: \"Paste\",\r\n\r\n  // Reserve\r\n  CommandNameReserve: \"Reserve\",\r\n  CommandVerbReserve: \"reserve\",\r\n  ReservePageLeavingWarning: \"If you leave the page now, pending items will not be reserved.\",\r\n  ReserveItemsNoneMessage: \"No items reserved.\",\r\n  ReserveOneItemSuccessMessage: \"1 item successfully reserved.\",\r\n  ReserveSomeItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveManyItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveOneItemFailMessage: \"1 item failed to reserve.\",\r\n  ReserveSomeItemsFailMessage: \"{0} items failed to reserve.\",\r\n  ReserveManyItemsFailMessage: \"{0} items failed to reserve.\",\r\n\r\n  //Add Favorite\r\n  CommandNameFavorite: \"Add Favorite\",\r\n  CommandVerbFavorite: \"update Favorites\",\r\n  CommandDoneVerbFavorite: \"added to Favorites\",\r\n  CommandRemovedVerbFavorite: \"removed from Favorites\",\r\n  updateFavoriteFailTitle: \"Update Favorite\",\r\n  updateFavoriteFailMessage: 'Failed to update Favorite for node \"{0}\". \\n\\n{1}',\r\n\r\n  //Description\r\n  CommandDescriptionToggle: \"Description Toggle\",\r\n  CommandHideDescription: \"Hide description\",\r\n  CommandShowDescription: \"Show description\",\r\n\r\n  // Share\r\n  CommandNameEmailLink: \"Share\",\r\n  CommandVerbEmailLink: \"share\",\r\n  EmailLinkSubject: 'I want to share the following links with you',\r\n  EmailLinkDesktop: \"Link for Desktop and Android\",\r\n  EmailAppleLinkFormat: \"Link for iOS Mobile\",\r\n  EmailLinkCommandFailedWithTooMuchItemsErrorMessage: \"Share failed. Too many items were selected.\",\r\n  EmailLinkCommandFailedWithTooMuchItemsDetailErrorMessage: \"Only ~10 items can be shared at one\" +\r\n                                                            \" time.\",\r\n\r\n  // SignOut\r\n  SignOutCommandName: \"Sign Out\",\r\n\r\n  // SwitchToClassic\r\n  SwitchToClassicCommandName: \"Classic View\",\r\n\r\n  // Unreserve\r\n  CommandNameUnreserve: \"Unreserve\",\r\n  CommandVerbUnreserve: \"unreserve\",\r\n  UnreservePageLeavingWarning: \"If you leave the page now, pending items will not be unreserved.\",\r\n  UnreserveItemsNoneMessage: \"No items unreserved.\",\r\n  UnreserveOneItemSuccessMessage: \"1 item successfully unreserved.\",\r\n  UnreserveSomeItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveManyItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveOneItemFailMessage: \"1 item failed to unreserve.\",\r\n  UnreserveSomeItemsFailMessage: \"{0} items failed to unreserve.\",\r\n  UnreserveManyItemsFailMessage: \"{0} items failed to unreserve.\",\r\n\r\n  // UserProfile\r\n  UserProfileCommandName: \"Profile\",\r\n\r\n  // Upload\r\n  // see src/controls/globalmessage/impl/progresspanel/impl/nls/root/progresspanel.lang.js\r\n\r\n  //Rename\r\n  CommandVerbRename: \"rename\",\r\n\r\n  //Filter Save\r\n  CommandNameSaveFilter: \"Save As\",\r\n  CommandVerbSaveFilter: \"Save As\",\r\n  DialogTitleSaveFilter: \"Save as\",\r\n  SaveFilterCommandSuccessfully: \"{0} virtual folder created successfully.\",\r\n\r\n  // Edit\r\n  NoEditUrl: 'Web page for editing of this doucment is not available.',\r\n\r\n  // Copy Link\r\n  CommandNameCopyLink: \"Copy link\",\r\n  CommandVerbCopyLink: \"copy link\",\r\n  CopyLinkSuccessMessage: \"Link copied to clipboard.\",\r\n  CopyLinkFailMessage: \"Copy link has failed to copy the link to clipboard.\",\r\n\r\n  //permissions commands\r\n  DeletePermissionCommandRemoveOwner: \"Remove owner\",\r\n  DeletePermissionCommandRemoveGroup: \"Remove owner group\",\r\n  DeletePermissionCommandRemovePublicAccess: \"Remove Public Access\",\r\n  DeletePermissionCommandRemoveOther: \"Remove from list\",\r\n  DeletePermissionCommandConfirmDialogTitle: 'Remove {0}',\r\n  DeletePermissionCommandConfirmDialogSingleMessage: 'Do you want to remove {0}' +\r\n                                                     ' from this permissions list?',\r\n  DeletePermissionCommandConfirmDialogPublicAccessMessage: 'Are you sure you want to remove' +\r\n                                                           ' {0} from this permissions list?',\r\n  DeletePermissionCommandSuccessMessage: \"{0} was removed from the permissions list.\",\r\n  DeletePermissionCommandSuccessMessageWithCount: \"{0} was removed from the permissions list of\" +\r\n                                                  \" {1}.\",\r\n  DeletePermissionCommandFailMessage: \"Failed to remove {0} from the permissions list.\",\r\n  publicAccess: 'Public Access',\r\n  RestorePublicAccessSuccessMessage: \"{0} restored\",\r\n  RestorePublicAccessSuccessMessageWithCount: \"{0} restored to the permission list of {1}\",\r\n  undefinedCollection: 'Collection is undefined',\r\n  EditPermissionCommandFailMessage: \"Failed to edit {0} from the permissions list.\",\r\n  Owner: 'owner',\r\n\r\n  CommandNameAddOwnerOrOwnerGroup: \"Add Owner Or Owner Group\",\r\n  AddOwnerOrGroup: \"Add owner or owner group\",\r\n  AddOwner: \"Add owner\",\r\n  AddOwnerGroup: \"Add owner group\",\r\n  CommandNameAddUserorGroup: 'Add user or group',\r\n  CommandNameRestorePublicAccess: 'Restore public access',\r\n  AddButtonLabel: 'Add',\r\n  AddOwnerOrGroupDialogTitle: \"Add Owner or Owner group\",\r\n  AddOwnerDialogTitle: \"Add Owner\",\r\n  AddOwnerGroupDialogTitle: \"Add Owner group\",\r\n\r\n  ChangeOwnerPermissionCommand: 'Change owner',\r\n  ChangeOwnerGroupPermissionCommand: 'Change owner group',\r\n\r\n  AddUserOrGroupSuccess: '{0} added successfully',\r\n  AddUserOrGroupFailure: '{0} failed to add',\r\n  AddUserOrGroupSuccessWithCount: '{0} was added to the permissions list of {1}.',\r\n\r\n  formatForNone: \"{0} items\",\r\n  formatForOne: \"{0} item\",\r\n  formatForTwo: \"{0} items\",\r\n  formatForFive: \"{0} items\",\r\n\r\n  AppliedPermissions: 'Permissions applied selected item',\r\n  AppliedPermissionsOneSuccess: 'Permissions applied to {0} item',\r\n  AppliedPermissionsOnlySuccess: 'Permissions applied to {0} items',\r\n  AppliedPermissionsOneFailure: 'Permissions failed to apply {0} item',\r\n  AppliedPermissionsOnlyFailure: 'Permissions failed to apply {0} items',\r\n  AppliedPermissionsSuccessAndFailure: 'Permissions applied to {0} items and failed to apply {1}' +\r\n                                       ' items',\r\n\r\n  // CommandHelper\r\n  CommandSuccessfullySingular: \"{0} item successfully {1}.\",\r\n  CommandFailedSingular: \"{0} item failed to {1}.\",\r\n  CommandSuccessfullyPlural: \"{0} items successfully {1}.\",\r\n  CommandFailedPlural: \"{0} items failed to {1}.\",\r\n  CommandFailedPartial: \"{0} of {1} items failed to {2}.\",\r\n\r\n  NoConnectivity: \"No connectivity\",\r\n  GoToOffline: \"Go to offline files?\",\r\n\r\n  viewTypeUnsupported: 'This content type is not currently supported on a mobile device.',\r\n\r\n  MobileIOS: \"iOS Mobile\",\r\n  DesktopAndroid: \"Desktop and Android\",\r\n  Close: 'Close',\r\n\r\n  warnTitle: \"Add Version\",\r\n  warnMessage: \"This document is unreserved and the latest version was added by {0} {1}\" +\r\n               \" {2}. Do you want to continue?\",\r\n  yesButton: \"Yes\",\r\n  noButton: \"No\",\r\n  grammer: \"on\",\r\n  otheruser: \"other user\",\r\n  allUsersAndGroups: \"Users and Groups\",\r\n  addUsersAndGroups: \"Add users or groups\",\r\n  allGroups: \"Groups\",\r\n  cancelButtonLabel: \"Cancel\",\r\n  applyButtonLabel: \"Apply\",\r\n  ThumbnailTitle: \"Grid View\",\r\n  ListViewTitle: \"Browse View\",\r\n  DensityLabel: \"Density\",\r\n  error: \"Error\",\r\n\r\n  //edit perspective\r\n  EditPerspective: \"Edit page\",\r\n  editPerspectiveErrorMessage: \"The page cannot be edited. It is used as template for multiple pages\",\r\n\r\n  //create perspective\r\n  CreatePerspective: \"Create new perspective\"\r\n});\r\n\n","\n","csui.define('csui/utils/commands/versions/nls/localized.strings',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/versions/nls/root/localized.strings',{\r\n\r\n  // DeleteVersion\r\n  CommandNameVersionDelete: \"Delete Version\",\r\n  CommandVerbVersionDelete: \"delete\",\r\n  DeleteCommandConfirmDialogTitle: \"Delete\",\r\n  VersionDeleteCommandConfirmDialogSingleMessage: \"Do you want to delete version {0} from {1}?\",\r\n  VersionDeleteCommandConfirmDialogMultipleMessage: \"Do you want to delete {0} versions?\",\r\n  DeleteVersionPageLeavingWarning: \"If you leave the page now, pending versions will not be\" +\r\n                                   \" deleted.\",\r\n\r\n  DeleteVersions: 'Deleting {0} versions',\r\n  DeletingSomeVersions: 'Deleting {0} versions',\r\n  DeletingOneVersion: 'Deleting version',\r\n  DeleteVersionItemsNoneMessage: \"No versions deleted.\",\r\n  DeleteVersionOneItemSuccessMessage: \"1 version succeeded to delete.\",\r\n  DeleteVersionSomeItemsSuccessMessage: \"{0} versions succeeded to delete.\",\r\n  DeleteVersionManyItemsSuccessMessage: \"{0} versions succeeded to delete.\",\r\n  DeleteVersionOneItemFailMessage: \"1 version failed to delete.\",\r\n  DeleteVersionSomeItemsFailMessage2: \"{2} versions failed to delete.\",   // {2} !!!\r\n  DeleteVersionManyItemsFailMessage2: \"{2} versions failed to delete.\",   // {2} !!!\r\n\r\n\r\n  // TODO: this is only here, because the CommandHelper.handleExecutionResults does an extension\r\n  // TODO: remove this if the handleExecutionResults is not used anymore or the extension is removed\r\n  CommandSuccessfullySingular: \"{0} version successfully {1}.\",\r\n  CommandFailedSingular: \"{0} version failed to {1}.\",\r\n  CommandSuccessfullyPlural: \"{0} versions successfully {1}.\",\r\n  CommandFailedPlural: \"{0} versions failed to {1}.\",\r\n  CommandFailedPartial: \"{0} of {1} versions failed to {2}.\"\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commandhelper',[\r\n  'require', 'module', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/lib/backbone', 'csui/utils/base', 'csui/utils/command.error',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'i18n!csui/utils/commands/versions/nls/localized.strings',\r\n  'csui/models/version', 'csui/lib/jquery.when.all'\r\n], function (require, module, $, _, Backbone, base, CommandError,\r\n    lang, versionsLang, VersionModel) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n\r\n  var CommandHelper = function () {};\r\n\r\n  _.extend(CommandHelper.prototype, Backbone.Events, {\r\n\r\n    checkNodeTypesAndRights: function (nodes, types, rights) {\r\n      _.isArray(nodes) || nodes && (nodes = [nodes]);\r\n      var container = _.contains(types, -1);\r\n      return nodes && nodes.length && _.all(nodes, function (node) {\r\n            return (_.contains(types, node.get(\"type\")) ||\r\n                    container && node.get(\"container\")) &&\r\n                   _.all(rights, function (right) {\r\n                     return node.get(\"perm_\" + right);\r\n                   });\r\n          });\r\n    },\r\n\r\n    checkNodeTypes: function (nodes, types) {\r\n      _.isArray(nodes) || nodes && (nodes = [nodes]);\r\n      var container = _.contains(types, -1);\r\n      return nodes && nodes.length && _.all(nodes, function (node) {\r\n            var attributes = base.isBackbone(node) ? node.attributes : node;\r\n            return _.contains(types, attributes.type) ||\r\n                   container && attributes.container;\r\n          });\r\n    },\r\n\r\n    checkNodeRights: function (nodes, rights) {\r\n      _.isArray(nodes) || nodes && (nodes = [nodes]);\r\n      return nodes && nodes.length && _.all(nodes, function (node) {\r\n            var attributes = base.isBackbone(node) ? node.attributes : node;\r\n            return _.all(rights, function (right) {\r\n              return attributes[\"perm_\" + right];\r\n            });\r\n          });\r\n    },\r\n\r\n    getJustOneNode: function (status) {\r\n      var node = status.nodes && status.nodes.length === 1 && status.nodes.at(0);\r\n      return node;\r\n    },\r\n\r\n    getAtLeastOneNode: function (status) {\r\n      if (status.nodes) {\r\n        return status.nodes;\r\n      }\r\n\r\n      var ViewCollection = Backbone.Collection.extend(\r\n          status.collection ? {model: status.collection.model} : {}\r\n      );\r\n\r\n      return new ViewCollection();\r\n    },\r\n\r\n    updateNode: function (node, attributesToUpdate) {\r\n      var self = this;\r\n      return node\r\n          .save(attributesToUpdate, {\r\n            wait: true,\r\n            patch: true,\r\n            silent: true\r\n          })\r\n          .then(function () {\r\n            return node.fetch({force:true});\r\n          })\r\n          .then(function () {\r\n            return node;\r\n          }, function (error) {\r\n            var commandError = new CommandError(error, node);\r\n            $.Deferred().reject(commandError);\r\n            return commandError;\r\n          });\r\n    },\r\n\r\n    // TODO: The drawback of this function is that it uses localized strings where text gets composed with help of placeholders (doneVerb).\r\n    // TODO: This introduces great problems for localization.\r\n    // Returns a promise which is resolved when all given promises are resolved. The returned\r\n    // promise gets an array with the collected results of all given promises.\r\n    // If options.suppressSuccessMessage == true then no success message is displayed.\r\n    handleExecutionResults: function (promise, options) {\r\n      var handleExecutionResultsDeferred = $.Deferred(),\r\n          modulePromise = $.Deferred();\r\n\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function(GlobalMessage) {\r\n        modulePromise.resolve(GlobalMessage);\r\n      }, modulePromise.reject);\r\n\r\n      $.whenAll(modulePromise, promise)\r\n       .always(function (parameters) {\r\n        var GlobalMessage = parameters[0],\r\n            results = parameters[1];\r\n        if (!_.isArray(results)) {\r\n          results = [results];\r\n        }\r\n\r\n        // At this point all promises from all commands are either resolved or rejected\r\n        // If the command execution was successful, the node is in the results. If the command\r\n        // failed the result is Error\r\n        var okCnt = 0;\r\n        var failedCnt = 0;\r\n        _.each(results, function (result) {\r\n          if (result !== undefined && !result.cancelled) {\r\n            if (result instanceof Error) {\r\n              failedCnt++;\r\n            } else {\r\n              okCnt++;\r\n            }\r\n          }\r\n        });\r\n        if (failedCnt === 0 && okCnt === 0) {\r\n          // user canceled confirmation dialog or\r\n          // no parameter was intentionally specified for e.g. resolve and reject to skip error handling\r\n          handleExecutionResultsDeferred.reject();\r\n          return;\r\n        }\r\n        var commandError = results[0];\r\n        // the command itself took care of the status  and error handling\r\n\r\n        if (commandError instanceof VersionModel) {\r\n          // let's override language bundles based on model type.\r\n          _.extend(lang, versionsLang);\r\n        }\r\n\r\n        if (results.length === 1) {\r\n          if (okCnt === 1) {\r\n            if (!options.suppressSuccessMessage) {\r\n              GlobalMessage.showMessage(\"success\",\r\n                  _.str.sformat(lang.CommandSuccessfullySingular, okCnt,\r\n                      options.command.get('doneVerb')));\r\n            }\r\n          } else {\r\n            var message = commandError.errorDetails || commandError.message;\r\n\r\n            if (config.offlineSupport && commandError.statusCode === 0) {\r\n              handleExecutionResultsDeferred.reject(commandError);\r\n            }\r\n            else if (!options.suppressFailMessage && !commandError.suppressFailMessage) {\r\n              GlobalMessage.showMessage(\"error\",\r\n                  _.str.sformat(lang.CommandFailedSingular, failedCnt,\r\n                      options.command.get('verb')),\r\n                  message);\r\n            }\r\n          }\r\n        } else {\r\n          if (failedCnt === 0) {\r\n            // all were successful\r\n            if (!options.suppressSuccessMessage) {\r\n              GlobalMessage.showMessage(\"success\",\r\n                  _.str.sformat(lang.CommandSuccessfullyPlural, okCnt,\r\n                      options.command.get('doneVerb')\r\n                  ));\r\n            }\r\n          } else {\r\n            if (okCnt === 0) {\r\n              // all failed\r\n              if (config.offlineSupport && commandError.statusCode === 0) {\r\n                handleExecutionResultsDeferred.reject(commandError);\r\n              }\r\n              else if (!options.suppressFailMessage && !commandError.suppressFailMessage) {\r\n                GlobalMessage.showMessage(\"error\",\r\n                    _.str.sformat(lang.CommandFailedPlural, failedCnt,\r\n                        options.command.get('verb')\r\n                    ));\r\n              }\r\n            } else if (!options.suppressFailMessage && !commandError.suppressFailMessage) {\r\n              if (!!options.customError) {\r\n                GlobalMessage.showMessage('error', results[1]);\r\n              } else {\r\n                // some failed, some were successful\r\n                GlobalMessage.showMessage(\"error\",\r\n                  _.str.sformat(lang.CommandFailedPartial, failedCnt, results.length,\r\n                      options.command.get('verb')\r\n                ));\r\n              }\r\n            }\r\n          }\r\n        }\r\n        handleExecutionResultsDeferred.resolve(results);\r\n      });\r\n      // return a promise - table toolbar waits for it to do anything else after command\r\n      // execution (like display inline form)\r\n      return handleExecutionResultsDeferred.promise();\r\n    },\r\n\r\n    _getErrorMessageFromResponse: function (err) {\r\n      var errorMessage;\r\n      if (err && err.responseJSON && err.responseJSON.error) {\r\n        errorMessage = err.responseJSON.error;\r\n      } else {\r\n        var errorHtml = base.MessageHelper.toHtml();\r\n        base.MessageHelper.reset();\r\n        errorMessage = $(errorHtml).text();\r\n      }\r\n      return errorMessage;\r\n    },\r\n\r\n    // TODO: Deprecate and remove this method in favour of node.fetch.\r\n    refreshModelAttributesFromServer: function (node, collection) {\r\n      var tempNode = node.clone();\r\n      tempNode.collection = collection || node.collection;\r\n      return tempNode.fetch()\r\n                     .then(function () {\r\n                       node.set(tempNode.attributes);\r\n                       if (tempNode.original) {\r\n                         node.original = tempNode.original;\r\n                       }\r\n                       return node;\r\n                     });\r\n    },\r\n\r\n    showOfflineMessage: function (error, yesCallBck, noCallBack) {\r\n      if (error && error.statusCode === 0 && config.offlineSupport) {\r\n        var self = this;\r\n\r\n        require(['csui/dialogs/modal.alert/modal.alert'],\r\n            function (modalAlert) {\r\n\r\n              modalAlert.showInformation(lang.GoToOffline, lang.NoConnectivity,\r\n                  {\r\n                    buttons: modalAlert.buttons.YesNo\r\n                  })\r\n                  .always(function (answer) {\r\n                    if (answer) {\r\n                      yesCallBck ? yesCallBck() : window.location.href = \"#offline.list\";\r\n                    }\r\n                    else {\r\n                      noCallBack ? noCallBack() : self.trigger('offline:refused');\r\n                    }\r\n                  });\r\n            });\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  var helperInstance = new CommandHelper();\r\n  return helperInstance;\r\n\r\n});\r\n\n","csui.define('csui/models/command',[\"module\", \"require\", \"csui/lib/underscore\", \"csui/lib/backbone\",\r\n  \"csui/utils/log\", \"csui/utils/commandhelper\"\r\n], function (module, require, _, Backbone, log, CommandHelper) {\r\n\r\n  // {\r\n  //   signature:   unique identifier among all commands\r\n  //   command_key: permitted action identifier returned by the server\r\n  //   name:        title to show in the UI by default\r\n  //   scope:       node scope to work at: singe|multiple\r\n  //   enabled: function (status) {\r\n  //     returns boolean if this command should be enabled or available;\r\n  //     the default implementation checks the presence of an action with\r\n  //     the command_key in actions available for all affected nodes\r\n  //   },\r\n  //   execute: function (status, options) {\r\n  //     executes this command; no default implementation\r\n  //   }\r\n  // }\r\n\r\n  var CommandModel = Backbone.Model.extend({\r\n\r\n    idAttribute: \"signature\",\r\n\r\n    constructor: function CommandModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var scope      = this.get(\"scope\"),\r\n          nodes      = this._getNodesByScope(status, scope),\r\n          signatures = this.get(\"command_key\");\r\n\r\n      return this._checkPermittedActions(nodes, signatures, status.container);\r\n    },\r\n\r\n    isNonPromoted: function (status) {\r\n      var scope         = this.get(\"scope\"),\r\n          nodes         = this._getNodesByScope(status, scope),\r\n          signatures    = this.get(\"command_key\"),\r\n          isNonPromoted = false;\r\n\r\n      // if at least one node is selected and at least one selected node\r\n      // has action which is non-promoted\r\n      if (nodes && nodes.length) {\r\n        var checkFn = this._getNonPromotedCheckFunctionsForSignatures(signatures);\r\n        if (checkFn) {\r\n          _.find(nodes, function (node) {\r\n            var action = checkFn(node);\r\n            if (action && action.get('csuiNonPromotedAction') === true) {\r\n              isNonPromoted = true;\r\n              return true;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      return isNonPromoted;\r\n    },\r\n\r\n    _getNodesByScope: function (status, scope) {\r\n      // get the array of nodes which the command should apply to\r\n      // according to the scope which the command is capable of\r\n      var nodes;\r\n      switch (scope) {\r\n      case \"single\":\r\n        nodes = CommandHelper.getJustOneNode(status);\r\n        nodes && (nodes = [nodes]);\r\n        break;\r\n      default: // without a specific scope, use case \"multiple\"\r\n        // the checks below use an array; not a Backbone.Collection\r\n        nodes = CommandHelper.getAtLeastOneNode(status).models;\r\n        break;\r\n      }\r\n      return nodes;\r\n    },\r\n\r\n    _getCheckFunctionsForSignatures: function (signatures) {\r\n      var checkNode;\r\n      if (signatures) {\r\n        if (_.isArray(signatures) && signatures.length) {\r\n          checkNode = function (node) {\r\n            return _.any(signatures, function (signature) {\r\n              return node.actions && node.actions.findRecursively(signature);\r\n            });\r\n          };\r\n        } else if (_.isString(signatures)) {\r\n          checkNode = function (node) {\r\n            return node.actions && node.actions.findRecursively(signatures);\r\n          };\r\n        }\r\n      }\r\n      return checkNode;\r\n    },\r\n\r\n    _getNonPromotedCheckFunctionsForSignatures: function (signatures) {\r\n      var checkFn;\r\n      if (signatures) {\r\n        if (_.isArray(signatures) && signatures.length) {\r\n          checkFn = function (node) {\r\n            var action;\r\n            _.find(signatures, function (signature) {\r\n              action = node.actions && node.actions.findRecursively(signature);\r\n              return !!action;\r\n            });\r\n            return action;\r\n          };\r\n        } else if (_.isString(signatures)) {\r\n          checkFn = function (node) {\r\n            return node.actions && node.actions.findRecursively(signatures);\r\n          };\r\n        }\r\n      }\r\n      return checkFn;\r\n    },\r\n\r\n    _checkPermittedActions: function (nodes, signatures, container) {\r\n      // if at least one node is selected and each selected node\r\n      // has the right action in actions, the command is enabled\r\n      if (nodes && nodes.length) {\r\n        var checkNode = this._getCheckFunctionsForSignatures(signatures);\r\n        // if no command_key is specified, the descended command is\r\n        // always enabled; but it usually overrides the enabled() method\r\n        return !checkNode || _.all(nodes, checkNode);\r\n      }\r\n      return false;\r\n    },\r\n\r\n    _getNodeActionForSignature: function (node, signatures) {\r\n      var action;\r\n      if (node) {\r\n        var checkNode = this._getCheckFunctionsForSignatures(signatures);\r\n        if (!!checkNode) {\r\n          action = checkNode.call(this, node);\r\n        }\r\n      }\r\n      return action;\r\n    }\r\n\r\n  });\r\n\r\n  return CommandModel;\r\n\r\n});\r\n\n","csui.define('csui/integration/folderbrowser/commands/nls/localized.strings',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/integration/folderbrowser/commands/go.to.node.history',['module', 'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/models/command', 'csui/integration/folderbrowser/commands/nls/localized.strings'\r\n], function (module, require, $, _, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var visitedNodesByContext = {};\r\n\r\n  var GoToNodeHistoryCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'Back',\r\n      name: lang.GoToHistory\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      // Module configuration can change later, than this module has been\r\n      // required and its callback executed. Repeat reading its config.\r\n      var config = _.extend({\r\n            enabled: false\r\n          }, module.config()),\r\n          context = status.context || options && options.context,\r\n          visitedNodes;\r\n      // Context us not mandatory; some commands can work without it,\r\n      // and those, which cannot, should say it\r\n      if (!context) {\r\n        return false;\r\n      }\r\n      if (config.enabled) {\r\n        this._ensureGoBackList(context);\r\n      }\r\n      visitedNodes = visitedNodesByContext[context.cid] || [];\r\n      // Top node is the current one. At least one more node below is needed\r\n      // for being able to go back to it.\r\n      return config.enabled && visitedNodes.length > 1;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/contexts/factories/next.node'\r\n      ], function (NextNodeModelFactory) {\r\n        var context = status.context || options && options.context,\r\n            nextNode = context.getModel(NextNodeModelFactory),\r\n            visitedNodes = visitedNodesByContext[context.cid] || [];\r\n        // Do not crash if somebody executed this command without asking\r\n        // if it is enabled first. Sanity check.\r\n        if (visitedNodes.length > 1) {\r\n          // Top node is the current one. Pop it, so that the previous one\r\n          // on the stack can become the current one.\r\n          visitedNodes.pop();\r\n          nextNode.set('id', visitedNodes[visitedNodes.length - 1]);\r\n        }\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    clearHistory: function (context) {\r\n      delete visitedNodesByContext[context.cid];\r\n    },\r\n\r\n    _ensureGoBackList: function (context) {\r\n      // There is only one command instance on the page, once the command\r\n      // has been required, but there can be multiple contexts.\r\n      var visitedNodes = visitedNodesByContext[context.cid];\r\n      if (visitedNodes) {\r\n        return;\r\n      }\r\n      visitedNodes = visitedNodesByContext[context.cid] = [];\r\n      require(['csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/next.node'\r\n      ], function (NodeModelFactory, NextNodeModelFactory) {\r\n        var nextNode = context.getModel(NextNodeModelFactory);\r\n        // Ensure, that the initially empty stack start with the current node.\r\n        visitCurrentNode(NodeModelFactory);\r\n        // Whenever the context is fetched, ensure, that the new node gets\r\n        // pushed on the top of the stack.\r\n        context.on('request', function () {\r\n          visitCurrentNode(NodeModelFactory);\r\n        });\r\n        // Some components either do not wait for context's \"request\" event,\r\n        // or they registered their listener earlier, than this command.\r\n        // Get the new node before a context plugin decides to fetch context.\r\n        nextNode.on('change:id', function () {\r\n          visitCurrentNode(NextNodeModelFactory);\r\n        });\r\n        function visitCurrentNode(Factory) {\r\n          var node = context.getModel(Factory),\r\n              nodeId = node.get('id');\r\n          // Node ID could be reset, if nextNode event has been caught.\r\n          // If both nextNode's and node's events are triggered, this\r\n          // function will be called with the same node ID.\r\n          if (nodeId && visitedNodes[visitedNodes.length - 1] !== nodeId) {\r\n            visitedNodes.push(nodeId);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  return GoToNodeHistoryCommand;\r\n\r\n});\r\n\n","csui.define('csui/integration/folderbrowser/commands/nls/root/localized.strings',{\r\n  \"GoToHistory\": \"Go Back\",\r\n  \"OpenFullPageContainer\": \"Open Full Page Container\"\r\n});\r\n\n","\n","csui.define('csui/integration/folderbrowser/commands/open.full.page.container',[\r\n  'module', 'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/models/command',\r\n  'i18n!csui/integration/folderbrowser/commands/nls/localized.strings'\r\n], function (module, require, $, _, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var OpenFullPageWorkpsace = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'Page',\r\n      name: lang.OpenFullPageContainer\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var config = _.extend({\r\n        enabled: false\r\n      }, module.config());\r\n      return config.enabled && !!status.container;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/node.links/node.links'], function (nodeLinks) {\r\n        window.open(nodeLinks.getUrl(status.container));\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return OpenFullPageWorkpsace;\r\n});\r\n\n","csui.define('csui/models/commands',[\"module\", \"csui/lib/underscore\", \"csui/lib/backbone\", \"csui/utils/log\",\r\n  \"csui/models/command\"\r\n], function (module, _, Backbone, log, CommandModel) {\r\n\r\n  var CommandCollection = Backbone.Collection.extend({\r\n\r\n    model: CommandModel,\r\n\r\n    constructor: function CommandCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    getAllSignatures: function () {\r\n      return _.chain(this.pluck('command_key'))\r\n          .map(function (signature) {\r\n            if (_.isArray(signature)) {\r\n              // If there are multiple command keys to check, take just the\r\n              // first one, which is the V2 one needed for the URL query\r\n              var result = signature[0];\r\n              // If the 'default' command key is requested, add the concrete\r\n              // key too; v1 expects 'default' and v2 'open', while the\r\n              // concrete action would be at the third place then.\r\n              if (result === 'default') {\r\n                result = ['default', 'open', signature[2]];\r\n              }\r\n              return result;\r\n            }\r\n            return signature;\r\n          })\r\n          .flatten()\r\n          .compact()\r\n          .unique()\r\n          .value();\r\n    }\r\n\r\n  });\r\n\r\n  return CommandCollection;\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commands',[\r\n  'csui/lib/underscore', 'csui/models/commands',\r\n  // Load extra commands to be added to the common collection\r\n  'csui-ext!csui/utils/commands'\r\n], function (_, CommandCollection, extraCommands) {\r\n  'use strict';\r\n\r\n  var commands = new CommandCollection();\r\n\r\n  _.extend(commands, {\r\n    signatures: {\r\n      browse: 'Browse',\r\n      open: 'Open',\r\n      download: 'Download',\r\n      add: 'Add',\r\n      navigate: 'Navigate',\r\n      original: 'Original'\r\n    },\r\n    version: '1.0'\r\n  });\r\n\r\n  if (extraCommands) {\r\n    commands.add(\r\n        _.chain(extraCommands)\r\n         .flatten(true)\r\n         .map(function (Command) {\r\n           return new Command();\r\n         })\r\n         .value()\r\n    );\r\n  }\r\n\r\n  return commands;\r\n});\r\n\n","csui.define('csui/utils/commands/add.categories',[\"require\", \"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/utils/base\", \"csui/utils/log\",\r\n  \"csui/models/command\"\r\n], function (require, $, _, base, log, CommandModel) {\r\n\r\n  var AddCategories = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'AddCategory',\r\n      command_key: ['addcategory', 'AddCategory'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var scope = this.get(\"scope\");\r\n      var nodes = this._getNodesByScope(status, scope);\r\n\r\n      if (nodes && nodes.length > 0) {\r\n        // since this is a 'single' scope command, just check one node\r\n        if (nodes[0].get('id') === undefined) {\r\n          // ********* NOTE: **********\r\n          // For Create scenario, the server team does not deliver a RestAPI call to get the\r\n          // actions. Both Stefan Greim from CWS and Alex Gerasimov from RM have special\r\n          // requirements to enable/disable the actions based on the workflow/object state.\r\n          // Ferda came up with a solution by checking:\r\n          // - if there is no form[role_name='categories'], then allow the 'AddCategory' command\r\n          // - or if there is form[role_name='categories'], then check custom field in Alpaca form:\r\n          //   >> options.forms[role_name='categories'].schema.additionalProperties = true/false\r\n          // Then enable/disable the 'AddCategory' action based on this value.\r\n          //\r\n          // Stefan and Alex will set this value in their code if they want to override and control\r\n          // the 'AddCategory' command.  For their commands such as 'AddClassifications', they will\r\n          // implement similar logics as of this 'add.categories' command in their command\r\n          // implementation of the enabled() method.\r\n\r\n          var enabled = true;\r\n          if (status.originalFormCollection) {\r\n            status.originalFormCollection.each(function (form) {\r\n              if (form.get('role_name') === 'categories' &&\r\n                  form.get('schema').additionalProperties === false) {\r\n                enabled = false;\r\n              }\r\n            });\r\n          }\r\n          return enabled;\r\n        } else {\r\n          // For Edit/Copy/Move scenario, check the node for the actions\r\n          return CommandModel.prototype.enabled.apply(this, arguments);\r\n        }\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/widgets/metadata/metadata.add.categories.controller'\r\n      ], function (MetadataAddCategoriesController) {\r\n\r\n        /* Options needed:\r\n        var options = {\r\n          action: this.options.action,\r\n          node: this.options.node,\r\n          collection: this.options.collection,\r\n          container: this.options.container,\r\n          inheritance: this.options.inheritance,\r\n          context: this.options.context,\r\n          parentView: this.options.parentView,  // use for blocking view and callback\r\n          addPropertiesCallback: this.options.addPropertiesCallback  // to insert the new Category\r\n        }; */\r\n\r\n        var metadataAddCatController = new MetadataAddCategoriesController();\r\n        metadataAddCatController.AddNewCategory(options)\r\n            .done(function (resp) {\r\n              if (options.addPropertiesCallback) {\r\n                options.addPropertiesCallback.call(options.parentView, resp.catModel);\r\n              }\r\n              deferred.resolve();\r\n            })\r\n            .fail(function (err) {\r\n              deferred.reject(err);\r\n            });\r\n\r\n      }, function (error) {\r\n        log.warn('Failed to load MetadataAddCategoriesController. {0}', error)\r\n        && console.warn(log.last);\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return AddCategories;\r\n\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/dialogs/file.open/impl/file.open',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<input type=\\\"file\\\" style=\\\"display:none\\\" \"\n    + this.escapeExpression(((helper = (helper = helpers.multiple || (depth0 != null ? depth0.multiple : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"multiple\",\"hash\":{}}) : helper)))\n    + \">\\r\\n\";\n}});\nHandlebars.registerPartial('csui_dialogs_file.open_impl_file.open', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('csui/dialogs/file.open/file.open.dialog',['module', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/marionette', 'csui/utils/log', 'csui/utils/base',\r\n  'hbs!csui/dialogs/file.open/impl/file.open'\r\n], function (module, _, $, Marionette, log, base, template) {\r\n  'use strict';\r\n\r\n  log = log(module.id);\r\n\r\n  var FileOpenDialog = Marionette.ItemView.extend({\r\n\r\n    className: 'csui-file-open',\r\n\r\n    template: template,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        multiple: this.options.multiple ? 'multiple' : ''\r\n      };\r\n    },\r\n\r\n    ui: {\r\n      fileInput: 'input'\r\n    },\r\n\r\n    events: {\r\n      'change @ui.fileInput': '_processFiles'\r\n    },\r\n\r\n    constructor: function FileOpenDialog(options) {\r\n      // Memoize properties, which can be provided as functions\r\n      this.className = _.result(this, 'className');\r\n\r\n      // If the previous caller didn't destroy the dialog, do it now.\r\n      // The view should be garbage collected. There should be just\r\n      // one dialog on the page at the same time.\r\n      var earlierElement = $(document.body).find('> .' + this.className);\r\n      if (earlierElement.length) {\r\n        log.debug('Removing an earlier file-open input element.')\r\n        && console.log(log.last);\r\n        earlierElement.remove();\r\n      }\r\n\r\n      Marionette.ItemView.prototype.constructor.call(this, options);\r\n    },\r\n\r\n    onDestroy: function(){\r\n      this.ui.fileInput.off();\r\n    },\r\n\r\n    show: function () {\r\n      log.debug('Showing a file-open input element.')\r\n      && console.log(log.last);\r\n      this.render();\r\n      $(document.body).append(this.el);\r\n      this.ui.fileInput.click();\r\n      this.ui.fileInput.trigger('focus');\r\n    },\r\n\r\n    _processFiles: function (event) {\r\n      var originalEvent = event.originalEvent,\r\n          files = originalEvent.target.files ||\r\n                  originalEvent.dataTransfer &&\r\n                  originalEvent.dataTransfer.files;\r\n      log.debug(files.length + ' file(s) selected by a file-open input element.')\r\n      && console.log(log.last);\r\n      this.trigger('add:files', files);\r\n    }\r\n\r\n  });\r\n\r\n  return FileOpenDialog;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/add',[\"require\", \"csui/lib/jquery\", \"csui/lib/underscore\",\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/log\", \"csui/utils/base\", \"csui/utils/commandhelper\",\r\n  \"csui/models/command\", 'csui/models/node/node.model',\r\n  'csui/dialogs/file.open/file.open.dialog'\r\n], function (require, $, _, lang, log, base, CommandHelper, CommandModel,\r\n    NodeModel, FileOpenDialog) {\r\n  'use strict';\r\n\r\n  var AddCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"Add\"\r\n    },\r\n\r\n    enabled: function (status) {\r\n      status || (status = {});\r\n      if (status.container && status.container.get('container')) {\r\n        //Hide the add toolbar for the type collection 298\r\n        if (status.container.get(\"type\") === 298) {\r\n          return false;\r\n        }\r\n        status.data || (status.data = {});\r\n        var addableTypes = status.data.addableTypes;\r\n        return addableTypes && _.any([0, 1, 140, 144, 298], function (type) {\r\n              return !!addableTypes.get(type);\r\n            });\r\n      }\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      if (options && options.addableType === undefined) {\r\n        throw new Error('Missing options.addableType');\r\n      }\r\n      // the command handles multiple addable types (Content Server SubType)\r\n      var newNode, promise,\r\n          addableTypeName = this._getAddableTypeName(status, options);\r\n      // if status.forwardToTable == true then tabletoolbar (the command controller) can\r\n      // delegate the action to the table.view (used for inline forms)\r\n      switch (options.addableType) {\r\n      case 0: // folder\r\n      case 298: // collection\r\n        status.forwardToTable = true;\r\n        newNode = new NodeModel({\r\n          \"type\": options.addableType,\r\n          \"type_name\": addableTypeName,\r\n          \"container\": true,\r\n          \"name\": \"\" // start with empty name\r\n        }, {\r\n          connector: status.container.connector,\r\n          collection: status.collection\r\n        });\r\n        promise = $.Deferred().resolve(newNode).promise();\r\n        break;\r\n      case 140: // url (Content Server SubType)\r\n        status.forwardToTable = true;\r\n        newNode = new NodeModel({\r\n          \"type\": options.addableType,\r\n          \"type_name\": addableTypeName,\r\n          \"container\": false,\r\n          \"name\": \"\" // start with empty name\r\n        }, {\r\n          connector: status.container.connector,\r\n          collection: status.collection\r\n        });\r\n        promise = $.Deferred().resolve(newNode).promise();\r\n        break;\r\n      case 1: // short-cut (Content Server SubType)\r\n        status.forwardToTable = true;\r\n        promise = this._selectShortcutTarget(status, options);\r\n        break;\r\n      case 144: // document (Content Server SubType)\r\n        status.suppressSuccessMessage = true;\r\n        promise = this._selectFilesForUpload(status, options);\r\n        break;\r\n      default :\r\n        var errMsg = \"The \\\"Add\\\" action for the addableType \" +\r\n                     options.addableType + \" is not implemented\";\r\n        log.debug(errMsg) && console.log(log.last);\r\n        promise = $.Deferred().reject({\r\n          error: errMsg,\r\n          commandSignature: this.signature\r\n        }).promise();\r\n      }\r\n      // TODO: The add command is no actual command.  It cannot cay when it\r\n      // is finished - the node has been added.  Client which report the\r\n      // command status show immediately success.  It should be redesigned.\r\n      return promise;\r\n    },\r\n\r\n    _selectFilesForUpload: function (status, options) {\r\n      var deferred       = $.Deferred(),\r\n          // View to provide the area for the drag'n'drop overlay-view, which will\r\n          // turn up when files are dragged over it and trigger an event when the\r\n          // files are dropped on it.\r\n          fileOpenDialog = new FileOpenDialog({multiple: true});\r\n      deferred.resolve(); // resolve immediately because fileOpenDialog can't trigger anything\r\n      // on cancel\r\n      fileOpenDialog\r\n          .listenTo(fileOpenDialog, 'add:files', function (files) {\r\n            require(['csui/controls/fileupload/fileupload'\r\n            ], function (fileUploadHelper) {\r\n              deferred.resolve();\r\n              var uploadController = fileUploadHelper.newUpload(status, options);\r\n              uploadController.addFilesToUpload(files, {\r\n                collection: status.collection\r\n              });\r\n              uploadController.listenTo(uploadController, 'destroy', function () {\r\n                fileOpenDialog.destroy();\r\n              });\r\n            });\r\n          })\r\n          .show();\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectShortcutTarget: function (status, options) {\r\n      var self     = this,\r\n          deferred = $.Deferred();\r\n      require(['csui/dialogs/node.picker/node.picker'\r\n      ], function (NodePicker) {\r\n        var pickerOptions   = {\r\n              dialogTitle: lang.ShortcutPickerTitle,\r\n              connector: status.container.connector,\r\n              context: options.context,\r\n              initialContainer: status.container,\r\n              globalSearch: true,\r\n              startLocation: 'recent.containers',\r\n              unselectableTypes: [141, 142, 133],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true\r\n            },\r\n            addableTypeName = self._getAddableTypeName(status, options);\r\n        self.nodePicker = new NodePicker(pickerOptions);\r\n        return self.nodePicker\r\n            .show()\r\n            .then(function (args) {\r\n              var node = args.nodes[0];\r\n              var newNode = new NodeModel({\r\n                \"type\": 1,\r\n                \"type_name\": addableTypeName,\r\n                \"container\": false,\r\n                \"name\": node.get('name'),\r\n                \"original_id\": node.get('id'),\r\n                // Show the right icon for this not-yet-saved node\r\n                \"original_id_expand\": node.attributes\r\n              }, {\r\n                connector: status.container.connector,\r\n                collection: status.collection\r\n              });\r\n              return newNode;\r\n            })\r\n            .done(function () {\r\n              deferred.resolve.apply(deferred, arguments);\r\n            })\r\n            .fail(function () {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    // The type_name is used before the actual node is created to supply\r\n    // the right icon, to provide the placeholder text for entering the\r\n    // node name, to make the title of the creation dialog etc.\r\n    _getAddableTypeName: function (status, options) {\r\n      // The command caller can override the type name returned by\r\n      // /addablenodetypes\r\n      if (options.addableTypeName) {\r\n        return options.addableTypeName;\r\n      }\r\n      // The enable method checks, that the type exists\r\n      var addableType = status.data.addableTypes.findWhere({\r\n        type: options.addableType\r\n      });\r\n      // The type_name is he same as returned by the server from the node\r\n      // info calls; nodeSpriteCollection should be used to show the\r\n      // displayable node type name and icon\r\n      return addableType.get('type_name');\r\n    }\r\n\r\n  }, {\r\n\r\n    // static methods here:\r\n    _getAddableTypesWithoutInlineFormAsMap: function () {\r\n      return {\r\n        144: true // document is handled by FileUploadController\r\n      };\r\n    },\r\n\r\n    isAddableTypeWithoutInlineForm: function (addableType) {\r\n      var x = this._getAddableTypesWithoutInlineFormAsMap();\r\n      return x[addableType] === true;\r\n    }\r\n\r\n  });\r\n\r\n  return AddCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/add.item.metadata',[\"module\", \"require\", \"csui/lib/underscore\", \"csui/lib/jquery\", \"csui/lib/backbone\",\r\n  \"csui/utils/log\", \"csui/utils/commandhelper\", \"csui/models/command\"\r\n], function (module, require, _, $, Backbone, log, CommandHelper, CommandModel) {\r\n\r\n  var AddItemMetadataCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"AddItemMetadata\",\r\n      command_key: \"Add_Item\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/widgets/metadata/metadata.add.item.controller'\r\n      ], function (MetadataAddItemController) {\r\n        var metadataAddItemController = new MetadataAddItemController();\r\n        metadataAddItemController\r\n            .displayForm(status, options)\r\n            .done(function () {\r\n              deferred.resolve.apply(deferred, arguments);\r\n            })\r\n            .fail(function () {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  AddItemMetadataCommand.version = \"1.0\";\r\n\r\n  return AddItemMetadataCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/add.version',[\r\n  'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/models/node/node.model',\r\n  'csui/models/actions', 'csui/dialogs/file.open/file.open.dialog',\r\n  'csui/utils/types/date', 'csui/utils/types/number',\r\n  'csui/utils/types/member', 'csui/lib/moment'\r\n], function (require, $, _, lang, CommandModel, CommandHelper,\r\n    NodeModel, ActionCollection, FileOpenDialog, date, number, member,\r\n    moment) {\r\n  'use strict';\r\n  var ConnectorFactory;\r\n  var AddVersionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"AddVersion\",\r\n      command_key: \"addversion\",\r\n      name: lang.CommandNameAddVersion,\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      status || (status = {});\r\n      var deferred              = $.Deferred(),\r\n          currentModel          = status.nodes.models[0],\r\n          recentVersionOwnerId  = currentModel.get('versions').owner_id,\r\n          currentLoggedInUserId = status.context.getModel('user').id,\r\n          self                  = this;\r\n\r\n      this.trigger('close:dialogView:form');\r\n      require([\r\n        'csui/utils/contexts/factories/connector',\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n\r\n        if (!!status.tableView) {\r\n          status.tableView.lockedForOtherContols = false;\r\n        }\r\n\r\n        status.connector = status.context.getObject(ConnectorFactory);\r\n\r\n        if ((!!status.nodes.models[0].versions && !!status.nodes.models[0].versions.allModels)) {\r\n          var allModels     = status.nodes.models[0].versions.allModels,\r\n              recentVersion = allModels[allModels.length - 1];\r\n          recentVersionOwnerId = recentVersion.get('owner_id').id || recentVersion.get('owner_id');\r\n        }\r\n\r\n        // if recent version is added by same user and not reserved by self, then open \"File Open\r\n        // Dialog\", otherwise, open \"Warn Dialog\".\r\n        if (currentLoggedInUserId === recentVersionOwnerId || !!currentModel.get('reserved')) {\r\n          self._fileOpenDialog(status, options);\r\n        } else {\r\n          self._showWarnDialog(status, options, self);\r\n        }\r\n\r\n        deferred.resolve();\r\n        status.suppressSuccessMessage = true;\r\n        var file = status.file;\r\n\r\n        if (file) {\r\n          this\r\n              ._uploadFiles(file, status)\r\n              .done(deferred.resolve)\r\n              .fail(deferred.reject);\r\n        }\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getBodyMessage: function (versionInfo) {\r\n      var currentDate   = moment(),\r\n          versDate      = date.deserializeDate(versionInfo.create_date),\r\n          difference    = currentDate.diff(versDate, 'days'),\r\n          version_owner = member.formatMemberName(versionInfo.owner_id_expanded || versionInfo.owner_id);\r\n\r\n      if (difference >= 4) {\r\n        versDate = date.formatExactDate(versDate);\r\n      } else if (difference >= 2) {\r\n        versDate = date.formatFriendlyDateTimeNow(versDate) + \" \" + date.formatExactTimeOnly(versDate);\r\n      } else {\r\n        versDate = date.formatDateTime(versDate);\r\n      }\r\n\r\n      return _.str.sformat(lang.warnMessage, version_owner, lang.grammer, versDate);\r\n    },\r\n\r\n    _fileOpenDialog: function (status, options) {\r\n      var fileOpenDialog = new FileOpenDialog({multiple: false}),\r\n          self           = this;\r\n      fileOpenDialog\r\n          .listenTo(fileOpenDialog, 'add:files', function (files) {\r\n            self._uploadFiles(files[0], status, options)\r\n                .always(function () {\r\n                  fileOpenDialog.destroy();\r\n                });\r\n          })\r\n          .show();\r\n    },\r\n\r\n    _showWarnDialog: function (status, options, self) {\r\n\r\n      this._getOwnerInfoOfLatestVersion(status).done(_.bind(function (resp) {\r\n        // dialog view\r\n        require([\r\n          'csui/controls/dialog/dialog.view',\r\n          'css!csui/controls/globalmessage/impl/messagedialog'\r\n        ], function (DialogView) {\r\n          self._dialog = new DialogView({\r\n            iconLeft: 'notification_warning',\r\n            title: lang.warnTitle,\r\n            bodyMessage: self._getBodyMessage(resp.data),\r\n            status: status,\r\n            showTitleIcon: true,\r\n            className: self.dialogClassName(),\r\n            buttons: [\r\n              {\r\n                id: 'Version',\r\n                label: lang.yesButton,\r\n                'default': true,\r\n                disabled: false,\r\n                click: _.bind(self._onClickSelectButton, self, status)\r\n              },\r\n              {\r\n                label: lang.noButton,\r\n                click: _.bind(self.onClickCancelButton, self)\r\n\r\n              }\r\n            ]\r\n          });\r\n          self._dialog.show();\r\n        }, self);\r\n\r\n      }, this)).fail(function (resp) {\r\n      });\r\n    },\r\n\r\n    _getOwnerInfoOfLatestVersion: function (status) {\r\n      var deferred    = $.Deferred(),\r\n          node        = status.nodes.models[0],\r\n          connector   = status.connector,\r\n          versionInfoOptions = {\r\n            url: connector.connection.url + '/nodes/' + node.get(\"id\") +\r\n                 '/versions/latest?expand=member',\r\n            type: 'GET'\r\n          };\r\n\r\n      connector.makeAjaxCall(versionInfoOptions).done(function (resp) {\r\n        deferred.resolve(resp);\r\n      }).fail(function (resp) {\r\n        deferred.reject(resp);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    dialogClassName: function () {\r\n      var className = 'addversion-fornonreserve';\r\n      return className;\r\n    },\r\n\r\n    onClickCancelButton: function () {\r\n      this._dialog.destroy();\r\n\r\n    },\r\n\r\n    _onClickSelectButton: function (self, dialogView) {\r\n      if (!!dialogView) {\r\n        dialogView.dialog.destroy();\r\n      }\r\n      self = this;\r\n      self._fileOpenDialog(dialogView.dialog.options.status, {});\r\n    },\r\n\r\n    _uploadFiles: function (file, status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n\r\n      return this._dialogProgressUpload(node, file, status);\r\n    },\r\n\r\n    _dialogProgressUpload: function (node, file, status) {\r\n      var deferred = $.Deferred();\r\n\r\n      require([\r\n        'csui/controls/fileupload/impl/addversion.controller',\r\n        'csui/models/version'\r\n      ], function (AddVersionController, VersionModel) {\r\n        var node = CommandHelper.getJustOneNode(status);\r\n        var addVersionController = new AddVersionController({\r\n          view: status.originatingView,\r\n          selectedNode: node\r\n        });\r\n\r\n        addVersionController\r\n            .uploadFile(file)\r\n            .then(function (fileUploadModel) {\r\n              return fileUploadModel.version\r\n                  .fetch()\r\n                  .then(function (response) {\r\n                    return fileUploadModel.version;\r\n                  });\r\n            })\r\n            .then(function (version) {\r\n              if (node.versions || (!!node.attributes && !!node.attributes.versions)) {\r\n                var sizeinbytes = version.get('file_size'),\r\n                    sizeinkb    = number.formatFileSize(sizeinbytes);\r\n                version.set('file_size_formatted', sizeinkb);\r\n                version.isLocallyCreated = true;\r\n                // TODO: Remove this, as soon as the version REST API returns actions\r\n                fakeActions(node, version);\r\n                !!node.versions && node.versions.add(version, {at: 0});\r\n                if (Array.isArray(node.get('versions'))) {\r\n                  !!node.attributes && !!node.attributes.versions &&\r\n                  node.attributes.versions.push(version.attributes);\r\n                }\r\n\r\n              }\r\n            })\r\n            .then(function () {\r\n              // Adding a new version may change the icon, size and last\r\n              // modification time of the parent document\r\n             return true;\r\n            })\r\n            .then(function () {\r\n              // Prevent the node returned in the promise result\r\n              return true;\r\n            })\r\n            .done(deferred.resolve)\r\n            .fail(deferred.reject);\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  // TODO: Remove this, as soon as the version REST API returns actions\r\n  // (Another workaround could be loading all versions anew)\r\n  function fakeActions(node, version) {\r\n    var actions = [];\r\n    if (node.actions.findRecursively('download') || node.actions.findRecursively('Download')) {\r\n      actions.push({signature: 'versions_download'}, {signature: 'versions_open'});\r\n    }\r\n    if (node.actions.findRecursively('delete') || node.actions.findRecursively('Delete')) {\r\n      actions.push({signature: 'versions_delete'});\r\n    }\r\n    if (node.actions.findRecursively('properties') || node.actions.findRecursively('Properties')) {\r\n      actions.push({signature: 'versions_properties'});\r\n    }\r\n    version.actions.reset(actions);\r\n  }\r\n\r\n  return AddVersionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.node.perspective',['require', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper'\r\n], function (require, $, CommandModel, CommandHelper) {\r\n  'use strict';\r\n\r\n  var OpenNodePerspectiveCommand = CommandModel.extend({\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/contexts/factories/next.node',\r\n      ], function (NextNodeModelFactory) {\r\n        var context = status.context || options && options.context,\r\n            nextNode = context.getModel(NextNodeModelFactory),\r\n            node = CommandHelper.getJustOneNode(status);\r\n        nextNode.set('id', node.get('id'));\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return OpenNodePerspectiveCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/browse',['csui/utils/commands/open.node.perspective', 'csui/utils/commandhelper'\r\n], function (OpenNodePerspectiveCommand, CommandHelper) {\r\n  'use strict';\r\n\r\n  var BrowseCommand = OpenNodePerspectiveCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'Browse',\r\n      // The server has no concrete action for children browsing;\r\n      // the 'default' command key has to be the first one\r\n      // WARNING: No other command should use the 'default'/'open'\r\n      // command key.  Always request a concrete command key from\r\n      // your REST API developer.\r\n      command_key: ['default', 'open', 'browse', 'Browse'],\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      if (!BrowseCommand.__super__.enabled.apply(this, arguments)) {\r\n        return false;\r\n      }\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('container');\r\n    }\r\n\r\n  });\r\n\r\n  return BrowseCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/collection/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/collection/nls/root/lang',{\r\n  collectCommandSignature: 'Collect',\r\n  addItemsToolTip: 'Add Items',\r\n  collectItemsDialogTitle: 'Add items',\r\n  selectButtonLabel: 'Add selected',\r\n  selectCollectButtonLabel: 'Collect',\r\n  conflictsItemsHeader: 'Listed items will not be added',\r\n  conflictsDialogCloseLabel: 'Close',\r\n  CollectItemsNoneMessage: \"No items added.\",\r\n  CollectOneItemSuccessMessage: '1 new item was successfully added',\r\n  CollectManyItemsSuccessMessage: '{0} new items were successfully added',\r\n  CollectOneItemFailMessage: '1 of your collected items already added',\r\n  CollectManyItemsFailMessage: '{0} of your collected items are already added',\r\n  RemoveCollectItemsCommandConfirmDialogHtml: \"<span class='msgIcon WarningIcon'>\" +\r\n                                              \"<%- message %>\" +\r\n                                              \"</span>\",\r\n  RemoveCommandConfirmDialogSingleMessage: \"Do you want to remove {0} from collection?\",\r\n  RemoveCommandConfirmDialogMultipleMessage: \"Do you want to remove {0} items from collection?\",\r\n  RemoveCommandConfirmDialogTitle: \"Remove from collection\",\r\n  RemoveItemsNoneMessage: \"No items removed from collection.\",\r\n  RemoveOneItemSuccessMessage: \"1 item successfully removed from collection.\",\r\n  RemoveSomeItemsSuccessMessage: \"{0} items successfully removed from collection.\",\r\n  RemoveManyItemsSuccessMessage: \"{0} items successfully removed from collection.\",\r\n  RemoveOneItemFailMessage: \"1 item failed to remove from collection.\",\r\n  RemoveSomeItemsFailMessage: \"{0} items failed to remove from collection.\",\r\n  RemoveManyItemsFailMessage: \"{0} items failed to remove from collection.\",\r\n  RemoveSomeItemsFailMessage2: \"{2} items failed to remove from collection.\",\r\n  RemoveManyItemsFailMessage2: \"{2} items failed to remove from collection.\",\r\n  RemoveItems: 'Removing {0} items from collection',\r\n  RemovingOneItem: 'Removing item from collection',\r\n  RemovingSomeItems: 'Removing {0} items from collection',\r\n  CollectingOneItem: 'Collecting item',\r\n  CollectingItems: 'Collecting {0} items',\r\n  CollectManyItemsFailMessage2: '{2} items failed to Collecting.',\r\n  removefromCollection: \"Remove from collection\"\r\n});\n","\n","csui.define('csui/utils/commands/collection/collect.items',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/backbone', 'csui/utils/url', 'csui/utils/command.error',\r\n  'csui/models/command', 'i18n!csui/utils/commands/collection/nls/lang',\r\n  'csui/utils/base', 'csui/models/nodes',\r\n  'csui/lib/underscore.string'\r\n], function (module, require, _, $, Backbone, Url, CommandError, CommandModel,\r\n    lang, base, NodeCollection) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  var GlobalMessage, TaskQueue, UploadFileCollection, PageLeavingBlocker,\r\n      NextNodeModelFactory, CollectionConflictView,\r\n      CollectCommand = CommandModel.extend({\r\n        defaults: {\r\n          signature: 'CollectionCanCollect',\r\n          name: lang.addItemsToolTip,\r\n          command_key: ['collectionCanCollect'],\r\n          scope: 'single',\r\n          successMessages: {\r\n            formatForOne: lang.CollectOneItemSuccessMessage,\r\n            formatForTwo: lang.CollectManyItemsSuccessMessage,\r\n            formatForMany: lang.CollectManyItemsSuccessMessage,\r\n            formatForFive: lang.CollectManyItemsSuccessMessage,\r\n          },\r\n          errorMessages: {\r\n            formatForOne: lang.CollectOneItemFailMessage,\r\n            formatForTwo: lang.CollectManyItemsFailMessage,\r\n            formatForMany: lang.CollectManyItemsFailMessage,\r\n            formatForFive: lang.CollectManyItemsFailMessage,\r\n          }\r\n        },\r\n\r\n        enabled: function (status) {\r\n          if (status.container.get('type') === 298) {\r\n            status.nodes = new NodeCollection([status.container]);\r\n            return CollectCommand.__super__.enabled.apply(this, arguments);\r\n          } else {\r\n            return false;\r\n          }\r\n        },\r\n\r\n        execute: function (status, options) {\r\n          var deferred = $.Deferred(),\r\n              self     = this;\r\n\r\n          require(['csui/controls/globalmessage/globalmessage',\r\n            'csui/controls/conflict.resolver/impl/collection.conflicts/collection.conflicts.view',\r\n            'csui/utils/taskqueue',\r\n            'csui/models/fileuploads', 'csui/utils/page.leaving.blocker',\r\n            'csui/utils/contexts/factories/next.node'\r\n          ], function () {\r\n            GlobalMessage = arguments[0];\r\n            CollectionConflictView = arguments[1];\r\n            TaskQueue = arguments[2];\r\n            UploadFileCollection = arguments[3];\r\n            PageLeavingBlocker = arguments[4];\r\n            NextNodeModelFactory = arguments[5];\r\n            self._addToCollection(status, options)\r\n                .done(function (selectedOptions) {\r\n                  var selectedNodes    = selectedOptions.nodes,\r\n                      nodes            = _.map(selectedNodes, function (node) {\r\n                        return {\r\n                          name: node.get('name'),\r\n                          state: 'pending',\r\n                          count: 0,\r\n                          total: 1,\r\n                          node: node\r\n                        };\r\n                      }),\r\n                      targetFolder     = status.container,\r\n                      uploadCollection = new UploadFileCollection(nodes, {connector: connector}),\r\n                      connector        = status.container && status.container.connector;\r\n                  status.container.collection = status.collection;\r\n                  self._announceOperationStart(status);\r\n                  uploadCollection.each(function (fileUpload) {\r\n                    var node = fileUpload.get('node');\r\n                    fileUpload.node = node;\r\n                    fileUpload.unset('node');\r\n                    fileUpload.set('mime_type', node.get('mime_type'));\r\n                  });\r\n\r\n                  self._addSelectedNodesToCollection(uploadCollection, connector, targetFolder,\r\n                      status.collection)\r\n                      .then(function (promises) {\r\n                        GlobalMessage.hideFileUploadProgress();\r\n                        var result = self._checkPromises(promises);\r\n                        if (result.failedNodes.length) {\r\n                          self._showDialog(result.failedNodes).then(\r\n                              function (resolveOption, dialog) {\r\n                                dialog.kill();\r\n                                //if any success items are there then show global message\r\n                                if (result.successNodes.length) {\r\n                                  self._showGlobalMessage(result.successNodes.length);\r\n                                }\r\n                              });\r\n\r\n                        } else if (result.successNodes.length) {\r\n                          self._showGlobalMessage(result.successNodes.length);\r\n                        }\r\n                      });\r\n                  self._announceOperationEnd(status);\r\n                  deferred.resolve();\r\n                })\r\n                .fail(function (error) {\r\n                  if (error && !error.cancelled) {\r\n                    self.showError(error);\r\n                  }\r\n                  deferred.reject();\r\n                });\r\n          });\r\n          return deferred.promise();\r\n        },\r\n\r\n        _addToCollection: function (status, options) {\r\n          var self     = this,\r\n              deferred = $.Deferred();\r\n\r\n          require(['csui/dialogs/node.picker/node.picker'],\r\n              function (NodePicker) {\r\n                var pickerOptions = _.extend({\r\n                  selectableTypes: [],\r\n                  showAllTypes: true,\r\n                  orderBy: 'type asc',\r\n                  dialogTitle: lang.collectItemsDialogTitle,\r\n                  selectButtonLabel: lang.selectButtonLabel,\r\n                  globalSearch: true,\r\n                  selectMultiple: true,\r\n                  context: options ? options.context : status.context,\r\n                  startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                    'favorites', 'recent.containers'],\r\n                  resolveShortcuts: true\r\n                }, status);\r\n\r\n                self.nodePicker = new NodePicker(pickerOptions);\r\n\r\n                self.nodePicker\r\n                    .show()\r\n                    .done(function () {\r\n                      deferred.resolve.apply(deferred, arguments);\r\n                    })\r\n                    .fail(function () {\r\n                      deferred.reject.apply(deferred, arguments);\r\n                    });\r\n              }, function (error) {\r\n                deferred.reject(error);\r\n              });\r\n          return deferred.promise();\r\n        },\r\n\r\n        _addSelectedNodesToCollection: function (uploadCollection, connector, targetFolder,\r\n            targetCollection) {\r\n          var self     = this,\r\n              queue    = new TaskQueue({\r\n                parallelism: config.parallelism\r\n              }),\r\n              count    = 0,\r\n              promises = _.map(uploadCollection.models, function (model) {\r\n                var deferred = $.Deferred();\r\n                queue.pending.add({\r\n                  worker: function () {\r\n                    var node     = model.node,\r\n                        node_id  = node.get('id'),\r\n                        targetId = targetFolder.get('id');\r\n                    self._collectNode(connector, targetId, node_id)\r\n                        .done(function () {\r\n                          // self._addToCurrentTable(model, targetCollection);\r\n                          model.set('count', 1);\r\n                          model.deferred.resolve(model);\r\n                          self._addToCurrentTable(model.node, targetCollection, targetId);\r\n                          deferred.resolve(model);\r\n                        })\r\n                        .fail(function (cause) {\r\n                          deferred.resolve(model);\r\n                        });\r\n                    return deferred.promise();\r\n                  }\r\n                });\r\n                count++;\r\n                return deferred.promise(promises);  // return promises\r\n              });\r\n          GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n            oneFileTitle: lang.CollectingOneItem,\r\n            oneFileSuccess: lang.CollectOneItemSuccessMessage,\r\n            multiFileSuccess: lang.CollectManyItemsSuccessMessage,\r\n            oneFilePending: lang.CollectingOneItem,\r\n            multiFilePending: lang.CollectingItems,\r\n            oneFileFailure: lang.CollectOneItemFailMessage,\r\n            multiFileFailure: lang.CollectManyItemsFailMessage2,\r\n            someFileSuccess: lang.CollectManyItemsSuccessMessage,\r\n            someFilePending: lang.CollectingItems,\r\n            someFileFailure: lang.CollectManyItemsFailMessage2,\r\n            enableCancel: false\r\n          });\r\n\r\n          return $.whenAll.apply($, promises);\r\n        },\r\n\r\n        _collectNode: function (connector, targetFolderID, node_id) {\r\n          var deferred = $.Deferred();\r\n          var nodeAttr = {\r\n            \"collection_id\": targetFolderID\r\n          };\r\n\r\n          var collectOptions = {\r\n            url: connector.connection.url.replace('/v1', '/v2') + '/nodes/' + node_id,\r\n            type: 'PUT',\r\n            data: nodeAttr,\r\n            contentType: 'application/x-www-form-urlencoded'\r\n          };\r\n\r\n          connector.makeAjaxCall(collectOptions).done(function (resp) {\r\n            deferred.resolve(resp);\r\n\r\n          }).fail(function (resp) {\r\n            deferred.reject(resp);\r\n          });\r\n          return deferred.promise();\r\n        },\r\n\r\n        _getListView: function (conflictFiles) {\r\n          var retVal = new CollectionConflictView(_.extend({}, {collection: conflictFiles}));\r\n          return retVal;\r\n        },\r\n\r\n        _showDialog: function (conflictFiles) {\r\n          var deferred = $.Deferred(),\r\n              buttons  = [{\r\n                id: 'close',\r\n                label: lang.conflictsDialogCloseLabel,\r\n                toolTip: lang.conflictsDialogCloseLabel,\r\n                click: function (args) {\r\n                  deferred.resolve('close', args.dialog);\r\n                }\r\n              }];\r\n          this._showConflictDialog(conflictFiles, buttons);\r\n          return deferred;\r\n        },\r\n\r\n        _showConflictDialog: function (collection, buttons) {\r\n          var self     = this,\r\n              deferred = $.Deferred();\r\n          require(['csui/controls/dialog/dialog.view'], function (DialogView) {\r\n            var failureMessage = base.formatMessage(collection.length, self.get(\"errorMessages\")),\r\n                dialog         = new DialogView({\r\n                  title: failureMessage,\r\n                  midSize: true,\r\n                  iconLeft: 'csui-icon-notification-information',\r\n                  className: \"csui-collection-conflicts-dialog\",\r\n                  view: self._getListView(collection),\r\n                  buttons: buttons\r\n                });\r\n            dialog.show();\r\n            return dialog;\r\n          });\r\n\r\n        },\r\n\r\n        _checkPromises: function (promises) {\r\n          if (!_.isArray(promises)) {\r\n            promises = [promises];\r\n          }\r\n\r\n          var successPromises = new Backbone.Collection(),\r\n              failedPromises  = new Backbone.Collection();\r\n\r\n          _.each(promises, function (prom) {\r\n            if (prom !== undefined) {\r\n              if (!prom.cancelled) {\r\n                if (prom.get(\"count\") === undefined) {\r\n                  //which is not resolved or rejected\r\n                } else if (prom.get(\"count\")) {\r\n                  successPromises.push(prom);\r\n                }\r\n                else {\r\n                  failedPromises.push(prom);\r\n                }\r\n              }\r\n            }\r\n          });\r\n\r\n          return {\r\n            successNodes: successPromises,\r\n            failedNodes: failedPromises\r\n          };\r\n        },\r\n\r\n        _addToCurrentTable: function (collectItem, targetCollection, targetId) {\r\n          collectItem.isLocallyCreated = true;\r\n          collectItem.refernce_id = targetId;\r\n          collectItem.fetch({collection: targetCollection})\r\n              .then(function () {\r\n                targetCollection.unshift(collectItem);\r\n              });\r\n        },\r\n\r\n        _showGlobalMessage: function (successCount) {\r\n          var successMessage = base.formatMessage(successCount, this.get(\"successMessages\"));\r\n          GlobalMessage.showMessage(\"success\", successMessage);\r\n        },\r\n        _announceOperationStart: function (status) {\r\n          var originatingView = status.originatingView;\r\n          if (originatingView.blockActions) {\r\n            originatingView.blockActions();\r\n          }\r\n          PageLeavingBlocker.enable(this.get('pageLeavingWarning'));\r\n        },\r\n\r\n        _announceOperationEnd: function (status) {\r\n          PageLeavingBlocker.disable();\r\n          var originatingView = status.originatingView;\r\n          if (originatingView.unblockActions) {\r\n            originatingView.unblockActions();\r\n          }\r\n        }\r\n      });\r\n\r\n  return CollectCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/multiple.items',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/utils/base', 'csui/utils/commandhelper', 'csui/utils/command.error'\r\n], function (module, require, _, $, base, CommandHelper, CommandError) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  // Dependencies initialized during execution\r\n  var PageLeavingBlocker;\r\n\r\n  var MultipleItemsCommand = {\r\n\r\n    execute: function (status, options) {\r\n      // avoid messages from handleExecutionResults\r\n      // we use our own evaluation here and show message\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      return this._performActions(status, options);\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self = this,\r\n          promises;\r\n      require(['csui/utils/taskqueue', 'csui/utils/page.leaving.blocker'\r\n      ], function (TaskQueue) {\r\n        PageLeavingBlocker = arguments[1];\r\n        options = options || {};\r\n        if (!options.context) {\r\n          options.context = status.context;\r\n        }\r\n        self._announceStart(status);\r\n        var nodes = CommandHelper.getAtLeastOneNode(status),\r\n            queue = new TaskQueue({\r\n              parallelism: options.parallelism || config.parallelism\r\n            });\r\n\r\n        promises = nodes.map(function (node, index) {\r\n          var deferred = $.Deferred();\r\n          queue.pending.add({\r\n            worker: function () {\r\n              self._performAction(node, options)\r\n                  .done(deferred.resolve)\r\n                  .fail(function(error){\r\n                    deferred.reject(error);\r\n                  });\r\n              return deferred.promise();\r\n            }\r\n          });\r\n          return deferred.promise();\r\n        });\r\n\r\n        // return a promise that has an array with results of original promises\r\n        $.whenAll\r\n            .apply($, promises)\r\n            .always(_.bind(self._announceFinish, self, status))\r\n            .done(function () {\r\n              if(!status.suppressMultipleSuccessMessage) {\r\n                self.showSuccess(promises);\r\n              }\r\n              deferred.resolve.apply(deferred, arguments);      // pass the original arguments to handler, so that events are triggered\r\n            })\r\n            .fail(function () {\r\n              if(!status.suppressMultipleFailMessage) {\r\n                self.showError(promises);\r\n              }\r\n              deferred.reject.apply(deferred, arguments);      // pass the original arguments to handler, so that events are triggered\r\n            });\r\n\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    showError: function(promises) {\r\n      var errorMessage,\r\n          successMessage;\r\n\r\n      var checkResult = this._checkPromises(promises);\r\n      if(checkResult) {\r\n        var countFailed = checkResult.countFailed;\r\n        var countOk = checkResult.countOk;\r\n\r\n        errorMessage = this._getErrorMessage(countFailed);\r\n\r\n        var msg;\r\n        if(countOk > 0) {\r\n          successMessage = this._getSuccessMessage(countOk);\r\n          msg = successMessage + \" \" + errorMessage;\r\n        } else {\r\n          msg = errorMessage;\r\n        }\r\n\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          GlobalMessage.showMessage(\"error\", msg, undefined, {});\r\n        });\r\n      }\r\n    },\r\n\r\n    showSuccess: function(promises) {\r\n      var successMessage;\r\n\r\n      var checkResult = this._checkPromises(promises);\r\n      if (checkResult) {\r\n        var countOk = checkResult.countOk;\r\n\r\n        successMessage = this._getSuccessMessage(countOk);\r\n\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          GlobalMessage.showMessage(\"success\", successMessage, undefined, {});\r\n        });\r\n      }\r\n    },\r\n\r\n    showSuccessWithLink: function(promises, msgOptions) {\r\n      var successMessage;\r\n\r\n      var checkResult = this._checkPromises(promises);\r\n      if (checkResult) {\r\n        var countOk = checkResult.countOk;\r\n\r\n        successMessage = this._getSuccessMessage(countOk);\r\n\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          GlobalMessage.showMessage(\"success_with_link\", successMessage, undefined, msgOptions);\r\n        });\r\n      }\r\n    },\r\n\r\n    // helper\r\n    _getErrorMessage: function(cnt) {\r\n      var emessages = this.get(\"errorMessages\");\r\n      var errorMessage = base.formatMessage(cnt, emessages);\r\n\r\n      return errorMessage;\r\n    },\r\n\r\n    // helper\r\n    _getSuccessMessage: function(cnt) {\r\n      var smessages = this.get(\"successMessages\");\r\n      var successMessage = base.formatMessage(cnt, smessages);\r\n\r\n      return successMessage;\r\n    },\r\n\r\n    // Analyzes the given promises and returns a result object with:\r\n    // {\r\n    //   countOk: okCnt,\r\n    //   countFailed: failedCnt\r\n    // }\r\n    //\r\n    _checkPromises: function(promises) {\r\n      if (!_.isArray(promises)) {\r\n        promises = [promises];\r\n      }\r\n\r\n      var okCnt = 0;\r\n      var failedCnt = 0;\r\n\r\n      // At this point all promises from all commands must either be resolved or rejected.\r\n      _.each(promises, function (prom) {\r\n        if (prom !== undefined) {\r\n          // an error or a node can be cancelled, skip it from counting.\r\n          // pressing \"cancel\" button may result in object with cancelled flag set.\r\n          if (!prom.cancelled) {\r\n            if (prom instanceof CommandError) {\r\n              failedCnt++;\r\n            } else if (typeof prom.state !== 'undefined' && typeof prom.state === 'function') {\r\n              // if state exists, evaluate it\r\n              if (prom.state() && prom.state().toLowerCase() === 'resolved') {\r\n                okCnt++;\r\n              } else {\r\n                failedCnt++;\r\n              }\r\n            } else {\r\n              // some model or anything else\r\n              okCnt++;\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      return {\r\n        countOk: okCnt,\r\n        countFailed: failedCnt\r\n      };\r\n    },\r\n\r\n\r\n    _announceStart: function (status) {\r\n      var originatingView = status.originatingView;\r\n      if (originatingView && originatingView.blockActions) {\r\n        originatingView.blockActions();\r\n      }\r\n      var pageLeavingWarning = this.get('pageLeavingWarning');\r\n      if (pageLeavingWarning) {\r\n        PageLeavingBlocker.enable(pageLeavingWarning);\r\n      }\r\n    },\r\n\r\n    _announceFinish: function (status) {\r\n      if (this.get('pageLeavingWarning')) {\r\n        PageLeavingBlocker.disable();\r\n      }\r\n      var originatingView = status.originatingView;\r\n      if (originatingView && originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  return MultipleItemsCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/confirmable',['csui/lib/underscore', 'csui/lib/jquery',\r\n  'require', 'csui/utils/commands/multiple.items'\r\n], function (_, $, require, MultipleItemsCommand) {\r\n\r\n  var ConfirmableCommand = {\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      return this\r\n          ._confirmAction(status, options)\r\n          .then(function () {\r\n            return self._performActions(status, options);\r\n          }, function(error) {\r\n            return $.Deferred().reject().promise();\r\n          });\r\n    },\r\n\r\n    _confirmAction: function (status, options) {\r\n      var deferred = $.Deferred();\r\n\r\n      if (this._getConfirmTemplate) {\r\n        var data = this._getConfirmData(status, options),\r\n        // FIXME: Use text instead of HTML template\r\n            html = this._getConfirmTemplate(status, options)(data);\r\n        require(['csui/dialogs/modal.alert/modal.alert'], function (alertDialog) {\r\n          alertDialog.confirmQuestion($(html).text(), data.title)\r\n              .done(function (arg) {\r\n                deferred.resolve(arg);\r\n              })\r\n              .fail(function (arg) {\r\n                deferred.reject(arg);\r\n              });\r\n        });\r\n\r\n      }\r\n      else{\r\n        deferred.resolve();\r\n      }\r\n      return deferred.promise();\r\n    }\r\n\r\n  };\r\n\r\n  _.extend(ConfirmableCommand, _.omit(MultipleItemsCommand, 'execute'));\r\n\r\n  return ConfirmableCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/collection/remove.collected.items',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'i18n!csui/utils/commands/collection/nls/lang',\r\n  'csui/utils/commands/confirmable', 'csui/utils/commands/multiple.items',\r\n  'csui/utils/command.error'\r\n], function (module, require, _, $, CommandModel, CommandHelper, lang,\r\n    ConfirmableCommand, MultipleItemsCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 1\r\n  });\r\n\r\n  var GlobalMessage;\r\n\r\n  var RemoveCollectionItemsCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'RemoveCollectedItems',\r\n      command_key: 'removefromcollection',\r\n      name: lang.removefromCollection,\r\n      pageLeavingWarning: lang.DeletePageLeavingWarning,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: lang.RemoveItemsNoneMessage,\r\n        formatForOne: lang.RemoveOneItemSuccessMessage,\r\n        formatForTwo: lang.RemoveSomeItemsSuccessMessage,\r\n        formatForFive: lang.RemoveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.RemoveItemsNoneMessage,\r\n        formatForOne: lang.RemoveOneItemFailMessage,\r\n        formatForTwo: lang.RemoveSomeItemsFailMessage,\r\n        formatForFive: lang.RemoveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    _getConfirmTemplate: function (status, options) {\r\n      return _.template(lang.RemoveCollectItemsCommandConfirmDialogHtml);\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      var msg = (nodes.length === 1 ?\r\n                 _.str.sformat(lang.RemoveCommandConfirmDialogSingleMessage,\r\n                     nodes.at(0).get('name')) :\r\n                 _.str.sformat(lang.RemoveCommandConfirmDialogMultipleMessage,\r\n                     nodes.length) );\r\n      return {\r\n        title: lang.RemoveCommandConfirmDialogTitle,\r\n        message: msg\r\n      };\r\n    },\r\n\r\n    _performAction: function (model, options) {\r\n      var node                = model.node,\r\n          d                   = $.Deferred(),\r\n          nodeAttr            = {\r\n            \"collection_id\": options.container.get(\"id\"),\r\n            \"operation\": \"remove\"\r\n          },\r\n          connector           = options.container.connector,\r\n          containerCollection = options.containerCollection,\r\n\r\n          collectOptions      = {\r\n            url: connector.connection.url.replace('/v1', '/v2') + '/nodes/' + node.get(\"id\"),\r\n            type: 'PUT',\r\n            data: nodeAttr,\r\n            contentType: 'application/x-www-form-urlencoded'\r\n          },\r\n\r\n          jqxhr               = connector.makeAjaxCall(collectOptions).done(function (resp) {\r\n            model.set('count', 1);\r\n            containerCollection.remove(node);\r\n            model.deferred.resolve(model);\r\n            d.resolve(model);\r\n          }).fail(function (error) {\r\n            var commandError = error ? new CommandError(error, model) :\r\n                               error;\r\n            model.deferred.reject(model, commandError);\r\n            if (!error) {\r\n              jqxhr.abort();\r\n            }\r\n            d.reject(commandError);\r\n          });\r\n\r\n      return d.promise();\r\n    },\r\n\r\n    startGlobalMessage: function (uploadCollection) {\r\n      GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: lang.RemovingOneItem,\r\n        oneFileSuccess: lang.RemoveOneItemSuccessMessage,\r\n        multiFileSuccess: lang.RemoveManyItemsSuccessMessage,\r\n        oneFilePending: lang.RemovingOneItem,\r\n        multiFilePending: lang.RemoveItems,\r\n        oneFileFailure: lang.RemoveOneItemFailMessage,\r\n        multiFileFailure: lang.RemoveManyItemsFailMessage2,\r\n        someFileSuccess: lang.RemoveSomeItemsSuccessMessage,\r\n        someFilePending: lang.RemovingSomeItems,\r\n        someFileFailure: lang.RemoveSomeItemsFailMessage2,\r\n        enableCancel: false\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(RemoveCollectionItemsCommand.prototype, ConfirmableCommand, {\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (localGlobalMessage) {\r\n        GlobalMessage = localGlobalMessage;\r\n        self._executeRemoveCollectionItems(status, options)\r\n            .then(deferred.resolve, deferred.reject);\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _executeRemoveCollectionItems: function (status, options) {\r\n      var self = this;\r\n      options || (options = {});\r\n      var nodes       = CommandHelper.getAtLeastOneNode(status),\r\n          node        = nodes.length === 1 && nodes.first(),\r\n          deferred    = $.Deferred(),\r\n          commandData = status.data || {},\r\n          context     = status.context || options.context;\r\n\r\n      options.parallelism || (options.parallelism = config.parallelism);\r\n\r\n      var showProgressDialog = commandData.showProgressDialog != null ?\r\n                               commandData.showProgressDialog : true;\r\n\r\n      ConfirmableCommand.execute.apply(this, arguments)\r\n          .done(function (results) {\r\n            if (showProgressDialog) {\r\n              GlobalMessage.hideFileUploadProgress();\r\n            }\r\n            // For mobile we refresh last page in order to retrieve pushed\r\n            // up items after a delete.\r\n            if (options.infiniteScroll) {\r\n              status.collection.fetch({\r\n                reset: false,\r\n                remove: false,\r\n                merge: true\r\n              });\r\n            }\r\n            //to refetch collection in table View\r\n            self.allowCollectionRefetch = true;\r\n            deferred.resolve(results);\r\n          })\r\n          .fail(function (args) {\r\n            //only return a result if there is at least one successful delete.\r\n            //This way the waiting CommandHelper in the tabletoolbar.view will trigger\r\n            //an execute complete event.\r\n            var oneSuccess = args && _.find(args, function (result) {\r\n                  return !(result instanceof CommandError);\r\n                });\r\n            var rejectResults = oneSuccess ? oneSuccess : args;\r\n            deferred.reject(rejectResults);\r\n          });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      options || (options = {});\r\n      var self               = this,\r\n          deferred           = $.Deferred(),\r\n          commandData        = status.data || {},\r\n          showProgressDialog = commandData.showProgressDialog != null ?\r\n                               commandData.showProgressDialog : true;\r\n\r\n      options.container || (options.container = status.container);\r\n      options.containerCollection = status.collection;\r\n      require(['csui/models/fileuploads'\r\n      ], function (UploadFileCollection) {\r\n        var models = status.nodes.models;\r\n        var nodes = _.map(models, function (node) {\r\n          return {\r\n            name: node.get('name'),\r\n            state: 'pending',\r\n            count: 0,\r\n            total: 1,\r\n            node: node\r\n          };\r\n        });\r\n        var connector = models && models[0] && models[0].connector;\r\n        var uploadCollection = new UploadFileCollection(nodes, {connector: connector});\r\n        var newStatus = _.defaults({nodes: uploadCollection}, status);\r\n        uploadCollection.each(function (fileUpload) {\r\n          // Replace the new node in the file upload model with the existing\r\n          // one to be able to destroy it; sync and destroy events will be\r\n          // triggered on it and the parent collection and view will see them.\r\n          var node = fileUpload.get('node');\r\n          fileUpload.node = node;\r\n          fileUpload.unset('node');\r\n          fileUpload.set('mime_type', node.get('mime_type'));\r\n\r\n        });\r\n\r\n        if (showProgressDialog) {\r\n          self.startGlobalMessage(uploadCollection);\r\n        }\r\n\r\n        // do not display our result messages in _performActions\r\n        newStatus.suppressMultipleSuccessMessage = true;\r\n        newStatus.suppressMultipleFailMessage = true;\r\n\r\n        MultipleItemsCommand._performActions.call(self, newStatus, options)\r\n            .done(function (results) {\r\n              if (showProgressDialog) {\r\n                GlobalMessage.hideFileUploadProgress();\r\n              }\r\n              self.showSuccess(results);\r\n              deferred.resolve(results);\r\n            })\r\n            .fail(function (errors) {\r\n              if (!showProgressDialog) {\r\n                self.showError(errors);\r\n              }\r\n              return deferred.reject(errors);\r\n            });\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return RemoveCollectionItemsCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/copy',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/utils/command.error', 'csui/utils/commands/multiple.items'\r\n], function (module, require, _, $, lang, log, CommandModel,\r\n    CommandHelper, CommandError, MultipleItemsCommand) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ConflictResolver, TaskQueue,\r\n      ApplyPropertiesSelectorView, UploadFileCollection, PageLeavingBlocker,\r\n      NextNodeModelFactory, nodeLinks;\r\n\r\n  var CopyCommandParent = CommandModel.extend({});                // create helper parent\r\n  _.extend(CopyCommandParent.prototype, MultipleItemsCommand);    // apply needed mixin\r\n\r\n  var CopyCommand = CopyCommandParent.extend({\r\n    defaults: {\r\n      signature: \"Copy\",\r\n      command_key: ['copy', 'Copy'],\r\n      name: lang.CommandNameCopy,\r\n      verb: lang.CommandVerbCopy,\r\n      pageLeavingWarning: lang.CopyPageLeavingWarning,\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForNone: lang.CopyItemsNoneMessage,\r\n        formatForOne: lang.CopyOneItemSuccessMessage,\r\n        formatForTwo: lang.CopySomeItemsSuccessMessage,\r\n        formatForFive: lang.CopyManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.CopyItemsNoneMessage,\r\n        formatForOne: lang.CopyOneItemFailMessage,\r\n        formatForTwo: lang.CopySomeItemsFailMessage,\r\n        formatForFive: lang.CopyManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressSuccessMessage = true;\r\n      status.suppressFailMessage = true;\r\n\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/controls/conflict.resolver/conflict.resolver',\r\n        'csui/utils/taskqueue',\r\n        'csui/dialogs/node.picker/impl/header/apply.properties.selector/apply.properties.selector.view',\r\n        'csui/models/fileuploads', 'csui/utils/page.leaving.blocker',\r\n        'csui/utils/contexts/factories/next.node', 'csui/utils/node.links/node.links'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        ConflictResolver = arguments[1];\r\n        TaskQueue = arguments[2];\r\n        ApplyPropertiesSelectorView = arguments[3];\r\n        UploadFileCollection = arguments[4];\r\n        PageLeavingBlocker = arguments[5];\r\n        NextNodeModelFactory = arguments[6];\r\n        nodeLinks = arguments[7];\r\n\r\n        self._selectCopyOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedNodes = status.nodes;\r\n              var targetFolder = selectedOptions.nodes[0];\r\n              var openMetadata = selectedOptions.openSelectedProperties;\r\n              var applyProperties = selectedOptions.applyProperties;\r\n\r\n              // note: in some scenarios such as expanded tile, the status.container is undefined\r\n              var copyToCurrentFolder = status.container ?\r\n                                        (targetFolder.get('id') === status.container.get('id')) :\r\n                                        false;\r\n\r\n              self._announceOperationStart(status);\r\n\r\n              var namesToResolve = selectedNodes.map(function (node) {\r\n                var returnObj = {\r\n                  id: node.get('id'),\r\n                  name: node.get('name'),\r\n                  container: node.get('container'),\r\n                  mime_type: node.get('mime_type'),\r\n                  original_id: node.get('original_id'),\r\n                  original: node.original,\r\n                  type: node.get('type'),\r\n                  size: node.get('size'),\r\n                  type_name: node.get('type_name'),\r\n                  state: 'pending',\r\n                  count: 0,\r\n                  total: 1,\r\n                  enableCancel: false\r\n                };\r\n                var type = node.get('type');\r\n                if (type === 144 || type === 749 || type === 736 || type === 30309) {\r\n                  returnObj.size_formatted = node.get('size_formatted');\r\n                } else if (type === 140) {\r\n                  returnObj.url = node.get('url');\r\n                }\r\n                returnObj.actions = node.actions;\r\n                return returnObj;\r\n              });\r\n              var copyNamesToResolve = _.map(namesToResolve, function (name) {\r\n                return _.clone(name);\r\n              });\r\n              self._resolveNamingConflicts(targetFolder, copyNamesToResolve)\r\n                  .done(function (copyInstructions) {\r\n\r\n                    _.each(copyInstructions, function (instruction) {\r\n                      if (instruction.id === undefined) {\r\n                        instruction.id = _.findWhere(namesToResolve,\r\n                            {name: instruction.name}).id;\r\n                      }\r\n                    });\r\n\r\n                    self._metadataHandling(copyInstructions, _.extend(selectedOptions, {context: context, targetFolder: targetFolder}))\r\n                        .done(function () {\r\n                          // TODO: Make the progressbar a reusable component; do not\r\n                          // misuse the file-upload-progressbar for other scenarios.\r\n                          // TODO: Handle this in the multi-item command to be consistent\r\n                          // with other commands; do not override the delete command only.\r\n                          var uploadCollection = new UploadFileCollection(copyInstructions);\r\n                          // Replace the new node in the file upload model with the existing\r\n                          // one to be able to destroy it; sync and destroy events will be\r\n                          // triggered on it and the parent collection and view will see them.\r\n                          uploadCollection.each(function (model) {\r\n                            var sourceNode = selectedNodes.findWhere({\r\n                              id: model.get('id')\r\n                            });\r\n                            model.node.set(_.omit(sourceNode.attributes, 'id'));\r\n                          });\r\n\r\n                          // note: in some scenarios such as expanded tile, the status.container is undefined\r\n                          var connector = status.container && status.container.connector;\r\n                          if (connector === undefined) {\r\n                            var aNode = CommandHelper.getAtLeastOneNode(status).first();\r\n                            aNode && (connector = aNode.connector);\r\n                          }\r\n\r\n                          self._copySelectedNodes(uploadCollection, connector,\r\n                              targetFolder, applyProperties, copyToCurrentFolder, status.collection)\r\n                              .done(function (promises) {\r\n                                GlobalMessage.hideFileUploadProgress();\r\n                                if (promises.length) {\r\n                                  // display result message\r\n                                  var msgOptions = {\r\n                                    context: context,\r\n                                    nextNodeModelFactory: NextNodeModelFactory,\r\n                                    link_url: nodeLinks.getUrl(targetFolder),\r\n                                    targetFolder: targetFolder\r\n                                  };\r\n                                  self.showSuccessWithLink(promises, msgOptions);\r\n                                }\r\n                                // return success wo parameter\r\n                                deferred.resolve();\r\n                              })\r\n                              .always(function (promises) {\r\n                                self._announceOperationEnd(status, copyToCurrentFolder);\r\n                              })\r\n                              .fail(function (copyResults) {\r\n                                // Returning nothing prevents the common error message\r\n                                // from being shown.\r\n                                deferred.reject();\r\n                              });\r\n\r\n                        })\r\n                        .fail( function (error) {\r\n                          self._announceOperationEnd(status, copyToCurrentFolder);\r\n\r\n                          deferred.reject();\r\n                        });\r\n\r\n                  })\r\n                  .fail(function (error) {\r\n                    // resolve namingConflicts\r\n                    if (error && error.userAction && error.userAction ===\r\n                        \"cancelResolveNamingConflicts\") {\r\n                      self.trigger(\"resolve:naming:conflicts:cancelled\");\r\n                    }\r\n                    else if (error && !error.cancelled) {  // if not undefined (cancel) then display error\r\n                      self.showError(error);\r\n                    }\r\n                    self._announceOperationEnd(status, copyToCurrentFolder);\r\n                    deferred.reject();\r\n                  });\r\n            })\r\n            .fail(function (error) {\r\n              if(error && !error.cancelled) {                                   // if not undefined (cancel) then display error\r\n                self.showError(error);\r\n              }\r\n              deferred.reject();\r\n            });\r\n\r\n      }, deferred.reject);          // require\r\n\r\n      return deferred.promise();    // return empty promise!\r\n    },\r\n\r\n    _announceOperationStart: function (status) {\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.blockActions) {\r\n        originatingView.blockActions();\r\n      }\r\n      PageLeavingBlocker.enable(this.get('pageLeavingWarning'));\r\n    },\r\n\r\n    _announceOperationEnd: function (status, copyToCurrentFolder) {\r\n      PageLeavingBlocker.disable();\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n    },\r\n\r\n    _selectCopyOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n          function (NodePicker) {\r\n            //account for a copy command coming from a folders context menu.\r\n            // note: in some scenarios such as expanded tile, the status.container is undefined\r\n            var contextMenuCopy = status.container ?\r\n                                  (status.container.get('id') ===\r\n                                   status.nodes.models[0].get('id')) : false;\r\n            var numNodes = status.nodes.length;\r\n            var dialogTitle = _.str.sformat(numNodes > 1 ? lang.DialogTitleCopy : lang.DialogTitleSingleCopy, numNodes);\r\n            var pickerOptions = _.extend({\r\n              command: 'copy',\r\n              selectableTypes: [-1],\r\n              unselectableTypes: [899],\r\n              showAllTypes: true,\r\n              orderBy: 'type asc',\r\n              dialogTitle: dialogTitle,\r\n              initialContainer: status.container || status.nodes.models[0].parent,\r\n              initialSelection: status.nodes,\r\n              startLocation: contextMenuCopy ? 'recent.containers' : '',\r\n              includeCombineProperties: (numNodes === 1),\r\n              propertiesSeletor: true,\r\n              globalSearch: true,\r\n              context: options ? options.context : status.context,\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true\r\n            }, status);\r\n\r\n            self.nodePicker = new NodePicker(pickerOptions);\r\n\r\n            self.nodePicker\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                })\r\n                .fail(function () {\r\n                  deferred.reject.apply(deferred, arguments);\r\n                });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _resolveNamingConflicts: function (targetFolder, nodeNames) {\r\n      var h1 =  (nodeNames.length === 1) ? lang.CopyingNode : _.str.sformat( lang.CopyingNodes, nodeNames.length );\r\n      var conflictResolver = new ConflictResolver({\r\n        h1Label: h1,\r\n        actionBtnLabel: lang.CommandNameCopy,\r\n        excludeAddVersion: true,\r\n        container: targetFolder,\r\n        files: nodeNames\r\n      });\r\n      return conflictResolver.run();\r\n    },\r\n\r\n    _metadataHandling: function (items, options) {\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/widgets/metadata/metadata.copy.move.items.controller'\r\n      ], function (MetadataCopyMoveItemsController) {\r\n        var openMetadata = options.openSelectedProperties;\r\n        var applyProperties = options.applyProperties;\r\n        var metadataController = new MetadataCopyMoveItemsController();\r\n        var controllerFunction;\r\n\r\n        // open the metadata view\r\n        if (openMetadata) {\r\n          controllerFunction = metadataController.CopyMoveItemsWithMetadata;\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES ||\r\n                   applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES) {\r\n          // check for required metadata\r\n          controllerFunction = metadataController.CopyMoveItemsRequiredMetadata;\r\n        } else {\r\n          return deferred.resolve();\r\n        }\r\n\r\n        if (applyProperties === ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES) {\r\n          options.inheritance = 'original';\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES) {\r\n          options.inheritance = 'destination';\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES) {\r\n          options.inheritance = 'merged';\r\n        }\r\n\r\n        options.action = 'copy';\r\n        controllerFunction.call(metadataController, items, options)\r\n            .done(function () {\r\n              deferred.resolve();\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n\r\n      }, function (error) {\r\n        log.warn('Failed to load MetadataCopyMoveItemsController. {0}', error)\r\n        && console.warn(log.last);\r\n        deferred.reject(error);\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _copySelectedNodes: function (uploadCollection, connector, targetFolder, applyProperties,\r\n        copyToCurrentFolder, targetCollection) {\r\n      var self     = this,\r\n          queue    = new TaskQueue({\r\n            parallelism: config.parallelism\r\n          }),\r\n          promises = _.map(uploadCollection.models, function (model) {\r\n            var deferred = $.Deferred();\r\n            queue.pending.add({\r\n              worker: function () {\r\n                var attributes = model.attributes,\r\n                    targetId   = targetFolder.get('id');\r\n\r\n                self._getCategories(attributes, connector, targetId, applyProperties)\r\n                    .done(function (categories) {\r\n                      self._copyNode(categories, attributes, connector, targetId, model.node)\r\n                          .done(function () {\r\n                            model.set('count', 1);\r\n                            model.deferred.resolve(model);\r\n                            copyToCurrentFolder &&\r\n                            self._addToCurrentTable(model.node, targetCollection);\r\n                            deferred.resolve(attributes);\r\n                          })\r\n                          .fail(function (cause) {\r\n                            var errMsg = new CommandError(cause);\r\n                            model.deferred.reject(model, errMsg);\r\n                            deferred.reject(errMsg);\r\n                          });\r\n                    })\r\n                    .fail(function (cause) {\r\n                      var errMsg = new CommandError(cause);\r\n                      model.deferred.reject(model, errMsg);\r\n                      deferred.reject(errMsg);\r\n                    });\r\n                return deferred.promise();\r\n              }\r\n            });\r\n            return deferred.promise(promises);      // return promises\r\n          });\r\n      GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: lang.CopyingOneItem,\r\n        oneFileSuccess: lang.CopyOneItemSuccessMessage,\r\n        multiFileSuccess: lang.CopyManyItemsSuccessMessage,\r\n        oneFilePending: lang.CopyingOneItem,\r\n        multiFilePending: lang.CopyItems,\r\n        oneFileFailure: lang.CopyOneItemFailMessage,\r\n        multiFileFailure: lang.CopyManyItemsFailMessage2,\r\n        someFileSuccess: lang.CopySomeItemsSuccessMessage,\r\n        someFilePending: lang.CopySomeItems,\r\n        someFileFailure: lang.CopySomeItemsFailMessage2,\r\n        enableCancel: false\r\n      });\r\n\r\n      return $.whenAll.apply($, promises);\r\n    },\r\n\r\n    _addToCurrentTable: function (node, targetCollection) {\r\n      node.isLocallyCreated = true;\r\n      node.fetch({collection: targetCollection})\r\n          .then(function () {\r\n            targetCollection.unshift(node);\r\n          });\r\n    },\r\n\r\n    _copyNode: function (categories, instruction, connector, targetFolderID, node) {\r\n      var nodeAttr = {\r\n        \"original_id\": instruction.id,\r\n        \"parent_id\": targetFolderID,\r\n        \"name\": instruction.newName ? instruction.newName : instruction.name,\r\n        \"roles\": categories\r\n      };\r\n\r\n      // FileUploadModel should be created with a container or connector\r\n      // to make its node cloneable.  But if not needed, use the default\r\n      // container of the upload controller to provide the connector.\r\n      if (!node.connector) {\r\n        connector.assignTo(node);\r\n      }\r\n\r\n      return node.save(undefined, {\r\n        data: nodeAttr,\r\n        url: connector.connection.url + '/nodes'\r\n      });\r\n    },\r\n\r\n    _getCategories: function (attributes, connector, targetFolderID, applyProperties) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n      if (attributes.extended_data && attributes.extended_data.roles) {\r\n        deferred.resolve(attributes.extended_data.roles);\r\n      }\r\n      else {\r\n        var getCategoriesOptions = {\r\n          url: connector.connection.url + '/forms/nodes/copy?' +\r\n              $.param({\r\n                id: attributes.id,\r\n                parent_id: targetFolderID\r\n              })\r\n        };\r\n\r\n        connector.makeAjaxCall(getCategoriesOptions)\r\n            .then(function (response, statusText, jqxhr) {\r\n              var form = response.forms[1],\r\n                  data = form && form.data || {};\r\n              var categoryGroupMapping;\r\n              categoryGroupMapping = {};\r\n              categoryGroupMapping[ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES] = 'original';\r\n              categoryGroupMapping[ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES] = 'destination';\r\n              categoryGroupMapping[ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES] = 'merged';\r\n              var categories = data[categoryGroupMapping[applyProperties]];\r\n              deferred.resolve({\"categories\": categories});\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n      }\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return CopyCommand;\r\n});\r\n\n","csui.define('csui/utils/routing',['module', 'csui/lib/underscore'\r\n], function (module, _) {\r\n  'use strict';\r\n\r\n  var developmentPage = module.config().developmentPage;\r\n  // TODO: Deprecate and remove configurability for the two muodules.\r\n  readOldSettings('csui/pages/start/perspective.routing');\r\n  readOldSettings('csui/pages/start/impl/perspective.router');\r\n\r\n  function readOldSettings(moduleName) {\r\n    if (developmentPage === undefined) {\r\n      var oldConfig = window.csui.requirejs.s.contexts._.config\r\n        .config[moduleName] || {};\r\n      developmentPage = oldConfig.developmentPage;\r\n    }\r\n  }\r\n\r\n  return {\r\n    routesWithSlashes: function () {\r\n      // Append the client application paths to the \"server\" page path, when\r\n      // we run on the server; append the client application paths in back of\r\n      // the hash, when we run on a development HTML page\r\n      return /\\/app(?:\\/.*)?$/.test(location.pathname) || !developmentPage;\r\n    }  \r\n  };\r\n});\r\n\n","\n","csui.define('csui/utils/node.links/node.links',[\r\n  'csui/lib/underscore', 'csui/lib/backbone', 'csui/utils/url',\r\n  'csui/models/mixins/rules.matching/rules.matching.mixin',\r\n  'csui/utils/routing',\r\n  // Load and register external node link rules\r\n  'csui-ext!csui/utils/node.links/node.links'\r\n], function (_, Backbone, Url, RulesMatchingMixin, routing, rules) {\r\n  'use strict';\r\n\r\n  var routesWithSlashes = routing.routesWithSlashes();\r\n\r\n  var NodeLinkModel = Backbone.Model.extend({\r\n    defaults: {\r\n      sequence: 100,\r\n      url: null\r\n    },\r\n\r\n    constructor: function NodeLinkModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n      this.makeRulesMatching(options);\r\n    }\r\n  });\r\n\r\n  RulesMatchingMixin.mixin(NodeLinkModel.prototype);\r\n\r\n  var NodeLinkCollection = Backbone.Collection.extend({\r\n    model: NodeLinkModel,\r\n    comparator: 'sequence',\r\n\r\n    constructor: function NodeLinkCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.call(this, models, options);\r\n    },\r\n\r\n    getUrl: function (node) {\r\n      // Make the URLs point to the original node, if the current node is\r\n      // a shortcut; leave generation point to itself for now, until\r\n      // we support it properly\r\n      var type = node.get('type');\r\n      if (type === 1 && node.original && node.original.get('id') > 0) {\r\n        node = node.original;\r\n      }\r\n      var rule = this.find(function (item) {\r\n        return item.matchRules(node, item.attributes);\r\n      });\r\n      if (rule) {\r\n        var url = rule.get('getUrl')(node);\r\n        return this.completeUrl(node, url);\r\n      }\r\n    },\r\n\r\n    completeUrl: function (node, url) {\r\n      var serverUrl = new Url(node.connector && node.connector.connection.url ||\r\n                              location.href);\r\n      if (!url) {\r\n        url = location.href;\r\n      } else if (url.charAt(0) === '/') {\r\n        if (url.charAt(1) === '/') {\r\n          url = serverUrl.getProtocol() + ':' + url;\r\n        } else {\r\n          url = Url.combine(serverUrl.getOrigin(), url);\r\n        }\r\n      } else if (url.match(/^\\?func=[a-z0-9]/i)) {\r\n        url = serverUrl.getCgiScript() + url;\r\n        node.attributes.absoluteUrl = url;\r\n      } else if (url.indexOf('//') < 0) {\r\n        url = this._getApplicationUrlPrefix(serverUrl) + url;\r\n      }\r\n      return url;\r\n    },\r\n\r\n    _getApplicationUrlPrefix: function (serverUrl) {\r\n      // Application URLs start after '#' on the development pages, while\r\n      // on the actual server they are merged with the main access point\r\n      var applicationUrlPrefix;\r\n      if (routesWithSlashes) {\r\n        applicationUrlPrefix = Url.combine(serverUrl.getCgiScript(), '/app/');\r\n      } else {\r\n        applicationUrlPrefix = location.origin + location.pathname +\r\n                               location.search + '#';\r\n      }\r\n      return applicationUrlPrefix;\r\n    }\r\n  });\r\n\r\n  var nodeLinks = new NodeLinkCollection();\r\n\r\n  if (rules) {\r\n    nodeLinks.add(_.flatten(rules, true));\r\n  }\r\n\r\n  return nodeLinks;\r\n});\r\n\n","csui.define('csui/utils/commands/copy.link',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command','csui/utils/commandhelper',\r\n  'csui/utils/node.links/node.links',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel,\r\n    CommandHelper, NodeLinks, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var CopyLinkCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'CopyLink',\r\n      name: lang.CommandNameCopyLink\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return !!node;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          node     = CommandHelper.getJustOneNode(status),\r\n          nodeLink = status.url ? NodeLinks.completeUrl(node, status.url) : NodeLinks.getUrl(node),\r\n          success  = this._copyToClipboard(nodeLink);\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (GlobalMessage) {\r\n        if (success) {\r\n          deferred.resolve();\r\n          GlobalMessage.showMessage('success', lang.CopyLinkSuccessMessage);\r\n        } else {\r\n          deferred.reject();\r\n          GlobalMessage.showMessage('error', lang.CopyLinkFailMessage);\r\n        }\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _copyToClipboard: function (nodeLink) {\r\n      if (window.clipboardData) { /*Workaround for IE*/\r\n        window.clipboardData.setData('Text', nodeLink);\r\n        return true;\r\n      } else {\r\n        /* Create a fake text node in body, select it by creating a range, trigger copy command,\r\n         remove fake text node*/\r\n        var success  = false,\r\n            element  = document.createTextNode(nodeLink),\r\n            elParent = document.createElement('span');\r\n        //Set styles for span, so that text node doesn't use widget styles\r\n        elParent.style.color = 'black';\r\n        elParent.style.background = 'tranparent';\r\n        elParent.style.backgroundColor = 'white';\r\n\r\n        elParent.appendChild(element);\r\n        document.body.appendChild(elParent);\r\n        if (window.getSelection) { // moz, opera, webkit, ie11\r\n          var selection = window.getSelection();\r\n          selection.removeAllRanges();\r\n          var range = document.createRange();\r\n          range.selectNodeContents(element);\r\n          selection.addRange(range);\r\n          success = document.execCommand(\"copy\");\r\n          selection.removeAllRanges();\r\n        }\r\n        document.body.removeChild(elParent);\r\n        return success;\r\n      }\r\n    }\r\n  });\r\n\r\n  return CopyLinkCommand;\r\n});\r\n\n","//TODO Check if this should be moved to pman \r\ncsui.define('csui/models/perspective/perspective.model',[\"module\", 'csui/lib/underscore', \"csui/lib/backbone\",\r\n  'csui/models/mixins/uploadable/uploadable.mixin',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  \"csui/utils/log\", \"csui/utils/base\", 'csui/utils/url'\r\n], function (module, _, Backbone, UploadableMixin, ConnectableMixin, log,\r\n    base, Url) {\r\n  \"use strict\";\r\n\r\n  var config = _.extend({\r\n    idAttribute: null\r\n  }, module.config());\r\n\r\n  var PerspectiveModel = Backbone.Model.extend({\r\n    idAttribute: config.idAttribute,\r\n\r\n    constructor: function PerspectiveModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n      this.options = _.pick(options, ['connector']);\r\n      this.makeUploadable(options)\r\n          .makeConnectable(options);\r\n    },\r\n\r\n    isNew: function () {\r\n      return !this.get('id') || this.get('id') === 0;\r\n    },\r\n\r\n    urlBase: function () {\r\n      var id  = this.get('id'),\r\n          url = this.connector.connection.url;\r\n      if (!id) {\r\n        // Create a new node by POST /perspectives\r\n        url = Url.combine(url, 'perspectives');\r\n      } else if (!_.isNumber(id) || id > 0) {\r\n        // Access an existing node by VERB /perspectives/:id\r\n        url = Url.combine(url, 'perspectives', id);\r\n      } else {\r\n        throw new Error('Unsupported id value');\r\n      }\r\n      return url;\r\n    },\r\n\r\n    url: function () {\r\n      var url = this.urlBase();\r\n      return url;\r\n    },\r\n\r\n    prepareFormData: function (data, options) {\r\n      return {pData: JSON.stringify(data)};\r\n    }\r\n  });\r\n\r\n  UploadableMixin.mixin(PerspectiveModel.prototype);\r\n  ConnectableMixin.mixin(PerspectiveModel.prototype);\r\n\r\n  return PerspectiveModel;\r\n\r\n});\n","csui.define('csui/utils/commands/create.perspective',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'csui/models/perspective/perspective.model',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel, CommandHelper,\r\n    Url, PerspectiveModel, lang) {\r\n  'use strict';\r\n\r\n  var config = window.csui.requirejs.s.contexts._.config\r\n                   .config['csui/utils/contexts/perspective'] || {};\r\n  config = _.extend({\r\n    enableInlinePerspectiveEditing: true\r\n  }, config, module.config());\r\n\r\n  var ConnectorFactory, NodeModelFactory, AncestorCollectionFactory;\r\n\r\n  var CreatePerspectiveCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'CreatePerspective',\r\n      name: lang.CreatePerspective\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var context    = status.context || options && options.context,\r\n          attributes = context.perspective.attributes;\r\n      if (attributes.id === undefined && attributes.canEditPerspective &&\r\n          context._applicationScope.attributes.id === \"node\") {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var context         = status.context || options && options.context,\r\n          isInlineEditing = (options && options.inlinePerspectiveEditing) ||\r\n                            config.enableInlinePerspectiveEditing;\r\n      if (isInlineEditing) {\r\n        // Edit perspective of page inline in SmartUI\r\n        return this._editInline(status, options, context);\r\n      } else {\r\n        // Navigate to class Perspective Management console\r\n        return this._editInClassicPMan(status, options, context);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Prepare new perspective config required for current node since no perspective is configured yet.\r\n     */\r\n    _preparePerspectiveConfig: function (context) {\r\n      var perspectiveConfig = {\r\n            \"perspective\": {\r\n              \"type\": \"flow\",\r\n              \"options\": {\r\n                \"widgets\": [\r\n                  {\r\n                    \"type\": \"csui/widgets/nodestable\"\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"overrideType\": \"genericContainer\",\r\n            \"scope\": \"local\",\r\n            \"containerType\": \"-1\",\r\n            \"cascading\": \"false\"\r\n          },\r\n          node              = CommandHelper.getJustOneNode(status) ||\r\n                              context.getModel(NodeModelFactory),\r\n          collection        = context.getCollection(AncestorCollectionFactory);\r\n      perspectiveConfig.nodepath = this._getNodePath(collection);\r\n      perspectiveConfig.node = node.get('id');\r\n      perspectiveConfig.containerType = node.get('type');\r\n      perspectiveConfig.title = node.get('name');\r\n      return perspectiveConfig;\r\n    },\r\n\r\n    _editInline: function (status, options, context) {\r\n      var deferred = $.Deferred(), self = this;\r\n      require(['csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/ancestors',\r\n        'csui/perspective.manage/pman.view'\r\n      ], function () {\r\n        NodeModelFactory = arguments[0];\r\n        ConnectorFactory = arguments[1];\r\n        AncestorCollectionFactory = arguments[2];\r\n        var PManView          = arguments[3],\r\n            // Create new perspective\r\n            perspectiveConfig = self._preparePerspectiveConfig(context, NodeModelFactory,\r\n                AncestorCollectionFactory);\r\n        // Append current timestamp to avoid name conflicts in perspective volume\r\n        perspectiveConfig.title = perspectiveConfig.title + ' ' + new Date().getTime();\r\n        var perspective = new PerspectiveModel(perspectiveConfig,\r\n            {connector: context.getObject(ConnectorFactory)});\r\n        var pmanView = new PManView({\r\n          context: context,\r\n          perspective: perspective\r\n        });\r\n        pmanView.show();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _editInClassicPMan: function (status, options, context) {\r\n      var deferred = $.Deferred(), self = this;\r\n      require(['csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/ancestors'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        NodeModelFactory = arguments[1];\r\n        AncestorCollectionFactory = arguments[2];\r\n        var f = self._getForm(context, status);\r\n        f.submit();\r\n        f.remove();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getForm: function (context, status) {\r\n      var f = $(\"<form target='_blank' method='POST' style='display:none;'></form>\").attr({\r\n        action: this._getUrl(context, status)\r\n      }).appendTo(document.body);\r\n\r\n      var params = this._getUrlQueryParameters(context, status);\r\n\r\n      for (var i in params) {\r\n        if (params.hasOwnProperty(i)) {\r\n          $('<input type=\"hidden\" />').attr({\r\n            name: i,\r\n            value: params[i]\r\n          }).appendTo(f);\r\n        }\r\n      }\r\n\r\n      return f;\r\n    },\r\n\r\n    _getUrl: function (context, status) {\r\n      var connector      = context.getObject(ConnectorFactory),\r\n          cgiUrl         = new Url(connector.connection.url).getCgiScript(),\r\n          perspectiveUrl = cgiUrl.toString() + \"/perspectivemgr\";\r\n\r\n      return perspectiveUrl;\r\n    },\r\n\r\n    _getUrlQueryParameters: function (context, status) {\r\n      var perspectiveConfig = this._preparePerspectiveConfig(context, NodeModelFactory,\r\n          AncestorCollectionFactory);\r\n      perspectiveConfig.ui = {\r\n        \"elements\": {\r\n          \"btn-mode-code\": true,\r\n          \"btn-view-general\": true,\r\n          \"btn-view-rules\": false,\r\n          \"btn-view-layout\": true,\r\n          \"btn-view-widgets\": true,\r\n\r\n          \"view-perspective-action\": true,\r\n          \"perspective-action-create\": true,\r\n          \"perspective-action-edit\": true,\r\n          \"perspective-action-copy\": true,\r\n\r\n          \"view-perspective-form\": true,\r\n          \"perspective-title\": true,\r\n          \"perspective-type\": true,\r\n          \"perspective-scope\": true,\r\n          \"perspective-nodetypes\": true,\r\n          \"perspective-node\": true,\r\n          \"perspective-cascading\": true,\r\n\r\n          \"display-size-msg\": false,\r\n          \"rules-code\": true,\r\n\r\n          \"layout-flow\": true,\r\n          \"layout-left-center-right\": true,\r\n          \"layout-grid\": false,\r\n          \"layout-tabbed\": false\r\n        },\r\n        \"widgetGroupsBlacklist\": [],\r\n        \"widgetsWhitelist\": [],\r\n        \"disableGrouping\": false\r\n      };\r\n      return {\r\n        config: JSON.stringify(perspectiveConfig)\r\n      };\r\n    },\r\n\r\n    _getNodePath: function (collection) {\r\n      var nodepath = \"\";\r\n      collection.each(function (model) {\r\n        nodepath += nodepath ? ':' : '';\r\n        nodepath += model.get('name');\r\n      });\r\n      return nodepath;\r\n    }\r\n\r\n  });\r\n\r\n  return CreatePerspectiveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/node',['csui/lib/underscore', 'csui/models/command',\r\n  'csui/utils/commands/multiple.items'\r\n], function (_, CommandModel, MultipleItemsCommand) {\r\n\r\n  var NodeCommand = CommandModel.extend({\r\n\r\n    _performAction: function (node, options) {\r\n      throw new Error('Method not implemented in the descendant command.');\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(NodeCommand.prototype, MultipleItemsCommand);\r\n\r\n  return NodeCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/delete',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/log', 'csui/utils/commandhelper', 'csui/utils/commands/node',\r\n  'csui/utils/commands/multiple.items', 'csui/utils/commands/confirmable',\r\n  'csui/utils/command.error'\r\n], function (module, require, _, $, lang, log, CommandHelper, NodeCommand,\r\n    MultipleItemsCommand, ConfirmableCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 1\r\n  });\r\n\r\n  var UploadFileCollection, NextNodeModelFactory, GlobalMessage;\r\n\r\n  var DeleteCommand = NodeCommand.extend({\r\n    defaults: {\r\n      signature: 'Delete',\r\n      command_key: ['delete', 'Delete'],\r\n      name: lang.CommandNameDelete,\r\n      verb: lang.CommandVerbDelete,\r\n      pageLeavingWarning: lang.DeletePageLeavingWarning,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: lang.DeleteItemsNoneMessage,\r\n        formatForOne: lang.DeleteOneItemSuccessMessage,\r\n        formatForTwo: lang.DeleteSomeItemsSuccessMessage,\r\n        formatForFive: lang.DeleteManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.DeleteItemsNoneMessage,\r\n        formatForOne: lang.DeleteOneItemFailMessage,\r\n        formatForTwo: lang.DeleteSomeItemsFailMessage,\r\n        formatForFive: lang.DeleteManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    _getConfirmTemplate: function (status, options) {\r\n      return _.template(lang.DeleteCommandConfirmDialogHtml);\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      var msg = (nodes.length === 1 ?\r\n                 _.str.sformat(lang.DeleteCommandConfirmDialogSingleMessage,\r\n                     nodes.at(0).get('name')) :\r\n                 _.str.sformat(lang.DeleteCommandConfirmDialogMultipleMessage,\r\n                     nodes.length));\r\n      return {\r\n        title: lang.DeleteCommandConfirmDialogTitle,\r\n        message: msg\r\n      };\r\n    },\r\n\r\n    // Perform the delete action. Return a promise, which is resolved with the deleted node if\r\n    // successful or rejected with the error.\r\n    // Note, that the node is used later to display the name of the deleted item.\r\n    _performAction: function (model, options) {\r\n      var node = model.node;\r\n      var d = $.Deferred();\r\n      var collection = node.collection;\r\n      if (collection) {\r\n        var jqxhr = node.destroy({\r\n          wait: true\r\n        })\r\n            .done(function () {\r\n              model.set('count', 1);\r\n              model.deferred.resolve(model);\r\n              d.resolve(node);\r\n            })\r\n            .fail(function (error) {\r\n              var commandError = error ? new CommandError(error, node) :\r\n                                 error;\r\n              model.deferred.reject(model, commandError);\r\n              if (!error) {\r\n                jqxhr.abort();\r\n              }\r\n              d.reject(commandError);\r\n            });\r\n        return d.promise();\r\n      }\r\n      else {\r\n        return d.reject(\r\n            new CommandError(_.str.sformat(lang.DeleteItemFailed, node.get('name')),\r\n                {errorDetails: 'collection is undefined'}));\r\n      }\r\n    },\r\n\r\n    // keep in sync with versions/delete.js\r\n    startGlobalMessage: function (uploadCollection, options) {\r\n      /* GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: isVersionModel ? versionLang.DeletingOneVersion : lang.DeletingOneFile,\r\n        oneFileSuccess: isVersionModel ? versionLang.DeleteVersionOneItemSuccessMessage : lang.DeleteOneItemSuccessMessage,\r\n        multiFileSuccess: isVersionModel ? versionLang.DeleteVersionManyItemsSuccessMessage : lang.DeleteManyItemsSuccessMessage,\r\n        oneFilePending: isVersionModel ? versionLang.DeletingOneVersion : lang.DeletingOneFile,\r\n        multiFilePending: isVersionModel ? versionLang.DeleteVersions : lang.DeleteFiles,\r\n        oneFileFailure: isVersionModel ? versionLang.DeleteVersionOneItemFailMessage : lang.DeleteOneItemFailMessage,\r\n        multiFileFailure: isVersionModel ? versionLang.DeleteVersionManyItemsFailMessage2 : lang.DeleteManyItemsFailMessage2,\r\n        someFileSuccess: isVersionModel ? versionLang.DeleteVersionSomeItemsSuccessMessage : lang.DeleteSomeItemsSuccessMessage,\r\n        someFilePending: isVersionModel ? versionLang.DeletingSomeVersions : lang.DeletingSomeFiles,\r\n        someFileFailure: isVersionModel ? versionLang.DeleteVersionSomeItemsFailMessage2 : lang.DeleteSomeItemsFailMessage2,\r\n        enableCancel: false\r\n      }); */\r\n      GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: lang.DeletingOneItem,\r\n        oneFileSuccess: lang.DeleteOneItemSuccessMessage,\r\n        multiFileSuccess: lang.DeleteManyItemsSuccessMessage,\r\n        oneFilePending: lang.DeletingOneItem,\r\n        multiFilePending: lang.DeleteItems,\r\n        oneFileFailure: lang.DeleteOneItemFailMessage,\r\n        multiFileFailure: lang.DeleteManyItemsFailMessage2,\r\n        someFileSuccess: lang.DeleteSomeItemsSuccessMessage,\r\n        someFilePending: lang.DeletingSomeItems,\r\n        someFileFailure: lang.DeleteSomeItemsFailMessage2,\r\n        enableCancel: false,\r\n        originatingView: options.originatingView\r\n      });\r\n    }\r\n  });\r\n\r\n  _.extend(DeleteCommand.prototype, ConfirmableCommand, {\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n\r\n      // avoid messages from handleExecutionResults (must be set here and not in any async\r\n      // callbacks, because it is used in the calling code immediately after calling execute)\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      require([\r\n        'csui/models/fileuploads',\r\n        'csui/utils/contexts/factories/next.node',\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (localUploadFileCollection, localNextNodeModelFactory,\r\n          localGlobalMessage) {\r\n        UploadFileCollection = localUploadFileCollection;\r\n        NextNodeModelFactory = localNextNodeModelFactory;\r\n        GlobalMessage = localGlobalMessage;\r\n        self._executeDelete(status, options)\r\n            .then(deferred.resolve, deferred.reject);\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _executeDelete: function (status, options) {\r\n      var self = this;\r\n      options || (options = {});\r\n      var nodes       = CommandHelper.getAtLeastOneNode(status),\r\n          node        = nodes.length === 1 && nodes.first(),\r\n          deferred    = $.Deferred(),\r\n          commandData = status.data || {},\r\n          context     = status.context || options.context;\r\n\r\n      options.parallelism || (options.parallelism = config.parallelism);\r\n      options.originatingView = status.originatingView;\r\n\r\n      var showProgressDialog = commandData.showProgressDialog != null ?\r\n                               commandData.showProgressDialog : true;\r\n\r\n      // Do not use 'apply' with 'arguments' array because the 'options' parameter that is\r\n      // undefined and locally set will not be passed on with the locally set value.\r\n      // Use 'call' with parameters list.\r\n      ConfirmableCommand.execute.call(this, status, options)\r\n          .done(function (results) {\r\n            if (showProgressDialog) {\r\n              GlobalMessage.hideFileUploadProgress();\r\n            }\r\n\r\n            // If the current container is deleted, open its parent\r\n            if (node && node === status.container) {\r\n              // Let the other subscribers execute before navigating away\r\n              setTimeout(function () {\r\n                var nextNode = context.getModel(NextNodeModelFactory),\r\n                    parentId = status.container.get('parent_id');\r\n                nextNode.set('id', parentId.id || parentId);\r\n              });\r\n            }\r\n            // For mobile we refresh last page in order to retrieve pushed\r\n            // up items after a delete.\r\n            else if (options.infiniteScroll) {\r\n              status.collection.fetch({\r\n                reset: false,\r\n                remove: false,\r\n                merge: true\r\n              });\r\n            }\r\n            //to refetch collection in table View\r\n            self.allowCollectionRefetch = true;\r\n            deferred.resolve(results);\r\n          })\r\n          .fail(function (args) {\r\n            //only return a result if there is at least one successful delete.\r\n            //This way the waiting CommandHelper in the tabletoolbar.view will trigger\r\n            //an execute complete event.\r\n            var oneSuccess = args && _.find(args, function (result) {\r\n              return !(result instanceof CommandError);\r\n            });\r\n            var rejectResults = oneSuccess ? oneSuccess : args;\r\n            deferred.reject(rejectResults);\r\n          });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      var self               = this,\r\n          deferred           = $.Deferred(),\r\n          commandData        = status.data || {},\r\n          showProgressDialog = commandData.showProgressDialog != null ?\r\n                               commandData.showProgressDialog : true,\r\n          models             = status.nodes.models;\r\n      var nodes = _.map(models, function (node) {\r\n        return {\r\n          name: node.get('name'),\r\n          state: 'pending',\r\n          count: 0,\r\n          total: 1,\r\n          node: node\r\n        };\r\n      });\r\n      var connector = models && models[0] && models[0].connector;\r\n      var uploadCollection = new UploadFileCollection(nodes, {connector: connector});\r\n      var newStatus = _.defaults({nodes: uploadCollection}, status);\r\n      // TODO: Make the progressbar a reusable component; do not\r\n      // misuse the file-upload-progressbar for other scenarios.\r\n      // TODO: Handle this in the multi-item command to be consistent\r\n      // with other commands; do not override the delete command only.\r\n      uploadCollection.each(function (fileUpload) {\r\n        // Replace the new node in the file upload model with the existing\r\n        // one to be able to destroy it; sync and destroy events will be\r\n        // triggered on it and the parent collection and view will see them.\r\n        var node = fileUpload.get('node');\r\n        fileUpload.node = node;\r\n        fileUpload.unset('node');\r\n        fileUpload.set('mime_type', node.get('mime_type'));\r\n\r\n      });\r\n\r\n      // var isVersionModel = uploadCollection.models[0].node instanceof VersionModel;\r\n      if (showProgressDialog) {\r\n        this.startGlobalMessage(uploadCollection, options);\r\n      }\r\n\r\n      // do not display our result messages in _performActions\r\n      newStatus.suppressMultipleSuccessMessage = true;\r\n      newStatus.suppressMultipleFailMessage = true;\r\n\r\n      MultipleItemsCommand._performActions.call(this, newStatus, options)\r\n          .done(function (results) {\r\n            if (showProgressDialog) {\r\n              GlobalMessage.hideFileUploadProgress();\r\n            }\r\n            deferred.resolve(results);\r\n            // Wait for animation to complete before showing success message\r\n            setTimeout(function () {\r\n              self.showSuccess(results);\r\n            }, 500);\r\n          })\r\n          .fail(function (errors) {\r\n            if (!showProgressDialog) {\r\n              self.showError(errors);\r\n            }\r\n            return deferred.reject(errors);\r\n          });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return DeleteCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/download',[\"module\", \"csui/lib/underscore\", \"csui/lib/jquery\", \"csui/utils/base\",\r\n  \"i18n!csui/utils/commands/nls/localized.strings\", \"csui/utils/log\", \"csui/utils/command.error\",\r\n  \"csui/utils/url\", \"csui/utils/commandhelper\", \"csui/utils/connector\", \"csui/models/command\"\r\n], function (module, _, $, base, lang, log, CommandError, Url, CommandHelper, Connector,\r\n    CommandModel) {\r\n  'use strict';\r\n\r\n  var DownloadCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"Download\",\r\n      command_key: ['download', 'Download'],\r\n      name: lang.CommandNameDownload,\r\n      verb: lang.CommandVerbDownload,\r\n      doneVerb: lang.CommandDoneVerbDownload,\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      // Apply the open commands always to the shortcut or generation\r\n      // target; the original node reference must be expanded.\r\n      if (node.original && node.original.get('id') > 0) {\r\n        var type = node.get('type');\r\n        if (type === 1) {\r\n          node = node.original;\r\n        } else if (type === 2) {\r\n          // Don't switch to original for generations. This is handled\r\n          // internally by the content rest call. Make the generation\r\n          // node carry all properties, which the document would have\r\n          // and which the content-opening functionality checks.\r\n          node.set({mime_type: node.original.get('mime_type')}, {silent: true});\r\n        }\r\n      }\r\n      if (base.isAppleMobile()) {\r\n        // in case of iOS open the document in a new tab\r\n        return this._openContent(node, options);\r\n      } else {\r\n        return this._downloadContent(node, options);\r\n      }\r\n    },\r\n\r\n    _downloadContent: function (node, options, action) {\r\n      return this._executeContentCommand(node, options)\r\n          .then(_.bind(function (token) {\r\n            var url = this._getContentUrl(node, options, action || \"download\", token);\r\n            return this._performDownload(url);\r\n          }, this));\r\n    },\r\n\r\n    _openContent: function (node, options) {\r\n      var self = this;\r\n      var content = window.open(\"\");\r\n      return this._executeContentCommand(node, options)\r\n          .then(function (token) {\r\n            content.location.href = self._getContentUrl(node, options, \"download\", token);\r\n            content.focus();\r\n            return $.Deferred().resolve();\r\n          }, function () {\r\n            content.close();\r\n            return $.Deferred().reject();\r\n          });\r\n    },\r\n\r\n    _executeContentCommand: function (node, options) {\r\n      var promise = $.Deferred();\r\n      node.connector.requestContentAuthToken(node)\r\n          .done(function (data) {\r\n\r\n            promise.resolve(data.token);\r\n          })\r\n          .fail(function (error) {\r\n            promise.reject(new CommandError(error));\r\n          });\r\n      return promise.promise();\r\n    },\r\n\r\n    _getContentUrl: function (node, options, action, token) {\r\n      var url = \"\";\r\n      if (node.get('version_number')) {\r\n        url = Url.combine(node.connector.connection.url, \"nodes\",\r\n            node.get('id'), \"versions\", node.get('version_number'), \"content\");\r\n      } else {\r\n        url = Url.combine(node.connector.connection.url, \"nodes\",\r\n            node.get('id'), \"content\");\r\n      }\r\n      return url + \"?action=\" + action + \"&token=\" + encodeURIComponent(token);\r\n    },\r\n\r\n    _performDownload: function (url) {\r\n      // Creating an iframe with non-displayable document forces the download\r\n      // action in the browser and the page stays undisturbed.\r\n      var iframe = $(\"<iframe></iframe>\")\r\n          .hide()\r\n          .attr(\"src\", url)\r\n          .appendTo($(document.body));\r\n      var delay = Math.min(Connector.prototype.connectionTimeout || 60 * 1000, 60 * 1000);\r\n      setTimeout(function () {\r\n        iframe.remove();\r\n      }, delay);\r\n      return $.Deferred().resolve();\r\n    }\r\n\r\n  });\r\n\r\n  return DownloadCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/zipanddownload',[\"module\", \"require\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  \"i18n!csui/utils/commands/nls/localized.strings\", \"csui/utils/command.error\",\r\n  \"csui/utils/commandhelper\", \"csui/models/command\", \"csui/utils/url\"\r\n], function (module, require, _, $, lang, CommandError, CommandHelper,\r\n    CommandModel, URL) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, PreFlightModel, StagesModel, ModalAlert, stageInterval = 2000;\r\n\r\n  var ZipAndDownloadCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"ZipAndDownload\",\r\n      command_key: ['ZipAndDownload', 'zipanddownload'],\r\n      name: lang.CommandNameZipDownload,\r\n      verb: lang.CommandVerbZipDownload,\r\n      doneVerb: lang.CommandDoneVerbDownload,\r\n      scope: \"multiple\",\r\n      selfBlockOnly: true\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var flag = false;\r\n      if (status.nodes.models.length === 1) {\r\n        var node = CommandHelper.getJustOneNode(status),\r\n            zipAndDownloadExists;\r\n        for (var idx = 0; idx < status.nodes.models.length; idx++) {\r\n          zipAndDownloadExists = _.filter(\r\n              status.nodes.models && status.nodes.models[idx].actions &&\r\n              status.nodes.models[idx].actions.models,\r\n              function (action) { return action.id === \"zipanddownload\"; });\r\n        }\r\n        if (node.get(\"container\") && zipAndDownloadExists.length > 0) {\r\n          flag = true;\r\n        }\r\n      } else if (status.nodes.models.length > 1) {\r\n        var count = 0;\r\n        for (var index = 0; index < status.nodes.models.length; index++) {\r\n          var downloadExists = _.filter(status.nodes.models && status.nodes.models[index].actions &&\r\n                                        status.nodes.models[index].actions.models,\r\n              function (action) { return action.id === \"zipanddownload\"; });\r\n          if (downloadExists.length > 0) {\r\n            count++;\r\n          }\r\n        }\r\n        if (count > 0 && count === status.nodes.models.length) {\r\n          flag = true;\r\n        }\r\n      }\r\n      return flag;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      this.set('isExecuting', true);\r\n      if (this.stagesModel) {\r\n        delete this.stagesModel;  // to prepare fresh model with new job id\r\n      }\r\n      var nodes = CommandHelper.getAtLeastOneNode(status),\r\n          self  = this;\r\n      this.options = options || {};\r\n      this._deferred = $.Deferred();\r\n      this.connector = this.options.connector ||\r\n                       status.collection && status.collection.connector ||\r\n                       status.container && status.container.connector ||\r\n                       nodes.models && nodes.models[0].connector;\r\n\r\n      require(['csui/controls/globalmessage/globalmessage',\r\n        \"csui/models/zipanddownload/zipanddownload.preflight\",\r\n        \"csui/models/zipanddownload/zipanddownload.stages\",\r\n        \"csui/dialogs/modal.alert/modal.alert\"\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        PreFlightModel = arguments[1];\r\n        StagesModel = arguments[2];\r\n        ModalAlert = arguments[3];\r\n        //Verify the selected nodes will able to zip and download\r\n        //TODO: enable preflight once rest api handles the permissions check\r\n        /*self._preFlightCheck(status, nodes).done(\r\n          function (preFlightModel) {\r\n            if (preFlightModel.get('results').data.jobs.total_skipped > 0) {\r\n              require([\r\n                'csui/controls/zipanddownload/impl/preflight.dialog/preflight.dialog.view'\r\n              ], function (PreflightDialogView) {\r\n                var dialogOptions = {\r\n                  model: preFlightModel,\r\n                  buttons: [\r\n                    {\r\n                      id: 'zipDownload',\r\n                      label: lang.PreFlightDialogBtnContinue,\r\n                      click: _.bind(self.stageAndPrepeareDownload, self, status, nodes, preFlightModel),\r\n                      'default': true\r\n                    },\r\n                    {\r\n                      label: lang.DialogBtnCancel,\r\n                      click: _.bind(self.onClickCancelButton, self)\r\n\r\n                    }\r\n                  ]\r\n                };\r\n                self._showdialogbox(PreflightDialogView, status, nodes, dialogOptions);\r\n              });\r\n            } else {\r\n              self.stageAndPrepeareDownload(status, nodes, preFlightModel);\r\n            }\r\n          });*/\r\n        self.stageAndPrepeareDownload(status, nodes, {});\r\n      });\r\n      // this._deferred.resolve();  // Donot block other actions\r\n      this._deferred.always(function () {\r\n        self.set('isExecuting', false);\r\n      });\r\n      return this._deferred.promise();\r\n    },\r\n\r\n    _preFlightCheck: function (status, nodes) {\r\n      var deferred = $.Deferred();\r\n      var self     = this,\r\n          formData = {\r\n            id_list: nodes.pluck('id'),\r\n            type: 'ZipAndDownload'\r\n          };\r\n      var preFlightModel = new PreFlightModel(formData, status);\r\n      preFlightModel.preflight = true;\r\n      var preflightXHR = preFlightModel.save(formData, {\r\n        silent: true,\r\n        wait: true\r\n      }).done(function () {\r\n        deferred.resolve(preFlightModel);\r\n      }).fail(function (error) {\r\n        var commandError = error ? new CommandError(error, preFlightModel) :\r\n                           error;\r\n        if (error.statusText !== 'abort') {\r\n          ModalAlert.showError(commandError.message, lang.error);\r\n        }\r\n        self._deferred.reject({cancelled: true});\r\n        deferred.reject(preFlightModel, commandError);\r\n      });\r\n      GlobalMessage.showLoader(preflightXHR, {\r\n        label: lang.VerifyZipAndDownloadPrefetch\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getJobId: function (status, nodes) {\r\n      var formData    = {},\r\n          ajaxOptions = {};\r\n      formData = {\r\n        id_list: nodes.pluck('id'),\r\n        type: 'ZipAndDownload'\r\n      };\r\n      var url = this.connector.connection.url;\r\n      url = url.replace('v1', 'v2');\r\n      ajaxOptions = {\r\n        url: URL.combine(url, 'zipanddownload'),\r\n        type: 'POST',\r\n        data: formData,\r\n        contentType: 'application/x-www-form-urlencoded'\r\n      };\r\n      return this.connector.makeAjaxCall(ajaxOptions);\r\n    },\r\n\r\n    changeStageMessage: function (xhr) {\r\n      // better pass a model to global message loader panel and update that model so that loader\r\n      // panel view re-renders itself\r\n      var currentStage = this.stagesModel && this.stagesModel.get('current_stage') || 0;\r\n      var message = currentStage === 0 ? lang.ExtractingZipAndDownload :\r\n                    (currentStage === 1 ? lang.CompressingZipAndDownload :\r\n                     lang.CleanUpZipAndDownload);\r\n      GlobalMessage.changeLoaderMessage(message, xhr);\r\n    },\r\n\r\n    _checkStage: function (status, jobIdModel, deferred) {\r\n      deferred = deferred || $.Deferred();\r\n      this.stagesModel || (this.stagesModel = new StagesModel(jobIdModel, {\r\n        connector: this.connector\r\n      }));\r\n      var self    = this,\r\n          promise = deferred.promise(),\r\n          xhr     = this.stagesModel.fetch();\r\n      this.changeStageMessage(xhr);\r\n      xhr.done(function () {\r\n        if (self.stagesModel.get('complete')) {\r\n          deferred.resolve(self.stagesModel);\r\n        } else {\r\n          if (self.stagesModel.get('stage_summary').some(function (stage) {\r\n                return !stage.complete;\r\n              })) {\r\n            self.stageCheckTimeout = setTimeout(function () {\r\n              clearTimeout(self.stageCheckTimeout);\r\n              self.stageCheckTimeout = undefined;\r\n              self._checkStage(status, jobIdModel, deferred);\r\n            }, stageInterval);\r\n          } else {\r\n            deferred.resolve(self.stagesModel);\r\n          }\r\n        }\r\n      });\r\n      promise.abort = xhr.abort;   // helper for loader panel view cancel\r\n      return promise;\r\n    },\r\n\r\n    _showdialogbox: function (view, status, nodes, dialogOptions) {\r\n      var self = this;\r\n      // dialog view\r\n      self._dialog = new view(_.extend(dialogOptions, {\r\n        status: status,\r\n        nodes: nodes,\r\n        iconLeft: 'notification_warning'\r\n      }));\r\n      self._dialog.listenTo(self._dialog, 'hide', _.bind(self.onHideDialog, self));\r\n      self._dialog.show();\r\n    },\r\n\r\n    onHideDialog: function () {\r\n      if (this._deferred) {\r\n        if (this._deferred.state() === 'pending') {\r\n          this._deferred.reject({cancelled: true});\r\n        }\r\n      }\r\n    },\r\n\r\n    stageAndPrepeareDownload: function (status, nodes, preFlightModel) {\r\n      var self         = this,\r\n          deferred     = $.Deferred(),\r\n          currentStage = self.stagesModel && self.stagesModel.get('current_stage') || 0;\r\n      self._getJobId(status, nodes).done(function (jobIdModel) {\r\n        jobIdModel = jobIdModel.results.data.jobs;\r\n        var checkStage = self._checkStage(status, jobIdModel);\r\n        GlobalMessage.showLoader(checkStage, {\r\n          label: currentStage === 0 ? lang.ExtractingZipAndDownload :\r\n                 (currentStage === 1 ? lang.CompressingZipAndDownload :\r\n                  lang.CleanUpZipAndDownload),\r\n          onDestroy: function (success) {\r\n            if (self.stageCheckTimeout) {\r\n              clearTimeout(self.stageCheckTimeout);\r\n            }\r\n            success ? self._deferred.resolve() : self._deferred.reject();\r\n          }\r\n        });\r\n        checkStage.done(\r\n            function (stagesModel) {\r\n              deferred.resolve();\r\n              if (stagesModel && stagesModel.get('complete') &&\r\n                  stagesModel.get('current_stage') === stagesModel.get('stage_summary').length) {\r\n                require([\r\n                  'csui/controls/zipanddownload/impl/download.dialog/download.dialog.view'\r\n                ], function (DownloadDialogView) {\r\n                  deferred.resolve();\r\n                  var dialogOptions = {\r\n                    model: stagesModel,\r\n                    status: status,\r\n                    //preFlightModel: preFlightModel,\r\n                    buttons: [\r\n                      {\r\n                        id: 'zipDownload',\r\n                        label: lang.DownloadDialogBtnDownload,\r\n                        click: _.bind(function () {\r\n                          //validate the name\r\n                          var archiveName = this._dialog.ui.fileName.val();\r\n                          if (archiveName.trim().length === 0) {\r\n                            this._dialog.ui.errorEl.html(\r\n                                lang.TheArchiveNameCannotBeEmpty);\r\n                          } else if (archiveName.trim().length > 248) {\r\n                            this._dialog.ui.errorEl.html(\r\n                                lang.TheArchiveNameMaxLength);\r\n                          } else if (archiveName.search(\r\n                                  /[\\?\\:<>\\|\\\"\\\\\\/\\@\\^\\,\\{\\}\\[\\]\\!\\%\\&\\(\\)\\~]/g) !== -1) {\r\n                            this._dialog.ui.errorEl.html(\r\n                                lang.InvalidArchiveCharacters);\r\n                          } else if (/^[\\W]+/.test(archiveName)) {\r\n                            this._dialog.ui.errorEl.html(lang.InvalidArchiveName);\r\n                          } else {\r\n                            if (this._dialog.options.status &&\r\n                                this._dialog.options.status.originatingView) {\r\n                              var toolItem = this._dialog.options.status.originatingView.$el.find(\r\n                                  '[data-csui-command=' + this.get(\"signature\").toLowerCase() +\r\n                                  '] a.binf-disabled');\r\n                              if (toolItem.length > 0) {\r\n                                toolItem.removeClass(\"binf-disabled\");\r\n                              }\r\n                            }\r\n                            if (!/(.)+(.zip)$/i.test(archiveName)) {\r\n                              archiveName += '.zip';\r\n                            }\r\n                            /*  window.open(URL.combine(this.connector.connection.url.replace(/\\/api\\/v[1|2]\\/?/gi, ''),\r\n                             StagesModel.get('link')));  */\r\n                            // Resource interpreted as Document but transferred with MIME type\r\n                            // application/octet-stream:\r\n                            window.location.href = URL.appendQuery(URL.combine(\r\n                                this.connector.connection.url.replace(/\\/api\\/v[1|2]/gi, ''),\r\n                                stagesModel.get('link')),\r\n                                'downloadName=' + encodeURIComponent(archiveName));\r\n                            this._dialog.destroy();\r\n                            delete this._dialog;\r\n                          }\r\n                        }, self),\r\n                        'default': true,\r\n                        disabled: stagesModel.get('total_completed') === 0\r\n                      }, {\r\n                        label: lang.DialogBtnCancel,\r\n                        click: _.bind(self.onClickCancelButton, self)\r\n                      }\r\n                    ]\r\n                  };\r\n                  self._showdialogbox(DownloadDialogView, status, nodes, dialogOptions);\r\n                });\r\n              } else {\r\n                ModalAlert.showError(stagesModel.get('status_formatted'));\r\n              }\r\n            }).fail(function (error) {\r\n          GlobalMessage.showMessage('error', error.statusText);\r\n          deferred.reject(error);\r\n        });\r\n      });\r\n      if (this._dialog) {\r\n        this._dialog.destroy();\r\n        delete this._dialog;\r\n      }\r\n    },\r\n\r\n    onClickCancelButton: function () {\r\n      if (this._dialog.options.status && this._dialog.options.status.originatingView) {\r\n        var toolItem = this._dialog.options.status.originatingView.$el.find(\r\n            '[data-csui-command=' + this.get(\"signature\").toLowerCase() +\r\n            '] a.binf-disabled');\r\n        if (toolItem.length > 0) {\r\n          toolItem.removeClass(\"binf-disabled\");\r\n        }\r\n      }\r\n      this._dialog.destroy();\r\n      delete this._dialog;\r\n    }\r\n  });\r\n  return ZipAndDownloadCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.classic.page',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/url',\r\n  'csui/utils/commandhelper', 'csui/models/command',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, Url, CommandHelper, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    openInNewTab: true\r\n  }, module.config());\r\n\r\n  var OpenClassicPageCommand = CommandModel.extend({\r\n\r\n    execute: function (status, options) {\r\n      // TODO: Remove this. Commands have to return false from enabled()\r\n      // in this case.\r\n      if (config.classicUnsupported) {\r\n        return this._classicUnsupported(status);\r\n      }\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      // TODO: Merge status and options on a higher level\r\n      return this._navigateTo(node, _.extend({}, status, options));\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var connector = node.connector || options.connector,\r\n          url = new Url(connector.connection.url).getCgiScript(),\r\n          urlQuery = this.getUrlQueryParameters(node, options);\r\n      if (urlQuery && !_.isString(urlQuery)) {\r\n        urlQuery = $.param(urlQuery);\r\n      }\r\n      if (urlQuery) {\r\n        url += '?' + urlQuery;\r\n      }\r\n      return url;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n    },\r\n\r\n    openInNewTab: function () {\r\n      return config.openInNewTab;\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: false,\r\n\r\n    _classicUnsupported: function (status) {\r\n      var deferred = $.Deferred();\r\n      status.suppressFailMessage = true;\r\n      require(['csui/dialogs/modal.alert/modal.alert'], function (ModalAlert) {\r\n        ModalAlert.showInfo(lang.viewTypeUnsupported);\r\n      });\r\n      return deferred.reject();\r\n    },\r\n\r\n    _navigateTo: function (node, options) {\r\n      var url, openInNewTab, shouldCloseTabAfterRedirect,\r\n          config, closeUrl, connection;\r\n\r\n      // If no URL is available, the terminal command can formulate\r\n      // a meaningful message\r\n      try {\r\n        url = this.getUrl(node, options);\r\n      } catch (error) {\r\n        return $\r\n            .Deferred()\r\n            .reject(error)\r\n            .promise();\r\n      }\r\n\r\n      openInNewTab = this.openInNewTab;\r\n      if (_.isFunction(openInNewTab)) {\r\n        openInNewTab = openInNewTab.call(this);\r\n      }\r\n\r\n      shouldCloseTabAfterRedirect = this.shouldCloseTabAfterRedirect;\r\n      if (_.isFunction(shouldCloseTabAfterRedirect)) {\r\n        shouldCloseTabAfterRedirect = shouldCloseTabAfterRedirect.call(this);\r\n      }\r\n\r\n      // Append nextURL parameter pointing to the current or to a\r\n      // self-closing page, when the classic page has been submitted\r\n      if (shouldCloseTabAfterRedirect) {\r\n        // Use the self-closing page, only if a new window is opened;\r\n        // otherwise go back to the current page\r\n        if (openInNewTab) {\r\n          connection = (node.connector || options.connector).connection;\r\n          // Ask for the configuration first here; it can be set later\r\n          // during requiring of other modules\r\n          closeUrl = module.config().closeUrl ||\r\n                     Url.combine(connection.supportPath,\r\n                         'csui/pages/close.html');\r\n          if (!new Url(closeUrl).isAbsolute()) {\r\n            if (closeUrl[0] !== '/') {\r\n              closeUrl = Url.appendQuery(\r\n                  new Url(connection.url).getCgiScript(), closeUrl);\r\n            } else {\r\n              closeUrl = Url.combine(\r\n                  new Url(connection.url).getOrigin(), closeUrl);\r\n            }\r\n          }\r\n        } else {\r\n          closeUrl = location.href;\r\n        }\r\n        url = Url.appendQuery(url, Url.combineQueryString({\r\n          nextURL: closeUrl\r\n        }));\r\n      }\r\n\r\n      if (openInNewTab) {\r\n        window\r\n            .open(url, '_blank')\r\n            .focus();\r\n      } else {\r\n        location.href = url;\r\n      }\r\n\r\n      return $.Deferred().resolve().promise();\r\n    }\r\n\r\n  }, {\r\n    openInNewTab: config.openInNewTab\r\n  });\r\n\r\n  return OpenClassicPageCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/edit',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'Edit',\r\n      command_key: 'edit',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/editactivex',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditActiveX = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditActiveX',\r\n      command_key: 'editactivex',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n\t      signature = this.get('command_key'),\r\n          action = this._getNodeActionForSignature(node, signature);\r\n      // Set the value of name and promoted from the /nodes/actions response\r\n      if (action) {\r\n        var toolItem = status.toolItem || options && options.toolItem;\r\n        if (toolItem) {\r\n          var name = action.get('name');\r\n          if (name) {\r\n            toolItem.set('name', name);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditActiveX;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/editofficeonline',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditOfficeOnline = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditOfficeOnline',\r\n      command_key: 'editofficeonline',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n\t      signature = this.get('command_key'),\r\n          action = this._getNodeActionForSignature(node, signature);\r\n      // Set the value of name and promoted from the /nodes/actions response\r\n      if (action) {\r\n        var toolItem = status.toolItem || options && options.toolItem;\r\n        if (toolItem) {\r\n          var name = action.get('name');\r\n          if (name) {\r\n            toolItem.set('name', name);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditOfficeOnline;\r\n\r\n});\r\n\n","csui.define('csui/models/perspective/server.adaptor.mixin',[\r\n  'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/url'\r\n], function (_, $, Url) {\r\n  'use strict';\r\n\r\n  var ServerAdaptorMixin = {\r\n    mixin: function (prototype) {\r\n      return _.extend(prototype, {\r\n        makeServerAdaptor: function (options) {\r\n          return this;\r\n        },\r\n\r\n        isFetchableDirectly: function () {\r\n          return this.get('id') > 0;\r\n        },\r\n\r\n        urlBase: function () {\r\n          var id  = this.get('id'),\r\n              url = this.connector.connection.url;\r\n          if (!id) {\r\n            // Create a new node by POST /perspectives\r\n            url = Url.combine(url, 'perspectives');\r\n          } else if (!_.isNumber(id) || id > 0) {\r\n            // Access an existing node by VERB /perspectives/:id\r\n            url = Url.combine(url, 'perspectives', id);\r\n          } else {\r\n            throw new Error('Unsupported id value');\r\n          }\r\n          return url;\r\n        },\r\n\r\n        url: function () {\r\n          var url = this.urlBase();\r\n          return url;\r\n        },\r\n\r\n        parse: function (response) {\r\n\r\n          var perspectives = response.perspectives;\r\n          if (!perspectives) {\r\n            // Update response\r\n            return response;\r\n          }\r\n\r\n          if(perspectives.length === 0){\r\n            // Perspectives are empty for GET request\r\n            return {};\r\n          }\r\n          perspectives = _.each(perspectives, function (perspective) {\r\n            perspective.cascading = perspective.cascading + '';\r\n            perspective.containerType = perspective.container_type;\r\n            perspective.constantData = perspective.constant_data;\r\n            perspective.overrideType = perspective.override_type;\r\n            perspective.overrideId = perspective.override_id;\r\n            perspective.nodepath = perspective.node_path;\r\n            perspective.rules = perspective.rule_data;\r\n            perspective.perspective = JSON.parse(perspective.perspective);\r\n            perspective.constant_extraction_mode = perspective.container_type;\r\n            perspective.pnodepath = perspective.perspective_node_path;\r\n          });\r\n          return {\r\n            'perspectives': perspectives\r\n          };\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return ServerAdaptorMixin;\r\n});\r\n  \n","//TODO Check if this should be moved to pman\r\ncsui.define('csui/models/perspective/perspective.template.model',[\"module\", 'csui/lib/underscore', \"csui/lib/backbone\",\r\n  \"csui/models/perspective/server.adaptor.mixin\",\r\n  'csui/models/mixins/uploadable/uploadable.mixin',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  'csui/models/perspective/perspective.model',\r\n  \"csui/utils/log\", \"csui/utils/base\"\r\n], function (module, _, Backbone, ServerAdaptorMixin, UploadableMixin, ConnectableMixin,\r\n    PerspectiveModel, log,\r\n    base) {\r\n  \"use strict\";\r\n\r\n  var config = _.extend({\r\n    idAttribute: null\r\n  }, module.config());\r\n\r\n  var PerspectiveTemplateModel = Backbone.Model.extend({\r\n    idAttribute: config.idAttribute,\r\n\r\n    constructor: function PerspectiveTemplateModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n      this.options = _.pick(options, ['connector']);\r\n      this.makeUploadable(options)\r\n          .makeConnectable(options)\r\n          .makeServerAdaptor(options);\r\n    },\r\n\r\n    isNew: function () {\r\n      return !this.get('id') || this.get('id') === 0;\r\n    },\r\n\r\n    isFetchable: function () {\r\n      return !!this.get('id');\r\n    },\r\n\r\n    set: function (key, value, options) {\r\n      var attrs;\r\n      if (key == null) {\r\n        return this;\r\n      }\r\n      if (typeof key === 'object') {\r\n        attrs = key;\r\n        options = value;\r\n      } else {\r\n        (attrs = {})[key] = value;\r\n      }\r\n      if (attrs.perspectives) {\r\n        key = 'perspectives';\r\n        var perspectiveCollection = new Backbone.Collection();\r\n        options = _.pick(this.options, ['connector']);\r\n\r\n        _.each(attrs.perspectives, function (perspective) {\r\n          //default 'id' for the current perspective model will be replaced with perspective 'id'\r\n          //later  as models in the collection need to have unique 'id'\r\n          perspectiveCollection.add(new PerspectiveModel(perspective, options));\r\n        });\r\n        value = perspectiveCollection;\r\n        (attrs = {})[key] = value;\r\n      }\r\n      // do the usual set\r\n      return Backbone.Model.prototype.set.call(this, attrs, options);\r\n    }\r\n  });\r\n\r\n  UploadableMixin.mixin(PerspectiveTemplateModel.prototype);\r\n  ConnectableMixin.mixin(PerspectiveTemplateModel.prototype);\r\n  ServerAdaptorMixin.mixin(PerspectiveTemplateModel.prototype);\r\n\r\n  return PerspectiveTemplateModel;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/edit.perspective',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/url',\r\n  'csui/models/perspective/perspective.template.model',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel,\r\n    Url, PerspectiveTemplateModel, lang) {\r\n  'use strict';\r\n  var config = window.csui.requirejs.s.contexts._.config\r\n                   .config['csui/utils/contexts/perspective'] || {};\r\n  config = _.extend({\r\n    enableInlinePerspectiveEditing: true\r\n  }, config, module.config());\r\n\r\n  var ConnectorFactory;\r\n\r\n  var EditPerspectiveCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditPerspective',\r\n      name: lang.EditPerspective\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var context    = status.context || options && options.context,\r\n          attributes = context.perspective.attributes;\r\n      if (attributes.id) {\r\n        return attributes.canEditPerspective;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var context         = status.context || options && options.context,\r\n          isInlineEditing = (options && options.inlinePerspectiveEditing) ||\r\n                            config.enableInlinePerspectiveEditing;\r\n      if (isInlineEditing) {\r\n        // Edit perspective of page inline in SmartUI\r\n        return this._editInline(status, options, context);\r\n      } else {\r\n        // Navigate to class Perspective Management console\r\n        return this._editInClassicPMan(status, options, context);\r\n      }\r\n    },\r\n\r\n    _editInline: function (status, options, context) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n      require(['csui/perspective.manage/pman.view', 'csui/utils/contexts/factories/connector'],\r\n          function (PManView, ConnectorFactory) {\r\n            var perspectiveId       = context.perspective.get('id'),\r\n                perspectiveTemplate = new PerspectiveTemplateModel(\r\n                    {id: perspectiveId},\r\n                    {connector: context.getObject(ConnectorFactory)}),\r\n                pmanView, currentPerspective, allPerspectives;\r\n            perspectiveTemplate.fetch().then(function () {\r\n              allPerspectives = perspectiveTemplate.get('perspectives');\r\n              if (allPerspectives && allPerspectives.length != 1) {\r\n                //show warning dialog as the perspective template is used by multiple nodes\r\n                require(['csui/dialogs/modal.alert/modal.alert'], function (alertDialog) {\r\n                  alertDialog.showError(lang.editPerspectiveErrorMessage)\r\n                      .done(function () {\r\n                        deferred.resolve();\r\n                      })\r\n                      .fail(function (arg) {\r\n                        deferred.reject(arg);\r\n                      });\r\n                });\r\n              } else {\r\n                currentPerspective = allPerspectives.at(0);\r\n                currentPerspective.set('id',perspectiveId);\r\n                pmanView = new PManView({\r\n                  context: context,\r\n                  perspective: currentPerspective\r\n                });\r\n                pmanView.show();\r\n                deferred.resolve();\r\n              }\r\n            });\r\n          }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _editInClassicPMan: function (status, options, context) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n      require(['csui/utils/contexts/factories/connector'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        var f = self._getForm(context, status);\r\n        f.submit();\r\n        f.remove();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getForm: function (context, status) {\r\n      var f = $(\"<form target='_blank' method='POST' style='display:none;'></form>\").attr({\r\n        action: this._getUrl(context, status)\r\n      }).appendTo(document.body);\r\n\r\n      var params = this._getUrlQueryParameters(context);\r\n\r\n      for (var i in params) {\r\n        if (params.hasOwnProperty(i)) {\r\n          $('<input type=\"hidden\" />').attr({\r\n            name: i,\r\n            value: params[i]\r\n          }).appendTo(f);\r\n        }\r\n      }\r\n\r\n      return f;\r\n    },\r\n\r\n    _getUrl: function (context, status) {\r\n      var connector      = context.getObject(ConnectorFactory),\r\n          cgiUrl         = new Url(connector.connection.url).getCgiScript(),\r\n          perspectiveUrl = cgiUrl.toString() + \"/perspectivemgr\";\r\n      return perspectiveUrl;\r\n    },\r\n\r\n    _getUrlQueryParameters: function (context) {\r\n      var perspective_id = context.perspective.attributes.id,\r\n          parameters;\r\n      if (perspective_id !== undefined && perspective_id > 0) {\r\n        parameters = {\r\n          perspective_id: perspective_id\r\n        };\r\n      } else {\r\n        parameters = {};\r\n      }\r\n      return parameters;\r\n    }\r\n\r\n  });\r\n\r\n  return EditPerspectiveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/editwebdav',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditWebDAV = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditWebDAV',\r\n      command_key: 'editwebdav',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n\t      signature = this.get('command_key'),\r\n          action = this._getNodeActionForSignature(node, signature);\r\n      // Set the value of name and promoted from the /nodes/actions response\r\n      if (action) {\r\n        var toolItem = status.toolItem || options && options.toolItem;\r\n        if (toolItem) {\r\n          var name = action.get('name');\r\n          if (name) {\r\n            toolItem.set('name', name);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditWebDAV;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/nls/root/lang',{\r\n\r\n  // Share\r\n  EmailLinkSubject: 'I want to share the following links with you',\r\n  EmailLinkDesktop: \"Link for Desktop and Android\",\r\n  EmailAppleLinkFormat: \"Link for iOS Mobile\",\r\n\r\n  // Reserve\r\n  CommandNameReserve: \"Reserve\",\r\n  CommandVerbReserve: \"reserve\",\r\n  ReservePageLeavingWarning: \"If you leave the page now, pending items will not be reserved.\",\r\n  ReserveItemsNoneMessage: \"No items reserved.\",\r\n  ReserveOneItemSuccessMessage: \"1 item successfully reserved.\",\r\n  ReserveSomeItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveManyItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveOneItemFailMessage: \"1 item failed to reserve.\",\r\n  ReserveSomeItemsFailMessage: \"{0} items failed to reserve.\",\r\n  ReserveManyItemsFailMessage: \"{0} items failed to reserve.\",\r\n\r\n  // Unreserve\r\n  CommandNameUnreserve: \"Unreserve\",\r\n  CommandVerbUnreserve: \"unreserve\",\r\n  UnreservePageLeavingWarning: \"If you leave the page now, pending items will not be unreserved.\",\r\n  UnreserveItemsNoneMessage: \"No items unreserved.\",\r\n  UnreserveOneItemSuccessMessage: \"1 item successfully unreserved.\",\r\n  UnreserveSomeItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveManyItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveOneItemFailMessage: \"1 item failed to unreserve.\",\r\n  UnreserveSomeItemsFailMessage: \"{0} items failed to unreserve.\",\r\n  UnreserveManyItemsFailMessage: \"{0} items failed to unreserve.\",\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commands/email.link',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/utils/url', 'csui/utils/command.error',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'i18n!csui/utils/commands/nls/lang',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/lib/underscore.string'\r\n], function (module, require, _, $, Url, CommandError, CommandModel,\r\n    CommandHelper, publicLang, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    rewriteApplicationURL: false,\r\n    enableAppleSupport: false,\r\n    appleNodeLinkBase: 'x-otm-as-cs16://?launchUrl=nodes/'\r\n  }, module.config());\r\n\r\n  var nodeLinks;\r\n\r\n  var EmailLinkCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'EmailLink',\r\n      name: lang.CommandNameEmailLink,\r\n      verb: lang.CommandVerbEmailLink\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      return nodes && nodes.length;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/node.links/node.links'], function () {\r\n        nodeLinks = arguments[0];\r\n        // TODO: Share the node e-mail link gathering code and the e-mail\r\n        // formatting code by creating a new module for it\r\n        var nodes = CommandHelper.getAtLeastOneNode(status),\r\n            context = status.context || (options && options.context),\r\n            applicationUrl = this._getApplicationUrl(nodes, context),\r\n            body = this._getNodesLinks(nodes, applicationUrl),\r\n            newHref = 'mailto:?subject=' + encodeURIComponent(publicLang.EmailLinkSubject) +\r\n                      '&body=' + encodeURIComponent(body),\r\n            error = this._openNewHref(newHref);\r\n        if (error) {\r\n          deferred.reject(error);\r\n        } else {\r\n          deferred.resolve();\r\n        }\r\n      }.bind(this), deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getApplicationUrl: function (nodes) {\r\n      var connector = nodes.first().connector;\r\n      return Url.combine(new Url(connector.connection.url).getCgiScript(), '/app');\r\n    },\r\n\r\n    _openNewHref: function (newHref) {\r\n      if (newHref.length > 2048) {\r\n        return new CommandError(lang.EmailLinkCommandFailedWithTooMuchItemsErrorMessage);\r\n      } else {\r\n        window.location.href = newHref;\r\n      }\r\n    },\r\n\r\n    _getNodesLinks: function(nodes, applicationUrl) {\r\n      var iOSEnabled = config.enableAppleSupport,\r\n          iOSText = lang.EmailAppleLinkFormat,\r\n          androidText = publicLang.EmailLinkDesktop + '\\n',\r\n          desktopText = nodes.map(function (node) {\r\n            var actionUrl = nodeLinks.getUrl(node),\r\n                name = node.get('name') + \":\";\r\n\r\n            if (config.rewriteApplicationURL) {\r\n            // This disallows using the hash part, when the slash-based routing is enabled.\r\n            // But it should be no problem, because it is temporary for the mobile\r\n            // application only. and it didn't offer such contract for the old scenarios.\r\n            var hash = actionUrl.lastIndexOf('#');\r\n            if (hash >= 0) {\r\n              actionUrl = applicationUrl + '/' + actionUrl.substr(hash + 1);\r\n            }\r\n          }\r\n\r\n          if (iOSEnabled) {\r\n              // This is not the node ID returned by nodeLinks.getUrl.\r\n              // There is no extensibility applied, which can happen there.\r\n              // I am not sure, if it is worth to fix it.\r\n              var nodeId = (node.get('type') === 1)?node.original.get('id'):node.get('id');\r\n              iOSText += '\\n' + name + '\\n' + config.appleNodeLinkBase + nodeId;\r\n          }\r\n\r\n          return name + '\\n' + actionUrl;\r\n        }).join('\\n');\r\n\r\n      return iOSEnabled ? androidText + desktopText + \"\\n\\n\" + iOSText : desktopText;\r\n\r\n    }\r\n  });\r\n\r\n  return EmailLinkCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/execute.saved.query',[\r\n  'require', 'csui/lib/jquery', 'csui/utils/commandhelper',\r\n  'csui/models/command',\r\n], function (require, $, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var ExecuteSavedQueryCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'ExecuteSavedQuery',\r\n      // FIXME: handle the search command using the server-permitted\r\n      // actions once the server returns the default action key\r\n      //command_key: ['<command key>'],\r\n      scope: 'single'\r\n    },\r\n\r\n    // FIXME: remove this once the server returns the default action key\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 258;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self = this;\r\n      require([\r\n        'csui/utils/contexts/factories/search.query.factory'\r\n      ], function (SearchQueryModelFactory) {\r\n        var node = CommandHelper.getJustOneNode(status),\r\n            context = status.context || options && options.context,\r\n            searchQuery = context.getModel(SearchQueryModelFactory);\r\n        // TODO: Let the saved query open in its perspective instead.\r\n        searchQuery.clear({silent: true});\r\n        searchQuery.set('query_id', node.get('id'));\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return ExecuteSavedQueryCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/favorite.add',[\"require\", 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\",\r\n  'csui/utils/command.error'\r\n], function (require, $, base, _, lang, CommandHelper, NodeCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var FavoriteCommand = NodeCommand.extend({\r\n\r\n    defaults: {\r\n      signature: \"Favorite\",\r\n      command_key: ['favorite', 'favorite'],\r\n      scope: \"single\",\r\n      name: lang.CommandNameFavorite,\r\n      verb: lang.CommandVerbFavorite,\r\n      doneVerb: lang.CommandDoneVerbFavorite\r\n    },\r\n\r\n    //only one node allowed at a time\r\n    enabled: function (status, options) {\r\n      if (options && options.data && options.data.useContainer) {\r\n        return status.container && !status.container.get('favorite');\r\n      } else {\r\n        var nodes = CommandHelper.getAtLeastOneNode(status);\r\n        return nodes && (nodes.length === 1) && !nodes.models[0].get('favorite');\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      var originatingView = status.originatingView;\r\n\r\n      require([\r\n        'csui/models/favorite.model',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (FavoriteModel, ModalAlert) {\r\n        var model;\r\n        if (status.data && status.data.useContainer) {\r\n          model = status.container;\r\n        } else {\r\n          model = status.nodes.models[0];\r\n        }\r\n        var modelId = model.get('id');\r\n        var favModel = new FavoriteModel({\r\n              node: model,\r\n              id: modelId,\r\n              selected: false\r\n            },\r\n            {connector: model.connector}\r\n        );\r\n        favModel.addToFavorites()\r\n            .done(function (results) {\r\n              model.set('favorite', true);\r\n              originatingView.trigger('fav:change');\r\n              deferred.resolve(results);\r\n            })\r\n            .fail(function (err) {\r\n              deferred.reject(new CommandError(err));\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return FavoriteCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/favorite.remove',[\"require\", 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\",\r\n  'csui/utils/command.error'\r\n], function (require, $, base, _, lang, CommandHelper, NodeCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var NonFavoriteCommand = NodeCommand.extend({\r\n\r\n    defaults: {\r\n      signature: \"NonFavorite\",\r\n      command_key: ['nonfavorite', 'NonFavorite'],\r\n      scope: \"single\",\r\n      verb: lang.CommandVerbFavorite,\r\n      doneVerb: lang.CommandRemovedVerbFavorite\r\n    },\r\n\r\n    //only one node allowed at a time\r\n    enabled: function (status, options) {\r\n      if (options && options.data && options.data.useContainer) {\r\n        return status.container && status.container.get('favorite');\r\n      } else {\r\n        var nodes = CommandHelper.getAtLeastOneNode(status);\r\n        return nodes && (nodes.length === 1) && nodes.models[0].get('favorite');\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      var originatingView = status.originatingView;\r\n\r\n      require([\r\n        'csui/models/favorite.model',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (FavoriteModel, ModalAlert) {\r\n        var model;\r\n        if (status.data && status.data.useContainer) {\r\n          model = status.container;\r\n        } else {\r\n          model = status.nodes.models[0];\r\n        }\r\n        var modelId = model.get('id');\r\n        var favModel = new FavoriteModel({\r\n              node: model,\r\n              id: modelId,\r\n              selected: false\r\n            },\r\n            {connector: model.connector}\r\n        );\r\n        favModel.removeFromFavorites()\r\n            .done(function (results) {\r\n              model.set('favorite', false);\r\n              originatingView.trigger('fav:change');\r\n              deferred.resolve(results);\r\n            })\r\n          .fail(function (err) {\r\n            deferred.reject(new CommandError(err));\r\n          });\r\n\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return NonFavoriteCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/inlineedit',[\"require\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  \"csui/models/command\", \"csui/utils/commandhelper\"\r\n], function (require, _, $, CommandModel, CommandHelper) {\r\n  'use strict';\r\n\r\n  var InlineEditCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"InlineEdit\",\r\n      // Inline editing may need more permissions than just for renaming;\r\n      // if it was a problem the login would have to be extended.\r\n      command_key: ['rename', 'Rename'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/controls/table/inlineforms/inlineform.factory'\r\n      ], function (inlineFormViewFactory) {\r\n        var node = status.nodes && status.nodes.length === 1 && status.nodes.at(0);\r\n\r\n        var inlineFormView = inlineFormViewFactory.getInlineFormView(node.get('type'));\r\n        if (!inlineFormView) {\r\n          // fallback to generic for rename action\r\n          inlineFormView = inlineFormViewFactory.getInlineFormView(-1);\r\n        }\r\n        if (inlineFormView) {\r\n          node.inlineFormView = inlineFormView;\r\n          node.set('csuiInlineFormErrorMessage', 'dummy', {silent: true});\r\n          node.unset('csuiInlineFormErrorMessage');\r\n        }\r\n\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(InlineEditCommand, {\r\n\r\n    version: \"1.0\"\r\n\r\n  });\r\n\r\n  return InlineEditCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/move',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/utils/url', 'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/utils/command.error', 'csui/utils/commands/multiple.items'\r\n], function (module, require, _, $, lang, log, Url, CommandModel,\r\n    CommandHelper, CommandError, MultipleItemsCommand) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ConflictResolver, TaskQueue,\r\n      ApplyPropertiesSelectorView, UploadFileCollection, PageLeavingBlocker,\r\n      NextNodeModelFactory, nodeLinks;\r\n\r\n  // create a helper parent where we can derive from and do additional function modifications\r\n  var MoveCommandParent = CommandModel.extend({});\r\n  _.extend(MoveCommandParent.prototype, MultipleItemsCommand);     // apply needed mixin\r\n\r\n  var MoveCommand = MoveCommandParent.extend({\r\n    defaults: {\r\n      signature: \"Move\",\r\n      command_key: ['move', 'Move'],\r\n      name: lang.CommandNameMove,\r\n      verb: lang.CommandNameVerbMove,\r\n      pageLeavingWarning: lang.MovePageLeavingWarning,\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForNone: lang.MoveItemsNoneMessage,\r\n        formatForOne: lang.MoveOneItemSuccessMessage,\r\n        formatForTwo: lang.MoveSomeItemsSuccessMessage,\r\n        formatForFive: lang.MoveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.MoveItemsNoneMessage,\r\n        formatForOne: lang.MoveOneItemFailMessage,\r\n        formatForTwo: lang.MoveSomeItemsFailMessage,\r\n        formatForFive: lang.MoveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    execute: function (status, options) {\r\n      var self             = this,\r\n          deferred         = $.Deferred(),\r\n          context          = status.context || options && options.context,\r\n          uploadFileModels = [];\r\n\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/controls/conflict.resolver/conflict.resolver',\r\n        'csui/utils/taskqueue',\r\n        'csui/dialogs/node.picker/impl/header/apply.properties.selector/apply.properties.selector.view',\r\n        'csui/models/fileuploads', 'csui/utils/page.leaving.blocker',\r\n        'csui/utils/contexts/factories/next.node',\r\n        'csui/utils/node.links/node.links'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        ConflictResolver = arguments[1];\r\n        TaskQueue = arguments[2];\r\n        ApplyPropertiesSelectorView = arguments[3];\r\n        UploadFileCollection = arguments[4];\r\n        PageLeavingBlocker = arguments[5];\r\n        NextNodeModelFactory = arguments[6];\r\n        nodeLinks = arguments[7];\r\n\r\n        self._selectMoveOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedNodes = status.nodes;\r\n              var targetFolder = selectedOptions.nodes[0];\r\n              var applyProperties = selectedOptions.applyProperties;\r\n\r\n              self._announceOperationStart(status);\r\n\r\n              var namesToResolve = selectedNodes.map(function (node) {\r\n                var returnObj = {\r\n                  id: node.get('id'),\r\n                  name: node.get('name'),\r\n                  container: node.get('container'),\r\n                  mime_type: node.get('mime_type'),\r\n                  original_id: node.get('original_id'),\r\n                  original: node.original,\r\n                  type: node.get('type'),\r\n                  size: node.get('size'),\r\n                  type_name: node.get('type_name'),\r\n                  state: 'pending',\r\n                  count: 0,\r\n                  total: 1,\r\n                  enableCancel: false\r\n                };\r\n                var type = node.get('type');\r\n                if (type === 144 || type === 749 || type === 736 || type === 30309) {\r\n                  returnObj.size_formatted = node.get('size_formatted');\r\n                } else if (type === 140) {\r\n                  returnObj.url = node.get('url');\r\n                }\r\n                returnObj.actions = node.actions;\r\n                return returnObj;\r\n              });\r\n              var moveNamesToResolve = _.map(namesToResolve, function (name) {\r\n                return _.clone(name);\r\n              });\r\n              self._resolveNamingConflicts(targetFolder, moveNamesToResolve)\r\n                  .done(function (moveInstructions) {\r\n\r\n                    _.each(moveInstructions, function (instruction) {\r\n                      if (instruction.id === undefined) {\r\n                        instruction.id = _.findWhere(namesToResolve,\r\n                            {name: instruction.name}).id;\r\n                      }\r\n                    });\r\n\r\n                    self._metadataHandling(moveInstructions,\r\n                        _.extend(selectedOptions, {context: context, targetFolder: targetFolder}))\r\n                        .done(function () {\r\n                          // TODO: Make the progressbar a reusable component; do not\r\n                          // misuse the file-upload-progressbar for other scenarios.\r\n                          // TODO: Handle this in the multi-item command to be consistent\r\n                          // with other commands; do not override the delete command only.\r\n                          var uploadCollection = new UploadFileCollection(moveInstructions);\r\n                          // Replace the new node in the file upload model with the existing\r\n                          // one to be able to destroy it; sync and destroy events will be\r\n                          // triggered on it and the parent collection and view will see them.\r\n                          uploadCollection.each(function (model) {\r\n                            model.node = selectedNodes.findWhere({\r\n                              id: model.get('id')\r\n                            });\r\n                          });\r\n\r\n                          // note: in some scenarios such as expanded tile, the status.container is undefined\r\n                          var connector = status.container && status.container.connector;\r\n                          if (connector === undefined) {\r\n                            var aNode = CommandHelper.getAtLeastOneNode(status).first();\r\n                            aNode && (connector = aNode.connector);\r\n                          }\r\n                          self._moveSelectedNodes(uploadCollection, connector,\r\n                              targetFolder, applyProperties)\r\n                              .done(function (promises) {\r\n                                if (promises.length) {\r\n                                  GlobalMessage.hideFileUploadProgress();\r\n                                  var msgOptions = {\r\n                                    context: context,\r\n                                    nextNodeModelFactory: NextNodeModelFactory,\r\n                                    link_url: nodeLinks.getUrl(targetFolder),\r\n                                    targetFolder: targetFolder\r\n                                  };\r\n                                  self.showSuccessWithLink(promises, msgOptions);\r\n                                }\r\n                                //Remove uploadable nodes, not selected items\r\n                                uploadCollection.models && uploadCollection.models.length > 0 &&\r\n                                _.each(uploadCollection.models, function (filemodel) {\r\n                                  uploadFileModels.push(filemodel.node);\r\n                                });\r\n                                // status.collection can be undefined; for example: go to Properties\r\n                                // dropdown menu of the current folder in table header, then use the\r\n                                // Move command from the item's dropdown menu in Properties view.\r\n                                status.collection && status.collection.remove(uploadFileModels);     // remove only processed nodes and not all selected\r\n                                //to refetch collection in table View\r\n                                self.allowCollectionRefetch = true;\r\n                                deferred.resolve(uploadFileModels);\r\n                              })\r\n                              .always(function () {\r\n                                self._announceOperationEnd(status);\r\n                                context.trigger('current:folder:changed');\r\n                              })\r\n                              .fail(function () {\r\n                                // Returning nothing prevents the common error message\r\n                                // from being shown.\r\n                                deferred.reject();\r\n                              });\r\n\r\n                        })\r\n                        .fail(function () {\r\n                          self._announceOperationEnd(status);\r\n                          deferred.reject();\r\n                        });\r\n\r\n                  })\r\n                  .fail(function (error) {   // resolve namingConflicts\r\n                    if (error && error.userAction && error.userAction ===\r\n                        \"cancelResolveNamingConflicts\") {\r\n                      self.trigger(\"resolve:naming:conflicts:cancelled\");\r\n                    }\r\n                    else if (error && !error.cancelled) {  // if not undefined (cancel) then display error\r\n                      self.showError(error);\r\n                    }\r\n                    self._announceOperationEnd(status);\r\n                    deferred.reject();                  // empty promise\r\n                  });\r\n            })\r\n            .fail(function (error) {\r\n              if (error && !error.cancelled) {                           // if not undefined (cancel) then display error\r\n                self.showError(error);\r\n              }\r\n              deferred.reject();\r\n            });\r\n\r\n      }, deferred.reject);              // require\r\n\r\n      return deferred.promise();        // return empty promise!\r\n    },\r\n\r\n    _announceOperationStart: function (status) {\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.blockActions) {\r\n        originatingView.blockActions();\r\n      }\r\n      PageLeavingBlocker.enable(this.get('pageLeavingWarning'));\r\n    },\r\n\r\n    _announceOperationEnd: function (status) {\r\n      PageLeavingBlocker.disable();\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n    },\r\n\r\n    _selectMoveOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n          function (NodeDestinationPicker) {\r\n            // note: in some scenarios such as expanded tile, the status.container is undefined\r\n            var contextMenuCopy = status.container ? (status.container.get('id') ===\r\n                                                      status.nodes.models[0].get('id')) : false;\r\n            var numNodes = status.nodes.length;\r\n            var dialogTitle = _.str.sformat(\r\n                numNodes > 1 ? lang.DialogTitleMove : lang.DialogTitleSingleMove, numNodes);\r\n            var pickerOptions = _.extend({\r\n              command: 'move',\r\n              selectableTypes: [-1],\r\n              unselectableTypes: [899],\r\n              showAllTypes: true,\r\n              orderBy: 'type asc',\r\n              dialogTitle: dialogTitle,\r\n              initialContainer: status.container || status.nodes.models[0].parent,\r\n              initialSelection: status.nodes,\r\n              startLocation: contextMenuCopy ? 'recent.containers' : '',\r\n              includeCombineProperties: (numNodes === 1),\r\n              propertiesSeletor: true,\r\n              globalSearch: true,\r\n              context: options ? options.context : status.context,\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true\r\n            }, status);\r\n\r\n            self.nodePicker = new NodeDestinationPicker(pickerOptions);\r\n\r\n            self.nodePicker\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                })\r\n                .fail(function () {\r\n                  deferred.reject.apply(deferred, arguments);\r\n                });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _resolveNamingConflicts: function (targetFolder, nodeNames) {\r\n      var h1 = nodeNames.length === 1 ? lang.MovingNode :\r\n               _.str.sformat(lang.MovingNodes, nodeNames.length);\r\n      var conflictResolver = new ConflictResolver({\r\n        h1Label: h1,\r\n        actionBtnLabel: lang.CommandNameMove,\r\n        excludeAddVersion: true,\r\n        container: targetFolder,\r\n        files: nodeNames\r\n      });\r\n      return conflictResolver.run();\r\n    },\r\n\r\n    _metadataHandling: function (items, options) {\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/widgets/metadata/metadata.copy.move.items.controller'\r\n      ], function (MetadataCopyMoveItemsController) {\r\n        var openMetadata = options.openSelectedProperties;\r\n        var applyProperties = options.applyProperties;\r\n        var metadataController = new MetadataCopyMoveItemsController();\r\n        var controllerFunction;\r\n\r\n        // open the metadata view\r\n        if (openMetadata) {\r\n          controllerFunction = metadataController.CopyMoveItemsWithMetadata;\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES ||\r\n                   applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES) {\r\n          // check for required metadata\r\n          controllerFunction = metadataController.CopyMoveItemsRequiredMetadata;\r\n        } else {\r\n          return deferred.resolve();\r\n        }\r\n\r\n        if (applyProperties === ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES) {\r\n          options.inheritance = 'original';\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES) {\r\n          options.inheritance = 'destination';\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES) {\r\n          options.inheritance = 'merged';\r\n        }\r\n\r\n        options.action = 'move';\r\n        controllerFunction.call(metadataController, items, options)\r\n            .done(function () {\r\n              deferred.resolve();\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n\r\n      }, function (error) {\r\n        log.warn('Failed to load MetadataCopyMoveItemsController. {0}', error)\r\n        && console.warn(log.last);\r\n        deferred.reject(error);\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _moveSelectedNodes: function (uploadCollection, connector, targetFolder, applyProperties) {\r\n      var self     = this,\r\n          queue    = new TaskQueue({\r\n            parallelism: config.parallelism\r\n          }),\r\n          promises = _.map(uploadCollection.models, function (model) {\r\n            var deferred = $.Deferred();\r\n            queue.pending.add({\r\n              worker: function () {\r\n                var promise,\r\n                    attributes = model.attributes;\r\n                if (attributes.extended_data && attributes.extended_data.roles) {\r\n                  // metadata was already set interactively by the user via MetadataView\r\n                  promise = self._moveNodeWithMetadata(attributes, connector,\r\n                      targetFolder.get('id'), applyProperties);\r\n                } else {\r\n                  promise = self._moveNode(attributes, connector, targetFolder.get('id'),\r\n                      applyProperties);\r\n                }\r\n                promise\r\n                    .done(function () {\r\n                      model.set('count', 1);\r\n                      model.deferred.resolve(model);\r\n                      deferred.resolve(model);\r\n                    })\r\n                    .fail(function (cause) {\r\n                      var errObj = new CommandError(cause);\r\n                      model.deferred.reject(model, errObj);\r\n                      deferred.reject(errObj);\r\n                    });\r\n                return deferred.promise();\r\n              }\r\n            });\r\n            return deferred.promise(promises);      // return promises\r\n          });\r\n\r\n      GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: lang.MovingOneItem,\r\n        oneFileSuccess: lang.MoveOneItemSuccessMessage,\r\n        multiFileSuccess: lang.MoveManyItemsSuccessMessage,\r\n        oneFilePending: lang.MovingOneItem,\r\n        multiFilePending: lang.MovingItems,\r\n        oneFileFailure: lang.MoveOneItemFailMessage,\r\n        multiFileFailure: lang.MoveManyItemsFailMessage2,\r\n        someFileSuccess: lang.MoveSomeItemsSuccessMessage,\r\n        someFilePending: lang.MovingSomeItems,\r\n        someFileFailure: lang.MoveSomeItemsFailMessage2,\r\n        enableCancel: false\r\n      });\r\n      return $.whenAll.apply($, promises);\r\n    },\r\n\r\n    _moveNodeWithMetadata: function (instruction, connector, targetFolderID, applyProperties) {\r\n      var self = this;\r\n      var bodyParam;\r\n      var moveOptions;\r\n\r\n      bodyParam = {\r\n        \"parent_id\": targetFolderID,\r\n        \"name\": instruction.newName ? instruction.newName : instruction.name,\r\n        \"roles\": instruction.extended_data.roles\r\n      };\r\n      moveOptions = {\r\n        url: Url.combine(connector.connection.url.replace('/v1', '/v2'), '/nodes/', instruction.id),\r\n        method: 'PUT',\r\n        data: bodyParam,\r\n        contentType: connector.getAjaxContentType()\r\n      };\r\n\r\n      return connector.makeAjaxCall(moveOptions);\r\n    },\r\n\r\n    _moveNode: function (instruction, connector, targetFolderID, applyProperties) {\r\n      var self = this;\r\n\r\n      return this._getCategories(connector, instruction.id, targetFolderID)\r\n          .then(function (categories) {\r\n            var categoryGroupMapping;\r\n            var bodyParam;\r\n            var moveOptions;\r\n\r\n            categoryGroupMapping = {};\r\n            categoryGroupMapping[ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES] = 'original';\r\n            categoryGroupMapping[ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES] = 'destination';\r\n            categoryGroupMapping[ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES] = 'merged';\r\n\r\n            bodyParam = {\r\n              \"parent_id\": targetFolderID,\r\n              \"name\": instruction.newName ? instruction.newName : instruction.name,\r\n              \"roles\": {\r\n                \"categories\": categories[categoryGroupMapping[applyProperties]]\r\n              }\r\n            };\r\n            moveOptions = {\r\n              url: Url.combine(connector.connection.url.replace('/v1', '/v2'), '/nodes/',\r\n                  instruction.id),\r\n              method: 'PUT',\r\n              data: bodyParam,\r\n              contentType: connector.getAjaxContentType()\r\n            };\r\n\r\n            return connector.makeAjaxCall(moveOptions);\r\n          });\r\n    },\r\n\r\n    _getCategories: function (connector, nodeID, targetFolderID) {\r\n      var getCategoriesOptions = {\r\n        url: connector.connection.url + '/forms/nodes/move?' +\r\n             $.param({\r\n               id: nodeID,\r\n               parent_id: targetFolderID\r\n             })\r\n      };\r\n\r\n      return connector.makeAjaxCall(getCategoriesOptions)\r\n          .then(function (response, statusText, jqxhr) {\r\n            var form = response.forms[1];\r\n            return form && form.data || {};\r\n          });\r\n    }\r\n  });\r\n\r\n  return MoveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/navigate',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/log',\r\n  'csui/utils/base', 'csui/utils/commandhelper', 'csui/models/command',\r\n  'csui/models/node/node.model'\r\n], function (module, _, $, log, base, CommandHelper, CommandModel, NodeModel) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    openInNewTab: true\r\n  }, module.config());\r\n\r\n  var NavigateCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'Navigate'\r\n    },\r\n\r\n    // As long as you can see the URL object, you can navigate to the target\r\n    // URL stored on it.\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 140;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return this._navigateTo(node, options);\r\n    },\r\n\r\n    _navigateTo: function (node, options) {\r\n      var url         = node.get('url'),\r\n          absoluteUrl = node.get('absoluteUrl'),\r\n          promise     = $.Deferred(),\r\n          content;\r\n\r\n      function finish() {\r\n        content || (content = window);\r\n        if (!!absoluteUrl) {\r\n          content.location.href = absoluteUrl;\r\n        } else {\r\n          // Add default protocol 'http://' if the url does not contain any.\r\n          content.location.href = url.match(/^[a-zA-Z]+:\\/\\//) ?\r\n                                  url : 'http://' + url;\r\n        }\r\n        content.focus();\r\n        promise.resolve();\r\n      }\r\n\r\n      if (config.openInNewTab) {\r\n        content = window.open('', '_blank');\r\n      }\r\n      if (url) {\r\n        finish();\r\n      } else {\r\n        // The node model does not contain the URL information; not every\r\n        // REST API call may return it, unfortunately.\r\n        node = new NodeModel({id: node.get('id')},\r\n            {connector: node.connector});\r\n        node.fetch()\r\n            .done(function () {\r\n              url = node.get('url');\r\n              finish();\r\n            })\r\n            .fail(function (request) {\r\n              if (content) {\r\n                content.close();\r\n              }\r\n              promise.reject(new base.Error(request));\r\n            });\r\n      }\r\n      return promise.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return NavigateCommand;\r\n});\r\n\n","\n","csui.define('csui/utils/commands/open.plugins/open.plugins',[\r\n  'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/models/mixins/rules.matching/rules.matching.mixin',\r\n  // Load and register external document opening plugin rules\r\n  'csui-ext!csui/utils/commands/open.plugins/open.plugins'\r\n], function (_, Backbone, RulesMatchingMixin, rules) {\r\n  'use strict';\r\n\r\n  var OpenPluginModel = Backbone.Model.extend({\r\n    defaults: {\r\n      sequence: 100,\r\n      plugin: null\r\n    },\r\n\r\n    constructor: function OpenPluginModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n      this.makeRulesMatching(options);\r\n    }\r\n  });\r\n\r\n  RulesMatchingMixin.mixin(OpenPluginModel.prototype);\r\n\r\n  var OpenPluginCollection = Backbone.Collection.extend({\r\n    model: OpenPluginModel,\r\n    comparator: 'sequence',\r\n\r\n    constructor: function OpenPluginCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.call(this, models, options);\r\n    },\r\n\r\n    findByNode: function (node, options) {\r\n      var openInNewTab, widgetOnly;\r\n      if (options) {\r\n        openInNewTab = options.openInNewTab;\r\n        widgetOnly = options.widgetOnly;\r\n      }\r\n      var rule = this.find(function (item) {\r\n        var plugin = item.get('plugin');\r\n        // Plugins opening a full page can be used in both\r\n        // the current and a new windows, unless a widget\r\n        // was requested.\r\n        return (widgetOnly !== true &&\r\n                (plugin.openWindow || plugin.getUrl ||\r\n                plugin.getUrlQuery) ||\r\n                // Plugins supporting only a widget mode can be\r\n                // opened in the current window only (for now).\r\n                widgetOnly !== false && openInNewTab !== true &&\r\n                (plugin.openWidget || plugin.createWidget)\r\n               ) && item.matchRules(node, item.attributes);\r\n      });\r\n      return rule && rule.get('plugin');\r\n    }\r\n  });\r\n\r\n  var openPlugins = new OpenPluginCollection();\r\n\r\n  if (rules) {\r\n    openPlugins.add(_.chain(rules)\r\n                     .flatten(true)\r\n                     .map(function (rule) {\r\n                       return _.defaults({\r\n                         plugin: new rule.plugin()\r\n                       }, rule);\r\n                     })\r\n                     .value());\r\n  }\r\n\r\n  return openPlugins;\r\n});\r\n\n","csui.define('csui/utils/commands/open',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/utils/url', 'csui/utils/commandhelper', 'csui/utils/commands/download',\r\n  'csui/utils/commands/open.plugins/open.plugins'\r\n], function (module, require, _, $, Url, CommandHelper, DownloadCommand, openPlugins) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    // If overridden, true will always open a new window,\r\n    // false will always use the current window.\r\n    openInNewTab: null,\r\n\r\n    // If overridden, true will always download the document;\r\n    // opening it in the viewer or natively will not be offered.\r\n    forceDownload: false\r\n  }, module.config());\r\n\r\n  var openAuthenticatedPage;\r\n\r\n  var OpenCommand = DownloadCommand.extend({\r\n    defaults: {\r\n      signature: 'Open',\r\n      // Open has a different UI behaviour than download, but both are about\r\n      // the content access, which decide the permission.  There is no\r\n      // 'open-document' action anyway in the current REST API response.\r\n      // FIXME: As soon as the server returns permitted actions consistently\r\n      // from all calls, delete the enabled() method here and the two\r\n      // command keys 'default', 'open'.  Use the 'download', 'Download'.\r\n      command_key: ['default', 'open', 'download', 'Download'],\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      if (!DownloadCommand.__super__.enabled.apply(this, arguments)) {\r\n        return false;\r\n      }\r\n      // FIXME: If you find this too limiting and not extensible, fix the\r\n      // FIXME above.  Do not introduce an extension point for this.\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      // TODO: Move E-mail and Drawing to their modules\r\n      return _.contains([144, 749, 736], node.get('type'));\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      // Apply the open commands always to the shortcut or generation\r\n      // target; the original node reference must be expanded.\r\n      if (node.original && node.original.get('id') > 0) {\r\n        var type = node.get('type');\r\n        if (type === 1) {\r\n          node = node.original;\r\n        } else if (type === 2) {\r\n          // Do not switch to original for generations. The /content REST\r\n          // call supports the generation node_id. Just make the generation\r\n          // node carry all properties, which the document command needs\r\n          // to the generation look like a real document node.\r\n          node.set({mime_type: node.original.get('mime_type')}, {silent: true});\r\n        }\r\n      }\r\n      return this._openContent(node, options);\r\n    },\r\n\r\n    _openContent: function (node, options) {\r\n      if (config.forceDownload) {\r\n        return this._downloadContent(node, options, 'download');\r\n      }\r\n      var plugin = openPlugins.findByNode(node, {\r\n            openInNewTab: config.openInNewTab\r\n          });\r\n      if (plugin) {\r\n        if (config.openInNewTab) {\r\n          return this._openWindow(plugin, node, window.open(''), options);\r\n        }\r\n        if (plugin.widgetView) {\r\n          return this._openWidget(plugin.widgetView, node, options);\r\n        }\r\n        var content = config.openInNewTab === false ?\r\n                      window : window.open('');\r\n        return this._openWindow(plugin, node, content, options);\r\n      }\r\n      return this._downloadContent(node, options, 'download');\r\n    },\r\n\r\n    _openWidget: function (view, node, options) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/utils/commands/impl/full.page.modal/full.page.modal.view',\r\n        view\r\n      ], function (FullPageModal, ViewerView) {\r\n        var viewerView = new ViewerView({\r\n              context: options.context,\r\n              model: node\r\n            }),\r\n            fullPageModal = new FullPageModal({\r\n              view: viewerView\r\n            });\r\n        fullPageModal.on('destroy', function () {\r\n                       deferred.resolve();\r\n                     })\r\n                     .show();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _openWindow: function (plugin, node, content, options) {\r\n      var deferred = $.Deferred();\r\n      var self = this;\r\n      require([\r\n        'csui/utils/open.authenticated.page'\r\n      ], function () {\r\n        openAuthenticatedPage = arguments[0];\r\n        // Prefer the full-URL-retrieving method, then try\r\n        // the URL-query-only-retrieving method\r\n        var promise = plugin.getUrl && plugin.getUrl(node) ||\r\n                      plugin.getUrlQuery(node);\r\n        promise.then(function (url) {\r\n          return self._openURL(plugin, node, content, url, options);\r\n        }, function (error) {\r\n          if (content !== window) {\r\n            content.close();\r\n          }\r\n          deferred.reject(error);\r\n          return $.Deferred().reject();\r\n        })\r\n        .then(function () {\r\n          content.focus();\r\n          deferred.resolve();\r\n        });\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _openURL: function (plugin, node, content, url, options) {\r\n      var connector = node.connector || options.connector;\r\n      // If the URL-query-only-retrieving method was used,\r\n      // prepend the CGI URL base to complete the URL\r\n      if (!plugin.getUrl) {\r\n        url = Url.appendQuery(\r\n            new Url(connector.connection.url).getCgiScript(),\r\n            Url.combineQueryString(url));\r\n      }\r\n      if (plugin.needsAuthentication && plugin.needsAuthentication(node)) {\r\n        return openAuthenticatedPage(connector, url, {\r\n          window: content,\r\n          openInNewTab: config.openInNewTab\r\n        });\r\n      }\r\n      content.location.href = url;\r\n      return $.Deferred().resolve().promise();\r\n    }\r\n  });\r\n\r\n  return OpenCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.discussion',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenDiscussionCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenDiscussion'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 215;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'view',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenDiscussionCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.form',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenFormCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenForm'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 223;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'EditForm',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenFormCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.milestone',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenMilestoneCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenMilestone'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 212;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseMilestone',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenMilestoneCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.channel',['csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenChannelCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenChannel'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 207;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'ViewChannel',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenChannelCommand;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/open.news',['csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenNewsCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenNews'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 208;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'ViewNews',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenNewsCommand;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/open.poll',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenPollCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenPoll'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 218;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'OpenPoll',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenPollCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.prospector',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenProspectorCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenProspector'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 384;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'ProspectorBrowse',\r\n        objId: node.get('id'),\r\n        order: '-SCORE',\r\n        summaries: 1,\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenProspectorCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.specific.classic.page',[\r\n  'csui/utils/commands/open.classic.page',\r\n  'csui/utils/commandhelper',\r\n  'csui/utils/classic.nodes/classic.nodes'\r\n], function (OpenClassicPageCommand, CommandHelper, classicNodes) {\r\n  'use strict';\r\n\r\n  var OpenSpecificClassicPageCommand = OpenClassicPageCommand.extend({\r\n    defaults: {\r\n      signature: 'OpenSpecificClassicPage'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      if (node) {\r\n        return classicNodes.isSupported(node);\r\n      }\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      return classicNodes.getUrl(node);\r\n    }\r\n  });\r\n\r\n  return OpenSpecificClassicPageCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.specific.node.perspective',[\r\n  'csui/utils/commands/open.node.perspective',\r\n  'csui/utils/commandhelper',\r\n  'csui/utils/smart.nodes/smart.nodes'\r\n], function (OpenNodePerspectiveCommand, CommandHelper, smartNodes) {\r\n  'use strict';\r\n\r\n  var OpenSpecificNodePerspectiveCommand = OpenNodePerspectiveCommand.extend({\r\n    defaults: {\r\n      signature: 'OpenSpecificNodePerspective'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      if (node) {\r\n        return smartNodes.isSupported(node);\r\n      }\r\n    }\r\n  });\r\n\r\n  return OpenSpecificNodePerspectiveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.task',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTaskCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTask'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 206;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseTask',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTaskCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.taskgroup',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTaskGroupCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTaskGroup'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 205;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseTaskGroup',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTaskGroupCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.tasklist',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTaskListCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTaskList'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 204;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseTaskList',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTaskListCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.topic',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTopicCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTopic'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 130 || type === 134;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'view',\r\n        objId: node.get('id'),\r\n        show: 1,\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTopicCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/permissions',['module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/utils/command.error', 'csui/utils/commandhelper',\r\n  'csui/models/command', 'csui/models/nodes'\r\n], function (module, require, _, $, Backbone, Marionette,\r\n    CommandError, CommandHelper, CommandModel, NodeCollection) {\r\n  'use strict';\r\n\r\n  var PermissionsCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'permissions',\r\n      command_key: ['permissions', 'Permissions'],\r\n      scope: 'multiple',\r\n      commands: 'csui/utils/commands'\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self               = this,\r\n          deferred           = $.Deferred(),\r\n          selected           = status.nodes,\r\n          container          = status.container,\r\n          navigationView     = true, nodes,\r\n          metadatanavigation = !!status.originatingView ? status.originatingView.$el.closest(\r\n              '.cs-metadata-navigation-wrapper') : [];\r\n\r\n      if (selected && selected.first() === container) {\r\n        // The container properties were requested for the container\r\n        selected = container;\r\n        navigationView = false;\r\n      } else {\r\n        nodes = this._getAtLeastOneNode(status);\r\n        selected = selected.first();\r\n      }\r\n      if (metadatanavigation.length > 0) {\r\n        metadatanavigation.addClass(\"cs-metadata-no-bg-color\");\r\n      }\r\n      var context = status.context || options && options.context;\r\n\r\n      require(['csui/widgets/metadata/impl/metadatanavigation/metadatanavigation.view',\r\n        'csui/widgets/metadata/metadata.view', 'csui/controls/dialog/dialog.view',\r\n        'csui/widgets/permissions/permissions.view', this.get('commands')\r\n      ], function (PermissioNavigationWidget, MetadataView, DialogView, PermissionsView, commands) {\r\n\r\n        var permissionsView, nodeId = selected.get('id'),\r\n            showInDialogView        = status.data && !!status.data.dialogView;\r\n        if (status.originatingView instanceof PermissioNavigationWidget) {\r\n          // bring back shortcut Node and maintain in slected node  if at all node has any..\r\n          !!status.originatingView.mdv && status.originatingView.mdv.model.get('shortcutNode') ?\r\n          selected.attributes.shortcutNode = status.originatingView.mdv.model.get('shortcutNode') :\r\n          selected;\r\n          permissionsView = new MetadataView({\r\n            model: selected,\r\n            originatingView: status.originatingView,\r\n            containerCollection: status.collection,\r\n            context: context,\r\n            commands: commands,\r\n            showCloseIcon: status.originatingView ? false : true,\r\n            showBackIcon: status.originatingView ? false : true,\r\n            activeTab: status.originatingView.mdv && status.originatingView.mdv.metadataTabView &&\r\n                       status.originatingView.mdv.metadataTabView.options.activeTab,\r\n            selectedTab: status.originatingView.mdv && status.originatingView.mdv.metadataTabView &&\r\n                         status.originatingView.mdv.metadataTabView.tabLinks.selected,\r\n            showPermissionView: true\r\n          });\r\n        }\r\n        else if (navigationView) {\r\n          if (status.collection && status.collection.models &&\r\n              status.collection.models.length > 0) {\r\n            permissionsView = new PermissioNavigationWidget({\r\n              container: container,\r\n              containerCollection: status.collection,  // this is the full collection\r\n              collection: nodes,  // as UX design, this collection can be a subset\r\n              selected: selected,\r\n              originatingView: status.originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              isExpandedView: status.originatingView &&\r\n                              !!status.originatingView.options.isExpandedView,\r\n              nameAttribute: options ? options.nameAttribute : undefined,\r\n              showCloseIcon: status.originatingView ? false : true,\r\n              selectedTab: status.selectedTab,\r\n              showPermissionView: true\r\n            });\r\n          } else {\r\n            if (status.originatingView &&\r\n                status.originatingView.supportOriginatingView === undefined) {\r\n              status.originatingView.supportOriginatingView = true;\r\n            }\r\n            permissionsView = new MetadataView({\r\n              model: selected,\r\n              originatingView: status.originatingView,\r\n              targetView: status.originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              showCloseIcon: status.originatingView ? false : true,\r\n              showBackIcon: status.originatingView ? true : false,\r\n              selectedTab: status.selectedTab,\r\n              showPermissionView: true\r\n            });\r\n            if (status.originatingView) {\r\n              status.originatingView.permissionsView = permissionsView;\r\n            }\r\n          }\r\n        } else {\r\n          if (status.originatingView &&\r\n              status.originatingView.supportOriginatingView === undefined) {\r\n            status.originatingView.supportOriginatingView = true;\r\n          }\r\n          permissionsView = new MetadataView({\r\n            model: selected,\r\n            originatingView: status.originatingView,\r\n            targetView: status.originatingView,\r\n            context: context,\r\n            commands: commands,\r\n            showCloseIcon: status.originatingView ? false : true,\r\n            showBackIcon: status.originatingView ? true : false,\r\n            selectedTab: status.selectedTab,\r\n            showPermissionView: true\r\n          });\r\n          if (status.originatingView) {\r\n            status.originatingView.permissionsView = permissionsView;\r\n          }\r\n        }\r\n        //Replace metadata content view with permissions widget\r\n        if (status.originatingView instanceof PermissioNavigationWidget) {\r\n          if (status.originatingView.mdv && status.originatingView.mdv.metadataTabView) {\r\n            status.originatingView.mdv.destroy();\r\n            status.originatingView.showPermissionView = true;\r\n            permissionsView.render();\r\n            Marionette.triggerMethodOn(permissionsView, 'before:show');\r\n            status.originatingView.$el.find(\".metadata-content\").append(permissionsView.el);\r\n          }\r\n        }// replace the originatingView with sliding left/right animation\r\n        else if (status.originatingView && !showInDialogView) {\r\n\r\n          var _showOriginatingView, $csProperties;\r\n          var $originatingView = status.originatingView.$el;\r\n          var ntWidthVal = $originatingView.width();\r\n          var ntWidth = ntWidthVal + 'px';\r\n\r\n          $originatingView.parent().append(\"<div class='cs-permissions-wrapper'></div>\");\r\n          $csProperties = $($originatingView.parent().find('.cs-permissions-wrapper')[0]);\r\n          $csProperties.hide();\r\n\r\n          permissionsView.render();\r\n          //permissionsView.blockActions();\r\n          Marionette.triggerMethodOn(permissionsView, 'before:show');\r\n          $csProperties.append(permissionsView.el);\r\n\r\n          $originatingView = $originatingView.parent().find(\".cs-properties-wrapper\").length > 0 ?\r\n                             $originatingView.parent().find(\".cs-properties-wrapper\") :\r\n                             $originatingView;\r\n\r\n          $originatingView.hide('blind', {\r\n            direction: 'left',\r\n            complete: function () {\r\n              $csProperties.show('blind',\r\n                  {\r\n                    direction: 'right',\r\n                    complete: function () {\r\n                      if (status.originatingView.metadataView) {\r\n                        $originatingView.parent().find(\".cs-properties-wrapper\").remove();\r\n                        status.originatingView.metadataView &&\r\n                        status.originatingView.metadataView.destroy();\r\n                      }\r\n                      Marionette.triggerMethodOn(permissionsView, 'show');\r\n                    }\r\n                  },\r\n                  100);\r\n            }\r\n          }, 100);\r\n\r\n          $originatingView.promise().done(function () {\r\n            status.originatingView.isDisplayed = false;\r\n          });\r\n\r\n          _showOriginatingView = function () {\r\n            if (metadatanavigation.length > 0) {\r\n              metadatanavigation.removeClass(\"cs-metadata-no-bg-color\");\r\n            }\r\n            $csProperties.hide('blind', {\r\n              direction: 'right',\r\n              complete: function () {\r\n                status.originatingView.$el.show('blind',\r\n                    {\r\n                      direction: 'left',\r\n                      complete: function () {\r\n                        status.originatingView.metadataView &&\r\n                        status.originatingView.metadataView.destroy();\r\n                        status.originatingView.permissionsView &&\r\n                        status.originatingView.permissionsView.destroy();\r\n                        status.originatingView.triggerMethod('dom:refresh');\r\n                        status.originatingView.isDisplayed = true;\r\n                        //reset required switch to default.\r\n                        !!status.collection && (status.collection.requireSwitched = false);\r\n                      }\r\n                    },\r\n                    100);\r\n                permissionsView.destroy();\r\n                $csProperties.remove();\r\n                deferred.resolve();\r\n              }\r\n            }, 100);\r\n          };\r\n\r\n          self.listenTo(permissionsView, 'metadata:close',\r\n              _.bind(_showOriginatingView, self));\r\n          self.listenTo(permissionsView, 'metadata:close:without:animation', function () {\r\n            $originatingView.show('blind',\r\n                {\r\n                  direction: 'left',\r\n                  complete: function () {\r\n                    status.originatingView.triggerMethod('dom:refresh');\r\n\r\n                    //reset required switch to default.\r\n                    !!status.collection && (status.collection.requireSwitched = false);\r\n                  }\r\n                },\r\n                100);\r\n            permissionsView.destroy();\r\n            $csProperties.remove();\r\n            deferred.resolve();\r\n          });\r\n\r\n        } else {  // show permissionsView View in a modal dialog\r\n          if (permissionsView.metadataTabView) {\r\n            // edit permission popover should be in dialog element\r\n            // not on body , else we loose focus on first element of popover\r\n            permissionsView.metadataTabView.options.isExpandedView = true;\r\n          }\r\n          self.dialog = new DialogView({\r\n            className: 'cs-permissions',\r\n            largeSize: true,\r\n            view: permissionsView\r\n          });\r\n\r\n          self.dialog.show();\r\n\r\n          // UX specs does not have header bar\r\n          self.dialog.ui.header.hide();\r\n          self.dialog.listenTo(permissionsView, 'metadata:close', function () {\r\n            self.dialog.destroy();\r\n            deferred.resolve();\r\n          });\r\n          self.dialog.listenTo(permissionsView, 'metadata:close:without:animation',\r\n              function () {\r\n                self.dialog.destroy();\r\n                deferred.resolve();\r\n              });\r\n        }\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getAtLeastOneNode: function (status) {\r\n      if (!status.nodes) {\r\n        return new NodeCollection();\r\n      }\r\n      if (status.nodes.length === 1 && status.collection) {\r\n        return status.collection;\r\n      } else {\r\n        return status.nodes;\r\n      }\r\n    }\r\n  });\r\n  return PermissionsCommand;\r\n});\n","csui.define('csui/utils/commands/properties',['module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/utils/command.error', 'csui/utils/commandhelper',\r\n  'csui/models/command', 'csui/models/nodes'\r\n], function (module, require, _, $, Backbone, Marionette,\r\n    CommandError, CommandHelper, CommandModel, NodeCollection) {\r\n  'use strict';\r\n\r\n  var PropertiesCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'Properties',\r\n      command_key: ['properties', 'Properties'],\r\n      scope: 'multiple',\r\n      commands: 'csui/utils/commands'\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var selected = status.nodes;\r\n      var container = status.container;\r\n      var navigationView = true;\r\n      var nodes;\r\n      if (selected && selected.first() === container) {\r\n        // The container properties were requested for the container\r\n        selected = container;\r\n        navigationView = false;\r\n      } else {\r\n        nodes = this._getAtLeastOneNode(status);\r\n      }\r\n      var context = status.context || (options && options.context);\r\n      var originatingView = status.originatingView || (options && options.originatingView);\r\n\r\n      require(['csui/widgets/metadata/impl/metadatanavigation/metadatanavigation.view',\r\n        'csui/widgets/metadata/metadata.view', 'csui/controls/dialog/dialog.view',\r\n        'csui/models/nodeversions', this.get('commands')\r\n      ], function (MetadataNavigationWidget, MetadataView, DialogView,\r\n          NodeVersionCollection, commands) {\r\n\r\n        var metadata, showInDialogView = status.data && !!status.data.dialogView;\r\n        if (navigationView) {\r\n          if (status.collection && status.collection.models &&\r\n              status.collection.models.length > 0) {\r\n            metadata = new MetadataNavigationWidget({\r\n              container: container,\r\n              containerCollection: status.collection,  // this is the full collection\r\n              collection: nodes,  // as UX design, this collection can be a subset\r\n              selected: selected,\r\n              originatingView: originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              nameAttribute: options ? options.nameAttribute : undefined,\r\n              showCloseIcon: originatingView ? false : true,\r\n              selectedTab: status.selectedTab,\r\n              selectedProperty: status.selectedProperty,\r\n              showThumbnails: status.showThumbnails\r\n            });\r\n          } else {\r\n            if (originatingView && originatingView.supportOriginatingView === undefined) {\r\n              originatingView.supportOriginatingView = true;\r\n            }\r\n            metadata = new MetadataView({\r\n              model: selected.get(\"id\") ? selected : selected.models[0],\r\n              originatingView: originatingView,\r\n              targetView: originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              showCloseIcon: originatingView ? false : true,\r\n              showBackIcon: originatingView ? true : false,\r\n              selectedTab: status.selectedTab,\r\n              selectedProperty: status.selectedProperty\r\n            });\r\n            if (originatingView) {\r\n              originatingView.metadataView = metadata;\r\n            }\r\n          }\r\n        } else {\r\n          if (originatingView && originatingView.supportOriginatingView === undefined) {\r\n            originatingView.supportOriginatingView = true;\r\n          }\r\n          metadata = new MetadataView({\r\n            model: selected,\r\n            originatingView: originatingView,\r\n            targetView: originatingView,\r\n            context: context,\r\n            commands: commands,\r\n            showCloseIcon: originatingView ? false : true,\r\n            showBackIcon: originatingView ? true : false,\r\n            selectedTab: status.selectedTab,\r\n            selectedProperty: status.selectedProperty\r\n          });\r\n          if (originatingView) {\r\n            originatingView.metadataView = metadata;\r\n          }\r\n        }\r\n\r\n        if (originatingView instanceof MetadataNavigationWidget &&\r\n            !(status.collection instanceof NodeVersionCollection)) {\r\n          if (originatingView.mdv && originatingView.mdv.metadataTabView) {\r\n            metadata = null;\r\n            originatingView.showPermissionView = false;\r\n            originatingView._showNode(selected.get(\"id\") ? selected : selected.models[0]);\r\n          }\r\n        } // replace the originatingView with sliding left/right animation\r\n        else if (originatingView && !showInDialogView) {\r\n          originatingView.triggerMethod('metadata:created', metadata);\r\n          var _showOriginatingView, $csProperties;\r\n          var $originatingView = originatingView.$el;\r\n          var ntWidthVal = $originatingView.width();\r\n          var ntWidth = ntWidthVal + 'px';\r\n\r\n          $originatingView.parent().append(\"<div class='cs-properties-wrapper'></div>\");\r\n          $originatingView.parent().addClass('csui-node-properties-wrapper');\r\n          $csProperties = $($originatingView.parent().find('.cs-properties-wrapper')[0]);\r\n          $csProperties.hide();\r\n\r\n          metadata.render();\r\n          Marionette.triggerMethodOn(metadata, 'before:show');\r\n          $csProperties.append(metadata.el);\r\n\r\n          $originatingView = $originatingView.parent().find(\".cs-permissions-wrapper\").length > 0 ?\r\n                             $originatingView.parent().find(\".cs-permissions-wrapper\") :\r\n                             $originatingView;\r\n\r\n          $originatingView.hide('blind', {\r\n            direction: 'left',\r\n            complete: function () {\r\n              $csProperties.show('blind',\r\n                  {\r\n                    direction: 'right',\r\n                    complete: function () {\r\n                      if (originatingView.permissionsView) {\r\n                        $originatingView.parent().find(\".cs-permissions-wrapper\").remove();\r\n                        originatingView.permissionsView &&\r\n                        originatingView.permissionsView.destroy();\r\n                      }\r\n                      Marionette.triggerMethodOn(metadata, 'show');\r\n                    }\r\n                  },\r\n                  100);\r\n            }\r\n          }, 100);\r\n\r\n          $originatingView.promise().done(function () {\r\n            originatingView.isDisplayed = false;\r\n          });\r\n\r\n          _showOriginatingView = function () {\r\n            $csProperties.hide('blind', {\r\n              direction: 'right',\r\n              complete: function () {\r\n                originatingView.$el.show('blind',\r\n                    {\r\n                      direction: 'left',\r\n                      complete: function () {\r\n                        originatingView.metadataView && originatingView.metadataView.destroy();\r\n                        originatingView.permissionsView &&\r\n                        originatingView.permissionsView.destroy();\r\n                        originatingView.triggerMethod('dom:refresh');\r\n                        originatingView.isDisplayed = true;\r\n                        //reset required switch to default.\r\n                        !!status.collection && (status.collection.requireSwitched = false);\r\n                        // Trigger an event to let originating view aware of closing properties view and going back to it.\r\n                        // Hence originatingView can handle it and do necessary actions (if any).\r\n                        // For ex: Coming to properties page from Wiki, delete latest version, and going back,\r\n                        // should fetch & update WIKI page with latest available version.\r\n                        originatingView.trigger('properties:view:destroyed');\r\n                      }\r\n                    },\r\n                    100);\r\n                $originatingView.parent().removeClass('csui-node-properties-wrapper');\r\n                metadata.destroy();\r\n                $csProperties.remove();\r\n                deferred.resolve();\r\n              }\r\n            }, 100);\r\n          };\r\n\r\n          self.listenTo(metadata, 'metadata:close', _.bind(_showOriginatingView, self));\r\n          self.listenTo(metadata, 'metadata:close:without:animation', function () {\r\n            $originatingView.show('blind',\r\n                {\r\n                  direction: 'left',\r\n                  complete: function () {\r\n                    originatingView.triggerMethod('dom:refresh');\r\n\r\n                    //reset required switch to default.\r\n                    !!status.collection && (status.collection.requireSwitched = false);\r\n                  }\r\n                },\r\n                100);\r\n            metadata.destroy();\r\n            $csProperties.remove();\r\n            deferred.resolve();\r\n          });\r\n\r\n        } else {  // show Metadata View in a modal dialog\r\n\r\n          self.dialog = new DialogView({\r\n            className: 'cs-properties',\r\n            largeSize: true,\r\n            view: metadata\r\n          });\r\n\r\n          self.dialog.show();\r\n\r\n          // UX specs does not have header bar\r\n          self.dialog.ui.header.hide();\r\n          self.dialog.listenTo(metadata, 'metadata:close', function () {\r\n            self.dialog.destroy();\r\n            deferred.resolve();\r\n          });\r\n\r\n          self.dialog.listenTo(metadata, 'metadata:close:without:animation', function () {\r\n            self.dialog.destroy();\r\n            deferred.resolve();\r\n          });\r\n\r\n        }\r\n\r\n      }, function (error) {\r\n        deferred.reject(new CommandError(error));\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getAtLeastOneNode: function (status) {\r\n      if (!status.nodes) {\r\n        return new NodeCollection();\r\n      }\r\n\r\n      if (status.nodes.length === 1 && status.collection) {\r\n        return status.collection;\r\n      } else {\r\n        return status.nodes;\r\n      }\r\n\r\n    }\r\n\r\n  });\r\n\r\n  return PropertiesCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/rename',['csui/models/command', 'csui/utils/commandhelper'\r\n], function (CommandModel, CommandHelper) {\r\n\r\n  var RenameCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'Rename',\r\n      command_key: ['rename', 'Rename'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    // returns promise of node.sync\r\n    rename: function (node, name) {\r\n      return node\r\n          .save({name: name}, {\r\n            wait: true,\r\n            patch: true\r\n          });\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      throw new Error('The \\'Rename\\' action must be handled by the caller.');\r\n    }\r\n\r\n  });\r\n\r\n  return RenameCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/rename.favorite',[\"require\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  \"csui/models/command\", \"csui/utils/commandhelper\"\r\n], function (require, _, $, CommandModel, CommandHelper) {\r\n  'use strict';\r\n\r\n  var RenameFavoriteCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"FavoriteRename\",\r\n      // Inline editing may need more permissions than just for renaming;\r\n      // if it was a problem the login would have to be extended.\r\n      command_key: ['favorite_rename'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/controls/table/inlineforms/favorite/favorite.view'\r\n      ], function (inlineFormFavoriteView) {\r\n        var node = status.nodes && status.nodes.length === 1 && status.nodes.at(0);\r\n\r\n          node.inlineFormView = inlineFormFavoriteView;\r\n          node.set('csuiInlineFormErrorMessage', 'dummy', {silent: true});\r\n          node.unset('csuiInlineFormErrorMessage');\r\n\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(RenameFavoriteCommand, {\r\n\r\n    version: \"1.0\"\r\n\r\n  });\r\n\r\n  return RenameFavoriteCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/reserve',[\r\n  \"require\", \"module\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  'i18n!csui/utils/commands/nls/lang',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\"\r\n], function (require, module, _, $,  publicLang, lang, CommandHelper, NodeCommand) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 2\r\n  });\r\n\r\n  var ReserveCommand = NodeCommand.extend({\r\n    defaults: {\r\n      signature: \"ReserveDoc\",\r\n      command_key: ['reserve', 'ReserveDoc'],\r\n      name: publicLang.CommandNameReserve,\r\n      verb: lang.CommandVerbReserve,\r\n      pageLeavingWarning: lang.ReservePageLeavingWarning,\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForNone: publicLang.ReserveItemsNoneMessage,\r\n        formatForOne: publicLang.ReserveOneItemSuccessMessage,\r\n        formatForTwo: publicLang.ReserveSomeItemsSuccessMessage,\r\n        formatForFive: publicLang.ReserveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: publicLang.ReserveItemsNoneMessage,\r\n        formatForOne: publicLang.ReserveOneItemFailMessage,\r\n        formatForTwo: publicLang.ReserveSomeItemsFailMessage,\r\n        formatForFive: publicLang.ReserveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    _performAction: function (node, options) {\r\n      var deferred = $.Deferred();\r\n      node.isReservedClicked = true;\r\n      require([\r\n        'csui/utils/contexts/factories/user'\r\n      ], function (UserModelFactory) {\r\n        var user = options.context.getModel(UserModelFactory);\r\n        user.ensureFetched()\r\n            .then(function () {\r\n              return CommandHelper.updateNode(node, {\r\n                reserved_user_id: user.get('id')\r\n              });\r\n            })\r\n            .then(deferred.resolve, deferred.reject);\r\n        }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return ReserveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/run.livereport',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var RunLiveReportCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'RunLiveReport'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 299;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'RunReport',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return RunLiveReportCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/sign.out',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel, CommandHelper, Url, lang) {\r\n  'use strict';\r\n\r\n  var ConnectorFactory, routing;\r\n\r\n  var config = _.extend({\r\n    signInPageUrl: 'signin.html'\r\n  }, module.config());\r\n\r\n  var SignOutCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'SignOut',\r\n      name: lang.SignOutCommandName\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      return true;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          context = status.context || options && options.context,\r\n          self = this;\r\n      require([\r\n        'csui/utils/contexts/factories/connector', 'csui/utils/routing'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        routing = arguments[1];\r\n        self._signOut(context)\r\n            .done(deferred.resolve)\r\n            .fail(deferred.reject);\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _signOut: function (context) {\r\n      var connector = context.getObject(ConnectorFactory),\r\n          cgiUrl = new Url(connector.connection.url).getCgiScript();\r\n      // Development HTML pages do not use the OTDS login page\r\n      if (routing.routesWithSlashes()) {\r\n        // Invalidate the authenticated session, get the secure request token\r\n        // for the classic logout page and perform the logout by navigating there\r\n        return connector.makeAjaxCall({\r\n                  url: Url.combine(cgiUrl, 'api/v1/auth/logouttoken')\r\n                })\r\n                .then(function (response) {\r\n                  connector.authenticator.unauthenticate({reason: 'logged-out'});\r\n                  location.href = cgiUrl + '?func=csui.dologout&secureRequestToken=' +\r\n                                  encodeURIComponent(response.token);\r\n                });\r\n      }\r\n\r\n      // Invalidate the authenticated session and navigate to the login\r\n      // page; this is used on the development pages\r\n      connector.authenticator.unauthenticate({reason: 'logged-out'});\r\n      var signInPageUrl = config.signInPageUrl,\r\n          query = location.search;\r\n      query += query ? '&' : '?';\r\n      query += 'nextUrl=' + encodeURIComponent(location.pathname);\r\n      location.href = signInPageUrl + query + location.hash;\r\n      return $.Deferred().resolve().promise();\r\n    }\r\n\r\n  });\r\n\r\n  return SignOutCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/switch.to.classic',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commands/open.classic.page',\r\n  'csui/utils/classic.nodes/classic.nodes'\r\n], function (module, require, _, $, CommandModel, CommandHelper,\r\n    Url, lang, OpenClassicPageCommand, ClassicNodes) {\r\n  'use strict';\r\n\r\n  var ConnectorFactory, NodeModelFactory;\r\n\r\n  var config = _.extend({\r\n    enabled: true,\r\n    // Allow defining a value specific for this command\r\n    openInNewTab: null\r\n  }, module.config());\r\n  // If no specific value was set, use the value for all Classic UI pages\r\n  if (config.openInNewTab == null) {\r\n    config.openInNewTab = OpenClassicPageCommand.openInNewTab;\r\n  }\r\n\r\n  var SwitchToClassicCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'SwitchToClassic',\r\n      name: lang.SwitchToClassicCommandName\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      if (!config.enabled) {\r\n        return false;\r\n      }\r\n      var context = status.context || options && options.context,\r\n          applicationScope = context.getModel('applicationScope');\r\n      applicationScope = applicationScope && applicationScope.get('id');\r\n      return applicationScope === '' || applicationScope === 'node';\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          context = status.context || options && options.context,\r\n          target = config.openInNewTab && window.open('', '_blank') || window,\r\n          self = this;\r\n      target.focus();\r\n      require(['csui/utils/contexts/factories/connector',\r\n               'csui/utils/contexts/factories/node'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        NodeModelFactory = arguments[1];\r\n        target.location.href = self._getUrl(context, status);\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getUrl: function (context, status) {\r\n      var connector = context.getObject(ConnectorFactory),\r\n          cgiUrl = new Url(connector.connection.url).getCgiScript(),\r\n          urlQueryParameters = this._getUrlQueryParameters(context, status),\r\n          urlQuery = Url.combineQueryString(urlQueryParameters);\r\n      return Url.appendQuery(cgiUrl, urlQuery);\r\n    },\r\n\r\n    _getUrlQueryParameters: function (context, status) {\r\n      var node = CommandHelper.getJustOneNode(status) ||\r\n                 context.getModel(NodeModelFactory),\r\n          classicNode = ClassicNodes.find(function (item) {\r\n            return item.matchRules(node, item.attributes);\r\n          }),\r\n          urlQuery    = classicNode && classicNode.get(\"urlQuery\"),\r\n          parameters;\r\n      if (node !== undefined && node.get('id') > 0) {\r\n        parameters = {\r\n          func: 'll',\r\n          objId: node.get('id')\r\n        };\r\n        if (urlQuery) {\r\n          if (typeof urlQuery === 'string') {\r\n            parameters = ClassicNodes._replaceParameters(classicNode.get(\"urlQuery\"),\r\n                node.attributes);\r\n          } else if (typeof urlQuery === 'function') {\r\n            parameters = urlQuery(node);\r\n          }\r\n        } else {\r\n          if (node.get('container')) {\r\n            parameters.objAction = 'browse';\r\n            parameters.viewType = 1;\r\n          } else {\r\n            parameters.objAction = 'properties';\r\n          }\r\n        }\r\n      } else {\r\n        parameters = {};\r\n      }\r\n      return parameters;\r\n    }\r\n\r\n  });\r\n\r\n  return SwitchToClassicCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/unreserve',[\r\n  'i18n!csui/utils/commands/nls/lang',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/utils/commands/node'\r\n], function (publicLang, lang, CommandHelper, NodeCommand) {\r\n  'use strict';\r\n\r\n  var UnreserveCommand = NodeCommand.extend({\r\n    defaults: {\r\n      signature: 'UnreserveDoc',\r\n      command_key: ['unreserve', 'UnreserveDoc'],\r\n      name: publicLang.CommandNameUnreserve,\r\n      verb: lang.CommandVerbUnreserve,\r\n      pageLeavingWarning: lang.UnreservePageLeavingWarning,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: publicLang.UnreserveItemsNoneMessage,\r\n        formatForOne: publicLang.UnreserveOneItemSuccessMessage,\r\n        formatForTwo: publicLang.UnreserveSomeItemsSuccessMessage,\r\n        formatForFive: publicLang.UnreserveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: publicLang.UnreserveItemsNoneMessage,\r\n        formatForOne: publicLang.UnreserveOneItemFailMessage,\r\n        formatForTwo: publicLang.UnreserveSomeItemsFailMessage,\r\n        formatForFive: publicLang.UnreserveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    _performAction: function (node, options) {\r\n      node.isUnreservedClicked = true;\r\n      return CommandHelper.updateNode(node, {\r\n        reserved_user_id: null\r\n      });\r\n    }\r\n  });\r\n\r\n  return UnreserveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/user.profile',[\r\n  'require', 'csui/lib/jquery', 'csui/models/command', 'csui/utils/base',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (require, $, CommandModel, base, lang) {\r\n  'use strict';\r\n\r\n  var UserProfileCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'UserProfile',\r\n      name: lang.UserProfileCommandName\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var toolItem = status.toolItem || options && options.toolItem;\r\n      if (toolItem) {\r\n        var context = status.context || options && options.context,\r\n            user = context.getModel('user'),\r\n            name = base.formatMemberName(user);\r\n        toolItem.set('name', name);\r\n      }\r\n      return true;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          context = status.context || options && options.context;\r\n      require([\r\n        'csui/utils/contexts/factories/user',\r\n        'esoc/controls/userwidget/userwidget.view'\r\n      ], function (UserModelFactory, UserWidgetView) {\r\n        var user = context.getModel(UserModelFactory),\r\n            userId = user.get('id'),\r\n            userWidgetView = new UserWidgetView({\r\n              model: user,\r\n              connector: user.connector,\r\n              userid: userId,\r\n              context: context,\r\n              baseElement: undefined,\r\n              showUserProfileLink: true,\r\n              showMiniProfile: false,\r\n              loggedUserId: userId\r\n            });\r\n        userWidgetView.showUserProfileDialog();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return UserProfileCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/versions/delete',[\r\n  'require', 'module', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/versions/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/utils/commands/delete',\r\n], function (require, module, _, $, versionLang, CommandHelper, DeleteCommand) {\r\n  'use strict';\r\n\r\n  var VersionDeleteCommand = DeleteCommand.extend({\r\n    defaults: {\r\n      signature: 'VersionDelete',\r\n      command_key: ['versions_delete'],\r\n      name: versionLang.CommandNameVersionDelete,\r\n      verb: versionLang.CommandVerbVersionDelete,\r\n      pageLeavingWarning: versionLang.DeleteVersionPageLeavingWarning,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: versionLang.DeleteVersionItemsNoneMessage,\r\n        formatForOne: versionLang.DeleteVersionOneItemSuccessMessage,\r\n        formatForTwo: versionLang.DeleteVersionSomeItemsSuccessMessage,\r\n        formatForFive: versionLang.DeleteVersionManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: versionLang.DeleteVersionItemsNoneMessage,\r\n        formatForOne: versionLang.DeleteVersionOneItemFailMessage,\r\n        formatForTwo: versionLang.DeleteVersionSomeItemsFailMessage,\r\n        formatForFive: versionLang.DeleteVersionManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      if (!VersionDeleteCommand.__super__.enabled.apply(this, arguments)) {\r\n        return false;\r\n      }\r\n      var selectedVersions = CommandHelper.getAtLeastOneNode(status);\r\n      return selectedVersions.length > 0 &&\r\n             status.container && status.container.versions && status.container.versions.allModels &&\r\n             selectedVersions.length < status.container.versions.allModels.length;\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var versions = CommandHelper.getAtLeastOneNode(status);\r\n      status.originatingView.blockActions = false;\r\n      return {\r\n        title: versionLang.DeleteCommandConfirmDialogTitle,\r\n        message: versions.length === 1 ?\r\n                 _.str.sformat(versionLang.VersionDeleteCommandConfirmDialogSingleMessage,\r\n                     versions.at(0).get('version_number_name'),\r\n                     status.container.get('name')) :\r\n                 _.str.sformat(versionLang.VersionDeleteCommandConfirmDialogMultipleMessage,\r\n                     versions.length)\r\n      };\r\n    },\r\n\r\n    startGlobalMessage: function (uploadCollection) {\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (GlobalMessage) {\r\n        GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n          oneFileTitle: versionLang.DeletingOneVersion,\r\n          oneFileSuccess: versionLang.DeleteVersionOneItemSuccessMessage,\r\n          multiFileSuccess: versionLang.DeleteVersionManyItemsSuccessMessage,\r\n          oneFilePending: versionLang.DeletingOneVersion,\r\n          multiFilePending: versionLang.DeleteVersions,\r\n          oneFileFailure: versionLang.DeleteVersionOneItemFailMessage,\r\n          multiFileFailure: versionLang.DeleteVersionManyItemsFailMessage2,\r\n          someFileSuccess: versionLang.DeleteVersionSomeItemsSuccessMessage,\r\n          someFilePending: versionLang.DeletingSomeVersions,\r\n          someFileFailure: versionLang.DeleteVersionSomeItemsFailMessage2,\r\n          enableCancel: false\r\n        });\r\n      });\r\n    }\r\n  });\r\n\r\n  return VersionDeleteCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/versions/download',['csui/utils/commands/download', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (DownloadCommand, Url, lang) {\r\n  'use strict';\r\n\r\n  var VersionDownloadCommand = DownloadCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'VersionDownload',\r\n      command_key: ['versions_download'],\r\n      name: lang.CommandNameDownload,\r\n      verb: lang.CommandVerbDownload,\r\n      doneVerb: lang.CommandDoneVerbDownload,\r\n      scope: 'single'\r\n    },\r\n\r\n    _getContentUrl: function (node, options, action, token) {\r\n      var url = Url.combine(node.connector.connection.url, \"nodes\",\r\n          node.get('id'), \"versions\", node.get('version_number'), \"content\");\r\n      return url + \"?action=\" + action + \"&token=\" + encodeURIComponent(token);\r\n    }\r\n\r\n  });\r\n\r\n  return VersionDownloadCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/versions/open',['csui/utils/commands/open','csui/utils/url'], function (OpenCommand, Url) {\r\n  'use strict';\r\n\r\n  // Support for both node and version models is provided\r\n  // by the open command plugins themselves\r\n  var VersionOpenCommand = OpenCommand.extend({\r\n    defaults: {\r\n      signature: 'VersionOpen',\r\n      command_key: ['versions_open'],\r\n      scope: 'single'\r\n    },\r\n\r\n    _getContentUrl: function (node, options, action, token) {\r\n      var url = Url.combine(node.connector.connection.url, \"nodes\",\r\n          node.get('id'), \"versions\", node.get('version_number'), \"content\");\r\n      return url + \"?action=\" + action + \"&token=\" + encodeURIComponent(token);\r\n    }\r\n  });\r\n\r\n  return VersionOpenCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/versions/properties',['csui/utils/commands/properties', 'csui/models/version'\r\n], function (PropertiesCommand, VersionModel) {\r\n  'use strict';\r\n\r\n  var VersionPropertiesCommand = PropertiesCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'VersionProperties',\r\n      command_key: 'versions_properties',\r\n      scope: 'multiple',\r\n      commands: 'csui/utils/commands/versions'\r\n    },\r\n    \r\n    _getAtLeastOneNode: function (status) {\r\n      // for metadata version, use the collection passed in\r\n      if (status.collection && status.nodes.length === 1) {\r\n        return status.collection;\r\n      }\r\n      return status.nodes;\r\n    }\r\n\r\n  });\r\n\r\n  return VersionPropertiesCommand;\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commands/versions',['csui/lib/underscore', 'csui/models/commands',\r\n  'csui/utils/commands/versions/delete',\r\n  'csui/utils/commands/versions/download',\r\n  'csui/utils/commands/versions/open',\r\n  'csui/utils/commands/versions/properties',\r\n  // Load extra commands to be added to the common collection\r\n  'csui-ext!csui/utils/commands/versions'\r\n], function (_, CommandCollection,\r\n    VersionDeleteCommand,\r\n    VersionDownloadCommand,\r\n    VersionOpenCommand,\r\n    VersionPropertiesCommand,\r\n    extraCommands) {\r\n  'use strict';\r\n  \r\n  var commands = new CommandCollection([\r\n    new VersionDeleteCommand(),\r\n    new VersionDownloadCommand(),\r\n    new VersionOpenCommand(),\r\n    new VersionPropertiesCommand()\r\n  ]);\r\n  \r\n  if (extraCommands) {\r\n    commands.add(\r\n        _.chain(extraCommands)\r\n            .flatten(true)\r\n            .map(function (Command) {\r\n              return new Command();\r\n            })\r\n            .value()\r\n    );\r\n  }\r\n\r\n  return commands;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/filter',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/log',\r\n  'csui/utils/base', 'csui/utils/commandhelper', 'csui/models/command'\r\n], function (module, _, $, log, base, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var FilterCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'Filter'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var config = module.config();\r\n      if (config.enabled === false) {\r\n        return false;\r\n      }\r\n      // Fix me: obtain these details from REST API, results.data.columns\r\n      var isContainer = status.container && !!status.container.get('container');\r\n      return !!isContainer && this._isSupported(status.container);\r\n    },\r\n\r\n    _isSupported: function (container) {\r\n      // TODO: Make this extensible. not supported for Compound Document and Collection.\r\n      var notSupportedObjects = [136, 298],\r\n          support             = $.inArray(container.get('type'), notSupportedObjects) === -1;\r\n      return support;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      throw new Error('The \\'Filter\\' action must be handled by the caller.');\r\n    }\r\n  });\r\n\r\n  return FilterCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/description.toggle',[\"require\", 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\",\r\n  'csui/utils/command.error'\r\n], function (require, $, base, _, lang, CommandHelper, NodeCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var accessibleTable = /\\baccessibleTable\\b(?:=([^&]*)?)?/i.exec(location.search);\r\n  accessibleTable = accessibleTable && accessibleTable[1] !== 'false';\r\n\r\n  var DescriptionToggleCommand = NodeCommand.extend({\r\n\r\n    defaults: {\r\n      signature: \"ToggleDescription\",\r\n      command_key: ['description', 'description'],\r\n      scope: \"single\",\r\n      name: lang.CommandDescriptionToggle\r\n    },\r\n\r\n    //only one node allowed at a time\r\n    enabled: function (status, options) {\r\n      if (!accessibleTable && status.collection && !status.thumbnailViewState) {\r\n        if (status.originatingView && status.originatingView.options.showDescriptions) {\r\n          status.toolItem.attributes.icon = \"icon icon-description-toggle icon-description-shown\";\r\n          status.toolItem.attributes.name = lang.CommandHideDescription;\r\n        }\r\n        var nodeWithDescription = status.collection.find(function (node) {\r\n          var descr = node.get('description');\r\n          return !!descr;\r\n        });\r\n        return nodeWithDescription !== undefined;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var originatingView = status.originatingView;\r\n      var langStr;\r\n      var menuSelector = '.csui-configuration-view .binf-dropdown-menu li[data-csui-command=\"toggledescription\"] a';\r\n      if (originatingView.options.showDescriptions) {\r\n        originatingView.options.showDescriptions = false;\r\n        langStr = lang.CommandShowDescription;\r\n        originatingView.$el.find('.icon-description-toggle').addClass('icon-description-hidden')\r\n            .removeClass('icon-description-shown')\r\n            .parent().attr('title', langStr).attr('aria-label', langStr);\r\n      } else {\r\n        originatingView.options.showDescriptions = true;\r\n        langStr = lang.CommandHideDescription;\r\n        originatingView.$el.find('.icon-description-toggle').removeClass('icon-description-hidden')\r\n            .addClass('icon-description-shown')\r\n            .parent().attr('title', langStr).attr('aria-label', langStr);\r\n      }\r\n      originatingView.$el.find(menuSelector).attr('title', langStr)\r\n          .contents().first().replaceWith(langStr);  // after the text, there can be right arrow\r\n      originatingView.trigger('csui.description.toggled',\r\n          {showDescriptions: originatingView.options.showDescriptions});\r\n    }\r\n  });\r\n\r\n  return DescriptionToggleCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/thumbnail.toggle',[\"module\", \"require\", 'csui/lib/jquery', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/lib/underscore',\r\n  'csui/models/command',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, $, backbone, Marionette, _, CommandModel, lang) {\r\n  'use strict';\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    enableGridView: false\r\n  });\r\n  var TaskQueue, Thumbnail,\r\n      ThumbnailCommand = CommandModel.extend({\r\n\r\n        defaults: {\r\n          signature: \"Thumbnail\",\r\n          command_key: ['thumbnail', 'thumbnail'],\r\n          scope: \"single\",\r\n          name: 'Thumbnail'\r\n        },\r\n\r\n        //only one node allowed at a time\r\n        enabled: function (status, options) {\r\n          if (status.collection && config.enableGridView) {\r\n            if (status.thumbnailViewState) {\r\n              status.toolItem.attributes.icon = \"icon icon-switch_list\";\r\n              status.toolItem.attributes.name = lang.ListViewTitle;\r\n              status.toolItem.attributes.title = lang.ListViewTitle;\r\n            }\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        },\r\n\r\n        execute: function (status, options) {\r\n          var originatingView = status.originatingView || (options && options.originatingView);\r\n          var langStr;\r\n          var menuSelector = '.csui-configuration-view .binf-dropdown-menu li[data-csui-command=\"thumbnail\"] a';\r\n          if (originatingView.thumbnailViewState) {\r\n            langStr = lang.ThumbnailTitle;\r\n            originatingView.$el.find('.binf-glyphicon-th-list').removeClass(\r\n                \"binf-glyphicon-th-list\").addClass(\"binf-glyphicon-th-large\");\r\n            originatingView.$el.find('.binf-glyphicon-th-large')\r\n                .parent().attr('title', langStr).attr('aria-label', langStr);\r\n          } else {\r\n            langStr = lang.ListViewTitle;\r\n            originatingView.$el.find('.binf-glyphicon-th-large').addClass(\r\n                \"binf-glyphicon-th-list\").removeClass(\"binf-glyphicon-th-large\");\r\n            originatingView.$el.find('.binf-glyphicon-th-list')\r\n                .parent().attr('title', langStr).attr('aria-label', langStr);\r\n          }\r\n          originatingView.$el.find(menuSelector).attr('title', langStr)\r\n              .contents().first().replaceWith(langStr);  // after the text, there can be right arrow\r\n        }\r\n      });\r\n\r\n  return ThumbnailCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/save.filter',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/models/command', 'csui/models/node/node.model'\r\n], function (module, require, _, $, lang, CommandModel, NodeModel) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ConnectorFactory, NextNodeModelFactory, nodeLinks;\r\n\r\n  var SaveFilterCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"SaveFilter\",\r\n      command_key: ['savefilter', 'SaveFilter'],\r\n      name: lang.CommandNameSaveFilter,\r\n      verb: lang.CommandVerbSaveFilter\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n      status.suppressSuccessMessage = true;\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/next.node',\r\n        'csui/utils/node.links/node.links'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        ConnectorFactory = arguments[1];\r\n        NextNodeModelFactory = arguments[2];\r\n        nodeLinks = arguments[3];\r\n\r\n        self._selectSaveFilterOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedNodes = status.nodes,\r\n                  facets        = status.facets,\r\n                  targetFolder  = selectedOptions.nodes[0],\r\n                  filterName    = selectedOptions.filterName;\r\n              var url = status.connector.connection.url.replace('/v1', '/v2');\r\n              var selectedFacets = [];\r\n              $.each(facets.filters, function (idx, facet) {\r\n                var facettypes = [], facetArrayType = [];\r\n                if (facet.values instanceof Array) {\r\n                  $.each(facet.values, function (index, facettype) {\r\n                    facettypes.push(facettype.id);\r\n                  });\r\n                  facetArrayType.push(facet.id);\r\n                  facetArrayType.push(facettypes);\r\n                  selectedFacets.push(facetArrayType);\r\n                }\r\n              });\r\n              var ajaxFormData = {\r\n                'type': 899,\r\n                'location_id': selectedNodes.models[0].get(\"id\"),\r\n                'name': filterName,\r\n                'parent_id': targetFolder.get(\"id\"),\r\n                'selected_facets': selectedFacets\r\n              };\r\n              var saveFilterOptions = {\r\n                url: url + '/nodes',\r\n                type: 'POST',\r\n                data: ajaxFormData,\r\n                contentType: 'application/x-www-form-urlencoded'\r\n              };\r\n\r\n              status.connector.makeAjaxCall(saveFilterOptions)\r\n                  .done(function (resp) {\r\n                    deferred.resolve(resp.results);\r\n                    var virtualFolderId   = resp.results.data.properties.id,\r\n                        virtualFolderNode = new NodeModel({id: virtualFolderId},\r\n                            {connector: context.getObject(ConnectorFactory)}),\r\n                        name              = resp.results.data.properties.name,\r\n                        msg               = _.str.sformat(lang.SaveFilterCommandSuccessfully, name),\r\n                        options           = {\r\n                          context: context,\r\n                          nextNodeModelFactory: NextNodeModelFactory,\r\n                          link_url: nodeLinks.getUrl(virtualFolderNode),\r\n                          targetFolder: virtualFolderNode\r\n                        },\r\n                        dets; // leave details as undefined;\r\n                    GlobalMessage.showMessage('success_with_link', msg, dets, options);\r\n                  })\r\n                  .fail(function (error) {\r\n                    deferred.reject(error);\r\n                    if (error && error.responseText) {\r\n                      var errorObj = JSON.parse(error.responseText);\r\n                      GlobalMessage.showMessage('error', errorObj.error);\r\n                    }\r\n                  });\r\n\r\n            }).fail(function (error) {\r\n          deferred.reject(error);\r\n        });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectSaveFilterOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n          function (NodePicker) {\r\n            var numNodes = status.nodes.length;\r\n            var pickerOptions = _.extend({\r\n              command: 'savefilter',\r\n              selectableTypes: [-1],\r\n              showAllTypes: true,\r\n              orderBy: 'type asc',\r\n              dialogTitle: lang.DialogTitleSaveFilter,\r\n              initialContainer: status.container || status.nodes.models[0].parent,\r\n              initialSelection: status.nodes,\r\n              startLocation: '',\r\n              includeCombineProperties: (numNodes === 1),\r\n              propertiesSeletor: false,\r\n              saveFilter: true,\r\n              globalSearch: true,\r\n              context: options ? options.context : status.context,\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true\r\n            }, status);\r\n\r\n            self.nodePicker = new NodePicker(pickerOptions);\r\n\r\n            self.nodePicker\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                })\r\n                .fail(function (error) {\r\n                  deferred.reject.apply(deferred, arguments);\r\n                });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return SaveFilterCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/maximize.widget.view',['require', 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/models/command'\r\n], function (require, $, base, _, lang, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var ExpandNodestableViewCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"MaximizeWidgetView\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var supportMaximizeWidget = $(\"body\").hasClass(\"csui-support-maximize-widget\");\r\n      return (supportMaximizeWidget && $(\"body\").hasClass(\"csui-maximized-widget-mode\") === false);\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      status.context.trigger(\"maximize:widget\", {widgetView: status.originatingView});\r\n    }\r\n  });\r\n\r\n  return ExpandNodestableViewCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/restore.widget.size',['require', 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/models/command'\r\n], function (require, $, base, _, lang, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var NormalizeNodestableViewCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"RestoreWidgetViewSize\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n\r\n      var isMaximizeMode = this.checkMaximizeMode(status);\r\n\r\n      if (isMaximizeMode) {\r\n        return false; //When showWidgetInMaxMode then disable the RestoreWidgetView\r\n      } else {\r\n        var supportMaximizeWidget = $(\"body\").hasClass(\"csui-support-maximize-widget\");\r\n        return (supportMaximizeWidget && $(\"body\").hasClass(\"csui-maximized-widget-mode\") === true);\r\n      }\r\n\r\n    },\r\n\r\n    checkMaximizeMode: function (status) {\r\n      return status && status.context && status.context.perspective &&\r\n             status.context.perspective.get(\"showWidgetInMaxMode\");\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      status.context.trigger(\"restore:widget:size\", {widgetView: status.originatingView});\r\n    }\r\n  });\r\n\r\n  return NormalizeNodestableViewCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/apply.permission',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command','csui/utils/commandhelper',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel,\r\n    CommandHelper, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var ApplyPermissionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'ApplyPermission'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (GlobalMessage) {\r\n        if (true) {\r\n          deferred.resolve();\r\n          GlobalMessage.showMessage('success', \"Applied permissions to sub-items\");\r\n        } else {\r\n          deferred.reject();\r\n          GlobalMessage.showMessage('error', \"Failed to apply permissions to sub-items\");\r\n        }\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return ApplyPermissionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/edit.permission',[\r\n  'module', 'require', 'csui/lib/underscore', \"csui/lib/backbone\", 'csui/lib/jquery',\r\n  'csui/utils/base',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/command.error',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, Backbone, $, base, CommandModel,\r\n    CommandHelper, CommandError, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var EditPermissionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'EditPermission',\r\n      command_key: ['editpermissions']\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var permissionModel = status.model,\r\n          collection      = permissionModel && permissionModel.collection,\r\n          right_id        = permissionModel && permissionModel.get('right_id'),\r\n          permissionType  = permissionModel && permissionModel.get('type'),\r\n          filterId        = status.filterId;\r\n\r\n      return !filterId && permissionType && (right_id || permissionType === \"public\") &&\r\n             collection &&\r\n             collection.options && collection.options.node && !!collection.options.node.get('id') &&\r\n             (collection.options.authenticatedUserPermissions &&\r\n              collection.options.authenticatedUserPermissions.hasEditPermissionRights() ||\r\n              status.admin_permissions);\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self            = this,\r\n          deferred        = $.Deferred(),\r\n          permissionModel = status.model,\r\n          collection      = permissionModel.collection,\r\n          targetView      = status.targetView;\r\n\r\n      self.targetView = targetView;\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      var failureMsg = this._getMessageWithUserDisplayName(lang.EditPermissionCommandFailMessage,\r\n          permissionModel);\r\n      if (collection) {\r\n        permissionModel.nodeId = collection.options && collection.options.node &&\r\n                                 collection.options.node.get('id');\r\n\r\n        require(\r\n            ['csui/widgets/permissions/impl/edit/edit.permission.helper',\r\n              'csui/utils/contexts/factories/user', 'csui/controls/globalmessage/globalmessage',\r\n              'csui/utils/permissions/permissions.precheck'\r\n            ],\r\n            function (EditPermissionHelper, UserModelFactory, GlobalMessage, PermissionPreCheck) {\r\n              var user = status.originatingView.context.getModel(UserModelFactory);\r\n              self.loginUserId = user.get('id');\r\n              self.editPermissionHelper = new EditPermissionHelper({\r\n                permissionModel: permissionModel,\r\n                popoverPlacement: \"left\",\r\n                popoverAtBodyElement: status.originatingView ?\r\n                                      !status.originatingView.options.isExpandedView : true,\r\n                popoverTragetElement: status.targetView.permissions.$el,\r\n                readonly: false,\r\n                originatingView: status.originatingView,\r\n                applyTo: status.applyTo\r\n              });\r\n              self.editPermissionHelper._showSelectPermissionLevelPopover();\r\n              self.editPermissionHelper.listenTo(self.editPermissionHelper,\r\n                  \"permissions:selected\", function (userSelection) {\r\n                    var saveAttr = {\r\n                      \"permissions\": userSelection.permissions,\r\n                      \"apply_to\": userSelection.apply_to,\r\n                      \"include_sub_types\": userSelection.apply_to > 0 ?\r\n                                           PermissionPreCheck.includeSubTypes() : []\r\n                    };\r\n                    if (userSelection.right_id) {\r\n                      saveAttr.right_id = userSelection.right_id;\r\n                    }\r\n                    permissionModel.save(saveAttr, {\r\n                      patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n                      // mixin makes it a PUT again (backbone would use PATCH)\r\n                      wait: true,\r\n                      silent: true\r\n                    }).done(function (response) {\r\n                      //Fetch effective permission of current logged-in user\r\n                      collection.options.authenticatedUserPermissions.fetch()\r\n                          .done(function () {                            \r\n                            permissionModel.set(saveAttr, {silent: true});\r\n                            status.originatingView.trigger('permission:changed', status);\r\n                            self.editPermissionHelper.destroy();\r\n                            self.editPermissionHelper.unblockActions();\r\n                            /*if (permissionModel.mustRefreshAfterPut !== false) {\r\n                              return permissionModel.fetch();\r\n                            }*/\r\n                            deferred.resolve();\r\n                          })\r\n                          .fail(function (error) {\r\n                            var commandError = error ? new CommandError(error, permissionModel) :\r\n                                               error;\r\n                            deferred.reject(permissionModel, commandError);\r\n                          });\r\n                      var message;\r\n                      if (response.results.success > 0 && response.results.failure === 0) {\r\n                        message = _.str.sformat(\r\n                            response.results.success === 1 ? lang.AppliedPermissionsOneSuccess :\r\n                            lang.AppliedPermissionsOnlySuccess,\r\n                            response.results.success);\r\n                      } else if (response.results.success > 0 && response.results.failure > 0) {\r\n                        message = _.str.sformat(lang.AppliedPermissionsSuccessAndFailure,\r\n                            response.results.success, response.results.failure);\r\n                      } else if (response.results.success === 0 && response.results.failure > 0) {\r\n                        message = _.str.sformat(\r\n                            response.results.failure === 1 ? lang.AppliedPermissionsOneFailure :\r\n                            lang.AppliedPermissionsOnlyFailure,\r\n                            response.results.failure);\r\n                      }\r\n                      var errObject  = Backbone.Model.extend({\r\n                            defaults: {\r\n                              name: \"\",\r\n                              state: 'pending',\r\n                              commandName: 'ViewPermission'\r\n                            }\r\n                          }),\r\n                          errObjects = [];\r\n\r\n                      var failedfilesCollection = Backbone.Collection.extend({\r\n                        model: errObject\r\n                      });\r\n                      var errCollection = new failedfilesCollection();\r\n\r\n                      for (var i = 0;\r\n                           response.results.failure > 0 && i < response.results.data.length; i++) {\r\n                        errObjects[i] = new errObject({\r\n                          name: response.results.data[i].name,\r\n                          mime_type: '',\r\n                          state: 'rejected'\r\n                        });\r\n                        errCollection.add(errObjects[i]);\r\n                      }\r\n                      var succesfull_count = (response.results.success > 0 &&\r\n                                              response.results.failure > 0) ?\r\n                                             response.results.success : '',\r\n                          succes_msg       = '';\r\n                      var langTitle = _.str.sformat(lang.ApplyingManyItemsSuccessMessage,\r\n                          succesfull_count);\r\n                      var success_msg = succesfull_count > 0 ? langTitle : ' ';\r\n\r\n                      response.results.failure > 0 ?\r\n                      GlobalMessage.showPermissionApplyingProgress(errCollection, {\r\n                        oneFileFailure: success_msg + lang.ApplyingOneItemFailMessage,\r\n                        someFileFailure: success_msg +\r\n                                         _.str.sformat(lang.ApplyingManyItemsFailMessage2,\r\n                                             errObjects.length),\r\n                        multiFileFailure: success_msg +\r\n                                          _.str.sformat(lang.ApplyingManyItemsFailMessage2,\r\n                                              errObjects.length)\r\n                      }) : '';\r\n\r\n                      (response.results.success > 0 &&\r\n                       response.results.failure <= 0) ?\r\n                      GlobalMessage.showMessage('success',\r\n                          message ? message : lang.AppliedPermissions) : '';\r\n                    }).fail(function (error) {\r\n                      var commandError = error ? new CommandError(error, permissionModel) :\r\n                                         error;\r\n                      GlobalMessage.showMessage('error', commandError);\r\n                      deferred.reject(permissionModel, commandError);\r\n                    });\r\n                  });\r\n\r\n              self.editPermissionHelper.listenTo(self.editPermissionHelper,\r\n                  \"closed:permission:level:popover\", function () {\r\n                    deferred.reject(permissionModel);\r\n                  });\r\n            });\r\n      } else {\r\n        return deferred.reject(\r\n            new CommandError(failureMsg, {errorDetails: lang.undefinedCollection}));\r\n      }\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (unformattedMsg, permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      } else if (permissionModel.get(\"type\") === \"public\") {\r\n        displayName = lang.publicAccess;\r\n      }\r\n      var msg = _.str.sformat(unformattedMsg, displayName);\r\n      return msg;\r\n    }\r\n  });\r\n\r\n  return EditPermissionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/change.owner.permission',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/jquery', \"csui/lib/marionette\",\r\n  'csui/models/command', 'csui/utils/command.error',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, _, $, Marionette, CommandModel, CommandError, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var ChangeOwnerPermissionCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'ChangeOwnerPermission',\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var permissionModel = status.model,\r\n          collection      = permissionModel && permissionModel.collection,\r\n          permissionType  = permissionModel && permissionModel.get('type'),\r\n          enabled         = (permissionType &&\r\n                            ((permissionType === \"owner\" &&\r\n                              permissionModel.get('permissions') !== null) ||\r\n                             permissionType === \"group\")) &&\r\n                            collection && collection.options && collection.options.node &&\r\n                            collection.options.node.get('id') &&\r\n                            (collection.options.authenticatedUserPermissions &&\r\n                             collection.options.authenticatedUserPermissions.hasEditPermissionRights() ||\r\n                             status.admin_permissions),\r\n          title           = (enabled && permissionType === \"owner\") ?\r\n                            lang.ChangeOwnerPermissionCommand :\r\n                            lang.ChangeOwnerGroupPermissionCommand;\r\n      if (permissionType === \"group\" && status.toolItem.attributes &&\r\n          status.toolItem.attributes.icon) {\r\n        status.toolItem.attributes.icon = \"icon icon-group-change\";\r\n      }\r\n      //set title\r\n      status.toolItem && status.toolItem.set('name', title);\r\n\r\n      return enabled;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred          = $.Deferred(),\r\n          permissionModel   = status.model,\r\n          permissionType    = permissionModel.get(\"type\"),\r\n          collection        = permissionModel.collection,\r\n          userExpandDetails = permissionModel.get(\"right_id_expand\"),\r\n          currentRow        = status.targetView.$el,\r\n          self              = this;\r\n      self.targetView = status.originatingView.permissionsContentView;\r\n      if (collection) {\r\n        permissionModel.nodeId = collection.options && collection.options.node &&\r\n                                 collection.options.node.get('id');\r\n        require(['csui/controls/table/inlineforms/permissions/user.picker/user.picker.view',\r\n              'csui/utils/contexts/factories/member', 'csui/models/permission/nodepermission.model',\r\n              'csui/utils/contexts/factories/user', 'csui/utils/permissions/permissions.precheck'],\r\n            function (UserPickerView, MemberModelFactory, NodePermissionModel, UserModelFactory,\r\n                PermissionPreCheck) {\r\n              var user = status.originatingView.context.getModel(UserModelFactory);\r\n              self.loginUserId = user.get('id');\r\n              var memberFilter = status.context.getModel(MemberModelFactory);\r\n              var userPickerView = new UserPickerView({\r\n                context: status.options ? status.options.context : status.context,\r\n                userPickerModel: memberFilter,\r\n                currentRow: currentRow,\r\n                connector: status.connector,\r\n                memberFilter: {type: (permissionType === 'owner' ? [0] : [1])}\r\n              });\r\n              currentRow.addClass(\"csui-changeowner-permission\");\r\n              currentRow.find(\".member-info\").addClass(\"binf-hidden\");\r\n              var userpickerRegion = new Marionette.Region({\r\n                el: currentRow.find(\".csui-inline-owner-change\")\r\n              });\r\n              userpickerRegion.show(userPickerView);\r\n              userPickerView.listenTo(userPickerView,\r\n                  \"change:completed\", function (permissions) {\r\n                    userpickerRegion.currentView.destroy();\r\n                    deferred.resolve();\r\n                  });\r\n              userPickerView.listenTo(userPickerView, \"member:selected:save\",\r\n                  function (args) {\r\n                    var permissions = NodePermissionModel.getReadPermissions(),\r\n                        saveAttr    = {\r\n                          \"permissions\": permissionModel.get(\"permissions\"),\r\n                          \"right_id\": args.get(\"id\"),\r\n                          \"include_sub_types\": PermissionPreCheck.includeSubTypes()\r\n                        };\r\n                    permissionModel.set({'right_id_expand': args}, {silent: true});\r\n                    permissionModel.save(saveAttr, {\r\n                      patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n                      // mixin makes it a PUT again (backbone would use PATCH)\r\n                      wait: true,\r\n                      silent: true\r\n                    }).done(function () {\r\n                      //Fetch effective permission of current logged-in user\r\n                      collection.options.authenticatedUserPermissions.fetch()\r\n                          .done(function (model) {\r\n                            permissionModel.set(saveAttr, {silent: true});\r\n                            userpickerRegion.currentView.destroy();\r\n                            currentRow.removeClass(\"csui-changeowner-permission\");\r\n                            currentRow.find(\".member-info\").removeClass(\r\n                                \"binf-hidden\");\r\n\r\n                            deferred.resolve();\r\n                          })\r\n                          .fail(function (error) {\r\n                            var commandError = error ? new CommandError(error, permissionModel) :\r\n                                               error;\r\n                            deferred.reject(permissionModel, commandError);\r\n                          });\r\n                    }).fail(function (error) {\r\n                      var commandError = error ? new CommandError(error, permissionModel) :\r\n                                         error;\r\n                      permissionModel.set({'right_id_expand': userExpandDetails}, {silent: true});\r\n                      deferred.reject(permissionModel, commandError);\r\n                    });\r\n                  });\r\n            });\r\n      } else {\r\n        var msg = _.str.sformat(lang.EditPermissionCommandFailMessage, lang.Owner);\r\n        return deferred.reject(\r\n            new CommandError(msg, {errorDetails: lang.undefinedCollection}));\r\n      }\r\n      return deferred.promise();\r\n    }\r\n  });\r\n  return ChangeOwnerPermissionCommand;\r\n});\n","csui.define('csui/utils/commands/permissions/delete.permission',[\r\n  'module', 'require', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/utils/base', 'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/utils/command.error', 'csui/utils/commands/confirmable',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, $, _, Backbone, base, CommandModel, CommandHelper,\r\n    CommandError, ConfirmableCommand, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var GlobalMessage;\r\n\r\n  var DeletePermissionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'DeletePermission',\r\n      scope: 'single'\r\n    },\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    _getConfirmTemplate: function (status, options) {\r\n      return _.template(lang.DeleteCommandConfirmDialogHtml);\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var permissionModel      = status.model,\r\n          confirmDialogMessage = lang.DeletePermissionCommandConfirmDialogSingleMessage;\r\n      if (permissionModel.get(\"type\") === \"public\") {\r\n        confirmDialogMessage = lang.DeletePermissionCommandConfirmDialogPublicAccessMessage;\r\n      }\r\n      var msg = this._getMessageWithUserDisplayName(\r\n          confirmDialogMessage, permissionModel);\r\n\r\n      var title = this._getMessageWithUserDisplayName(\r\n          lang.DeletePermissionCommandConfirmDialogTitle, permissionModel);\r\n\r\n      return {\r\n        title: title,\r\n        message: msg\r\n      };\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (unformattedMsg, permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      } else if (permissionModel.get(\"type\") === \"public\") {\r\n        displayName = lang.publicAccess;\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(unformattedMsg, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(unformattedMsg, displayName);\r\n      }\r\n      return msg;\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var permissionModel = status.model,\r\n          collection      = permissionModel && permissionModel.collection,\r\n          right_id        = permissionModel && permissionModel.get('right_id'),\r\n          permissionType  = permissionModel && permissionModel.get('type'),\r\n          filterId        = status.filterId,\r\n          enabled         = !filterId && permissionType &&\r\n                            (right_id || permissionType === \"public\") &&\r\n                            collection && collection.options && collection.options.node &&\r\n                            collection.options.node.get('id') &&\r\n                            (collection.options.authenticatedUserPermissions &&\r\n                             collection.options.authenticatedUserPermissions.hasEditPermissionRights() ||\r\n                             status.admin_permissions);\r\n\r\n      if (enabled) {\r\n        this.setCommandTitle(status.toolItem, permissionModel);\r\n      }\r\n\r\n      return enabled;\r\n    },\r\n\r\n    setCommandTitle: function (toolItem, permissionModel) {\r\n      var type = permissionModel.get(\"type\"),\r\n          title;\r\n      if (type === \"owner\") {\r\n        title = lang.DeletePermissionCommandRemoveOwner;\r\n      } else if (type === \"group\") {\r\n        title = lang.DeletePermissionCommandRemoveGroup;\r\n      } else if (type === \"public\") {\r\n        title = lang.DeletePermissionCommandRemovePublicAccess;\r\n      } else {\r\n        title = lang.DeletePermissionCommandRemoveOther;\r\n      }\r\n      toolItem.set(\"name\", title);\r\n    }\r\n  });\r\n\r\n  _.extend(DeletePermissionCommand.prototype, ConfirmableCommand, {\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n      options || (options = {});\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/apply.permission.view',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/impl/header/apply.permission.header.view',\r\n        'csui/controls/progressblocker/blocker',\r\n        'csui/controls/dialog/dialog.view',\r\n        'csui/utils/permissions/permissions.precheck'\r\n      ], function (localGlobalMessage, ApplyPermissionView, ApplyPermissionHeaderView,\r\n          BlockingView, DialogView, PermissionPreCheck) {\r\n        GlobalMessage = localGlobalMessage;\r\n        if (status.originatingView && status.originatingView.model &&\r\n            status.originatingView.model.get(\"container\")) {\r\n          options.removePermission = true;\r\n          self._executeDeletePermission(status, options, ApplyPermissionHeaderView,\r\n              ApplyPermissionView, BlockingView, DialogView, PermissionPreCheck)\r\n              .then(deferred.resolve, deferred.reject);\r\n        } else {\r\n          self._deletePermission(status, options).then(deferred.resolve, deferred.reject);\r\n        }\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _deletePermission: function (status, options) {\r\n      options || (options = {});\r\n      return this._performActions(status, options);\r\n    },\r\n\r\n    _executeDeletePermission: function (status, options, ApplyPermissionHeaderView,\r\n        ApplyPermissionView, BlockingView, DialogView, PermissionPreCheck) {\r\n      options || (options = {});\r\n      var deferred = $.Deferred();\r\n      this.originatingView = status.originatingView;\r\n      var headerView = new ApplyPermissionHeaderView({\r\n        'removePermission': true,\r\n        'permissionModel': status.model\r\n      });\r\n      this._view = new ApplyPermissionView({\r\n        context: status.context,\r\n        model: status.originatingView.model,\r\n        permissionModel: status.model,\r\n        removePermission: true,\r\n        applyTo: status.applyTo,\r\n        includeSubTypes: PermissionPreCheck.includeSubTypes(),\r\n        originatingView: status.originatingView\r\n      });\r\n      var dialog = new DialogView({\r\n        headerView: headerView,\r\n        view: this._view,\r\n        className: \"csui-permissions-apply-dialog\",\r\n        midSize: true,\r\n        buttons: [\r\n          {\r\n            id: 'apply',\r\n            label: lang.applyButtonLabel,\r\n            'default': true,\r\n            click: function (args) {\r\n              this._performActions(args).then(deferred.resolve, deferred.reject);\r\n            }.bind(this)\r\n          },\r\n          {\r\n            label: lang.cancelButtonLabel,\r\n            close: true\r\n          }\r\n        ]\r\n      });\r\n      dialog.listenTo(dialog, 'hide', _.bind(this.onHideDialog, this));\r\n      BlockingView.imbue(dialog);\r\n      dialog.show();\r\n      return deferred.promise();\r\n    },\r\n\r\n    onHideDialog: function () {\r\n      var origView = this.originatingView;\r\n      origView && origView.trigger(\"unblock:view:actions\");\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      var self            = this,\r\n          deferred        = $.Deferred(),\r\n          permissionModel = status.dialog ? status.dialog.options.view.options.permissionModel :\r\n                            status.model,\r\n          permissionType  = permissionModel.get('type'),\r\n          collection      = permissionModel.collection,\r\n          orginatingView  = status.dialog && status.dialog.options.view.options.originatingView,\r\n          failureMsg      = this._getMessageWithUserDisplayName(\r\n              lang.DeletePermissionCommandFailMessage, permissionModel),\r\n          deleteAttr;\r\n      self.orginatingView = orginatingView;\r\n      if (collection) {\r\n        permissionModel.nodeId = collection.options && collection.options.node &&\r\n                                 collection.options.node.get('id');\r\n        var container           = collection.options && collection.options.node &&\r\n                                  collection.options.node.get(\"container\"),\r\n            permissionModelType = collection.options && collection.options.node &&\r\n                                  collection.options.node.get(\"permissions_model\");\r\n        if (status.dialog) {\r\n          permissionModel.apply_to = (container && permissionModelType === \"advanced\") &&\r\n                                     status.dialog.options.view.subFolderSelected ? 2 :\r\n                                     (container && permissionModelType === \"advanced\") ? 3 : 0;\r\n          permissionModel.include_sub_types = permissionModel.apply_to > 0 ?\r\n                                              status.dialog &&\r\n                                              status.dialog.options.view.options.includeSubTypes :\r\n              [];\r\n        }\r\n        if (self.originatingView && self.originatingView.blockActions) {\r\n          self.destroyDialog(status);\r\n          self.originatingView.blockActions();\r\n        }\r\n        var jqxhr = permissionModel.destroy({\r\n          wait: true\r\n        }).done(function (response) {\r\n          //update the results\r\n          permissionModel.set('results', response.results);\r\n          if (self.originatingView && self.originatingView.unblockActions) {\r\n            self.originatingView.unblockActions();\r\n          }\r\n          //Fetch effective permission of current logged-in user\r\n          collection.options.authenticatedUserPermissions.fetch()\r\n              .done(function () {\r\n                var successMsg = self._getMessageWithUserDisplayName(\r\n                    permissionModel.get('results') && permissionModel.get('results').success > 0 ?\r\n                    lang.DeletePermissionCommandSuccessMessageWithCount :\r\n                    lang.DeletePermissionCommandSuccessMessage, permissionModel);\r\n                GlobalMessage.showMessage('success', successMsg);\r\n                if (permissionType === \"owner\" || permissionType === \"group\") {\r\n                  //Check & Process for no owner condition\r\n                  collection.processForEmptyOwner && collection.processForEmptyOwner();\r\n                }\r\n                //self.destroyDialog(status);\r\n                deferred.resolve(permissionModel);\r\n              })\r\n              .fail(function (error) {\r\n                var commandError = error ? new CommandError(error, permissionModel) :\r\n                                   error;\r\n                //self.destroyDialog(status);\r\n                if (self.originatingView && self.originatingView.unblockActions) {\r\n                  self.originatingView.unblockActions();\r\n                }\r\n                deferred.reject(permissionModel, commandError);\r\n              });\r\n        }).fail(function (error) {\r\n          var commandError = error ? new CommandError(error, permissionModel) :\r\n                             error;\r\n          self.handleFailure(commandError, failureMsg);\r\n          deferred.reject(permissionModel, commandError);\r\n          if (!error) {\r\n            jqxhr.abort();\r\n          }\r\n        }).always(function () {\r\n          if (self.originatingView && self.originatingView.unblockActions) {\r\n            self.originatingView.unblockActions();\r\n          }\r\n        });\r\n        return deferred.promise();\r\n      }\r\n      else {\r\n        self.destroyDialog(status);\r\n        return deferred.reject(\r\n            new CommandError(failureMsg, {errorDetails: lang.undefinedCollection}));\r\n      }\r\n    },\r\n\r\n    handleFailure: function (commandError, oneFileFailure) {\r\n      var errObject = Backbone.Model.extend({\r\n            defaults: {\r\n              name: \"\",\r\n              state: 'pending',\r\n              commandName: 'ViewPermission'\r\n            }\r\n          }),\r\n          errObjects;\r\n\r\n      var failedPermissionsCollection = Backbone.Collection.extend({\r\n        model: errObject\r\n      });\r\n      var errCollection = new failedPermissionsCollection();\r\n      errObjects = new errObject({\r\n        name: commandError,\r\n        mime_type: '',\r\n        state: 'rejected'\r\n      });\r\n      errCollection.add(errObjects);\r\n      GlobalMessage.showPermissionApplyingProgress(errCollection, {oneFileFailure: oneFileFailure});\r\n    },\r\n\r\n    destroyDialog: function (status) {\r\n      status.dialog && status.dialog.destroy();\r\n    }\r\n\r\n  });\r\n\r\n  return DeletePermissionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/add.user.group',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/base',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/models/command', 'csui/utils/command.error'\r\n], function (module, require, _, $, base, lang, log, CommandModel, CommandError) {\r\n  'use strict';\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ModalAlert;\r\n\r\n  var AddUserOrGroupCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"adduserorgroup\",\r\n      name: lang.CommandNameAddUserorGroup\r\n    },\r\n\r\n    enabled: function () {\r\n      return true;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n      status.suppressSuccessMessage = true;\r\n      require(['csui/models/permission/nodepermission.model',\r\n        'csui/utils/permissions/permissions.precheck',\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (NodePermissionModel, PermissionPreCheck) {\r\n        GlobalMessage = arguments[2];\r\n        ModalAlert = arguments[3];\r\n\r\n        self._selectAddUserOrGroupOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedMember      = selectedOptions.members,\r\n                  selectedPermissions = selectedOptions.permissions,\r\n                  permissionModelData = {\r\n                    right_id: selectedMember.get('id'),\r\n                    permissions: selectedPermissions,\r\n                    apply_to: selectedOptions.apply_to,\r\n                    include_sub_types: selectedOptions.apply_to > 0 ?\r\n                                       PermissionPreCheck.includeSubTypes() : []\r\n                  },\r\n                  nodePermissionModel = new NodePermissionModel(permissionModelData, status);\r\n\r\n              nodePermissionModel.nodeId = status.nodeId;\r\n              if (status.originatingView && status.originatingView.blockActions) {\r\n                status.originatingView.blockActions();\r\n              }\r\n              nodePermissionModel.save(permissionModelData, {\r\n                silent: true,\r\n                wait: true\r\n              }).done(function () {\r\n                nodePermissionModel.set({\r\n                      right_id_expand: _.clone(selectedMember.attributes),\r\n                      type: 'custom'\r\n                    },\r\n                    {silent: true});\r\n                //status.permissionCollection.add(nodePermissionModel);\r\n                GlobalMessage.showMessage('success',\r\n                    self._getMessageWithUserDisplayName(nodePermissionModel));\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                deferred.resolve(nodePermissionModel);\r\n              }).fail(function (error) {\r\n                var commandError = error ? new CommandError(error, nodePermissionModel) :\r\n                                   error;\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                GlobalMessage.showMessage('error', commandError);\r\n                deferred.reject(nodePermissionModel, commandError);\r\n              });\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectAddUserOrGroupOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/members.picker/members.picker.wizard'],\r\n          function (MembersPickerDialog) {\r\n            var unSelectableMembers = status.originalCollection &&\r\n                                      status.originalCollection.models &&\r\n                                      status.originalCollection.models.length > 0 ?\r\n                                      status.originalCollection.models :\r\n                                      status.permissionCollection.models;\r\n            unSelectableMembers = _.filter(unSelectableMembers, function (member) {\r\n              return (member.get(\"type\") === \"custom\");\r\n            });\r\n            var membersPickerDialog = new MembersPickerDialog({\r\n              command: 'adduserorgroup',\r\n              context: status.context,\r\n              connector: status.connector,\r\n              dialogClass: 'cs-permission-group-picker',\r\n              displayName: lang.allUsersAndGroups,\r\n              dialogTitle: lang.addUsersAndGroups,\r\n              startLocation: 'all.members',\r\n              adduserorgroup: true,\r\n              nodeModel: status.nodeModel,\r\n              addButtonLabel: lang.AddButtonLabel,\r\n              availablePermissions: status.permissionCollection.availablePermissions,\r\n              startLocations: ['all.members', 'member.groups'],\r\n              unselectableMembers: unSelectableMembers,\r\n              isAdvancedVersioning: status.permissionCollection &&\r\n                                    status.permissionCollection.isAdvancedVersioning,\r\n              applyTo: status.applyTo\r\n            });\r\n            membersPickerDialog\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                }).fail(function (error) {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccessWithCount, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccess, displayName);\r\n      }\r\n      return msg;\r\n    }\r\n  });\r\n\r\n  return AddUserOrGroupCommand;\r\n});\n","csui.define('csui/utils/commands/permissions/add.owner.group',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/base',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/models/command', 'csui/utils/command.error'\r\n], function (module, require, _, $, base, lang, log, CommandModel, CommandError) {\r\n  'use strict';\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ModalAlert;\r\n\r\n  var AddOwnerOrOwnerGroupCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"addownerorgroup\",\r\n      name: lang.CommandNameAddOwnerOrOwnerGroup\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var collection     = status.originalCollection ? status.originalCollection :\r\n                           status.permissionCollection,\r\n          userRights     = collection && collection.options\r\n                           && collection.options.authenticatedUserPermissions,\r\n          owner          = collection.findWhere({type: 'owner'}),\r\n          noOwnerOrGroup = (owner && owner.get('permissions') === null),\r\n          noGroup        = !collection.findWhere({type: 'group'}),\r\n          enabled        = collection && (userRights && userRights.hasEditPermissionRights() ||\r\n                                          status.admin_permissions) &&\r\n                           ( noOwnerOrGroup ||\r\n                             noGroup || !owner);\r\n\r\n      if (enabled && !!status.toolItem) {\r\n        if (noOwnerOrGroup) {\r\n          status.toolItem.set('name', lang.AddOwnerOrGroup);\r\n        }\r\n        else if (noGroup) {\r\n          status.toolItem.set('name', lang.AddOwnerGroup);\r\n        }\r\n        else {\r\n          status.toolItem.set('name', lang.AddOwner);\r\n        }\r\n      }\r\n      return enabled;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n      status.suppressSuccessMessage = true;\r\n      require(['csui/models/permission/nodepermission.model',\r\n        'csui/utils/permissions/permissions.precheck',\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (NodePermissionModel, PermissionPreCheck) {\r\n        GlobalMessage = arguments[2];\r\n        ModalAlert = arguments[3];\r\n\r\n        self._selectAddOwnerOrOwnerGroupOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedMember      = selectedOptions.members,\r\n                  selectedPermissions = selectedOptions.permissions,\r\n                  type                = selectedMember.get('type') === 0 ? 'owner' : 'group',\r\n                  permissionModelData = {\r\n                    type: type,\r\n                    right_id: selectedMember.get('id'),\r\n                    permissions: selectedPermissions,\r\n                    apply_to: selectedOptions.apply_to,\r\n                    include_sub_type: selectedOptions.apply_to > 0 ?\r\n                                      PermissionPreCheck.includeSubTypes() : []\r\n                  },\r\n                  saveAttr            = {\r\n                    right_id: selectedMember.get('id'),\r\n                    apply_to: selectedOptions.apply_to,\r\n                    permissions: selectedPermissions\r\n                  },\r\n                  nodePermissionModel = new NodePermissionModel(permissionModelData, status);\r\n\r\n              nodePermissionModel.nodeId = status.nodeModel ? status.nodeModel.get(\"id\") :\r\n                                           status.nodeId;\r\n              if (status.originatingView && status.originatingView.blockActions) {\r\n                status.originatingView.blockActions();\r\n              }\r\n              nodePermissionModel.save(saveAttr, {\r\n                patch: true,\r\n                silent: true,\r\n                wait: true\r\n              }).done(function () {\r\n                nodePermissionModel.set(\r\n                    {\r\n                      right_id_expand: _.clone(selectedMember.attributes),\r\n                      type: type,\r\n                      addOwnerGroup: true\r\n                    },\r\n                    {silent: true});\r\n                //status.permissionCollection.addOwnerOrGroup(nodePermissionModel);\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                GlobalMessage.showMessage('success',\r\n                    self._getMessageWithUserDisplayName(nodePermissionModel));\r\n                deferred.resolve(nodePermissionModel);\r\n              }).fail(function (error) {\r\n                var commandError = error ? new CommandError(error, nodePermissionModel) :\r\n                                   error;\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                GlobalMessage.showMessage('error', commandError);\r\n                deferred.reject(nodePermissionModel, commandError);\r\n              });\r\n            }).fail(function (error) {\r\n          deferred.reject(error);\r\n        });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectAddOwnerOrOwnerGroupOptions: function (status, options) {\r\n      var self        = this,\r\n          deferred    = $.Deferred(),\r\n          owner       = status.originalCollection ?\r\n                        status.originalCollection.findWhere({type: 'owner'}) :\r\n                        status.permissionCollection.findWhere({type: 'owner'}),\r\n          displayName = lang.allUsersAndGroups,\r\n          selectableTypes, title, startLocation, startLocations;\r\n      if (owner && owner.get('permissions') === null) {\r\n        selectableTypes = [0, 1];\r\n        title = lang.AddOwnerOrGroupDialogTitle;\r\n        startLocation = 'all.members';\r\n        startLocations = ['all.members', 'member.groups'];\r\n      }\r\n      else {\r\n        selectableTypes = owner ? [1] : [0];\r\n        title = owner ? lang.AddOwnerGroupDialogTitle : lang.AddOwnerDialogTitle;\r\n        displayName = owner ? lang.allGroups : displayName;\r\n        startLocation = owner ? 'all.groups' : 'all.members';\r\n        startLocations = owner ? ['all.groups', 'member.groups'] : ['all.members', 'member.groups'];\r\n      }\r\n      require(['csui/dialogs/members.picker/members.picker.wizard'],\r\n          function (MembersPickerDialog) {\r\n            var membersPickerDialog = new MembersPickerDialog({\r\n              command: 'addownerorownergroup',\r\n              context: status.context,\r\n              connector: status.connector,\r\n              dialogClass: 'cs-permission-group-picker',\r\n              displayName: displayName,\r\n              dialogTitle: title,\r\n              startLocation: startLocation,\r\n              nodeModel: status.nodeModel,\r\n              availablePermissions: status.permissionCollection.availablePermissions,\r\n              adduserorgroup: true,\r\n              addButtonLabel: lang.AddButtonLabel,\r\n              startLocations: startLocations,\r\n              selectableTypes: selectableTypes,\r\n              isAdvancedVersioning: status.permissionCollection &&\r\n                                    status.permissionCollection.isAdvancedVersioning,\r\n              applyTo: status.applyTo\r\n            });\r\n            membersPickerDialog\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                }).fail(function (error) {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccessWithCount, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccess, displayName);\r\n      }\r\n      return msg;\r\n    }\r\n  });\r\n\r\n  return AddOwnerOrOwnerGroupCommand;\r\n});\n","csui.define('csui/utils/commands/permissions/restore.public.access',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/base',\r\n  'csui/utils/log', 'csui/models/command', 'csui/utils/command.error'\r\n], function (module, require, _, $, lang, base, log, CommandModel,\r\n    CommandError) {\r\n  'use strict';\r\n\r\n  var GlobalMessage;\r\n\r\n  var RestorePublicAccess = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'restorepublicaccess',\r\n      name: lang.CommandNameRestorePublicAccess\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var collection        = status.originalCollection ? status.originalCollection :\r\n                              status.permissionCollection,\r\n          userRights        = collection && collection.options\r\n                              && collection.options.authenticatedUserPermissions,\r\n          hasEditPermission = status.admin_permissions ||\r\n                              userRights && userRights.hasEditPermissionRights();\r\n\r\n      return collection && hasEditPermission && (!collection.findWhere({type: 'public'}));\r\n    },\r\n\r\n    execute: function (status) {\r\n      var self       = this,\r\n          deferred   = $.Deferred(),\r\n          collection = status.permissionCollection,\r\n          nodePermissionModel, saveAttr,\r\n          nodeModel  = status.nodeModel || collection.node || (status.originatingView && status.originatingView.model);\r\n\r\n      require([\r\n        'csui/models/permission/nodepermission.model',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/apply.permission.view',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/impl/header/apply.permission.header.view',\r\n        'csui/controls/progressblocker/blocker',\r\n        'csui/controls/dialog/dialog.view',\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/utils/permissions/permissions.precheck'\r\n      ], function (NodePermissionModel, ApplyPermissionView, ApplyPermissionHeaderView,\r\n          BlockingView, DialogView, localGlobalMessage, PermissionPreCheck) {\r\n        GlobalMessage = localGlobalMessage;\r\n        if ( nodeModel && nodeModel.get(\"container\") ) {\r\n          self._executeApplyPermission(status, nodeModel, ApplyPermissionHeaderView,\r\n              ApplyPermissionView, BlockingView, DialogView, NodePermissionModel,\r\n              PermissionPreCheck)\r\n              .then(deferred.resolve, deferred.reject);\r\n        } else {\r\n          nodePermissionModel = new NodePermissionModel({type: 'public'}, status);\r\n          saveAttr = {'permissions': NodePermissionModel.getReadPermissions()};\r\n          nodePermissionModel.nodeId = status.nodeId;\r\n          if (status.originatingView && status.originatingView.blockActions) {\r\n            status.originatingView.blockActions();\r\n          }\r\n          nodePermissionModel.save(saveAttr, {\r\n            patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n            // mixin makes it a PUT again (backbone would use PATCH)\r\n            wait: true\r\n          }).done(function () {\r\n            nodePermissionModel.set({publicAccess: true}, {silent: true});\r\n            //collection.addPublicAccess(nodePermissionModel);\r\n            if (status.originatingView && status.originatingView.unblockActions) {\r\n              status.originatingView.unblockActions();\r\n            }\r\n            var successMsg = self._getMessageWithUserDisplayName(\r\n                nodePermissionModel.get('results') &&\r\n                nodePermissionModel.get('results').success > 0 ?\r\n                lang.RestorePublicAccessSuccessMessageWithCount :\r\n                lang.RestorePublicAccessSuccessMessage, nodePermissionModel);\r\n            GlobalMessage.showMessage('success', successMsg);\r\n            deferred.resolve(nodePermissionModel);\r\n          }).fail(function (error) {\r\n            var commandError = error ? new CommandError(error, nodePermissionModel) :\r\n                               error;\r\n            if (status.originatingView && status.originatingView.unblockActions) {\r\n              status.originatingView.unblockActions();\r\n            }\r\n            GlobalMessage.showMessage('error', commandError);\r\n            deferred.reject(nodePermissionModel, commandError);\r\n          });\r\n        }\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _executeApplyPermission: function (status, nodeModel, ApplyPermissionHeaderView,\r\n        ApplyPermissionView, BlockingView, DialogView, NodePermissionModel, PermissionPreCheck) {\r\n      var deferred = $.Deferred();\r\n      this.originatingView = status.originatingView;\r\n      var headerView = new ApplyPermissionHeaderView({'restorePublicAccess': true});\r\n      this._view = new ApplyPermissionView({\r\n        context: status.context,\r\n        model: nodeModel,\r\n        permissionModel: new NodePermissionModel({type: 'public'}, status),\r\n        permissions: NodePermissionModel.getReadPermissions(),\r\n        includeSubTypes: PermissionPreCheck.includeSubTypes(),\r\n        collection: status.permissionCollection,\r\n        applyTo: status.applyTo,\r\n        removePermission: false,\r\n        originatingView: status.originatingView,\r\n        restorePublicAccess: true\r\n      });\r\n      var dialog = new DialogView({\r\n        headerView: headerView,\r\n        view: this._view,\r\n        className: \"csui-permissions-apply-dialog\",\r\n        midSize: true,\r\n        buttons: [\r\n          {\r\n            id: 'apply',\r\n            label: lang.applyButtonLabel,\r\n            'default': true,\r\n            click: _.bind(this._performActions, this)\r\n          },\r\n          {\r\n            label: lang.cancelButtonLabel,\r\n            close: true\r\n          }\r\n        ]\r\n      });\r\n      dialog.listenTo(dialog, 'hide', _.bind(this.onHideDialog, this));\r\n      BlockingView.imbue(dialog);\r\n      dialog.show();\r\n      return deferred.promise();\r\n    },\r\n\r\n    onHideDialog: function () {\r\n      var origView = this.originatingView;\r\n      origView && origView.trigger(\"unblock:view:actions\");\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      var self                = this,\r\n          deferred            = $.Deferred(),\r\n          permissionModel     = status.dialog ? status.dialog.options.view.options.permissionModel :\r\n                                status.model,\r\n          permissions         = status.dialog && status.dialog.options.view.options.permissions,\r\n          originatingView     = status.dialog && status.dialog.options.view.options.originatingView,\r\n          nodeModel           = status.dialog.options.view.model,\r\n          collection          = status.dialog && status.dialog.options.view.options.collection,\r\n          container           = nodeModel && nodeModel.get(\"container\"),\r\n          permissionModelType = nodeModel && nodeModel.get(\"permissions_model\"), saveAttr;\r\n      self.originatingView = originatingView;\r\n      if (status.dialog) {\r\n        permissionModel.apply_to = (container && permissionModelType === \"advanced\") &&\r\n                                   status.dialog.options.view.subFolderSelected ? 2 :\r\n                                   (container && permissionModelType === \"advanced\") ? 3 : 0;\r\n        permissionModel.include_sub_types = permissionModel.apply_to > 0 ?\r\n                                            status.dialog &&\r\n                                            status.dialog.options.view.options.includeSubTypes : [];\r\n      }\r\n      saveAttr = {\r\n        'permissions': permissions,\r\n        'apply_to': permissionModel.apply_to,\r\n        'include_sub_types': permissionModel.include_sub_types\r\n      };\r\n      permissionModel.nodeId = nodeModel.get(\"id\");\r\n      if (self.originatingView && self.originatingView.blockActions) {\r\n        self.originatingView.blockActions();\r\n      }\r\n      permissionModel.save(saveAttr, {\r\n        patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n        // mixin makes it a PUT again (backbone would use PATCH)\r\n        wait: true\r\n      }).done(function () {\r\n        permissionModel.set({publicAccess: true}, {silent: true});\r\n        self.destroyDialog(status);\r\n        collection.addPublicAccess(permissionModel);\r\n        if (self.originatingView && self.originatingView.unblockActions) {\r\n          self.originatingView.unblockActions();\r\n        }\r\n        var successMsg = self._getMessageWithUserDisplayName(\r\n            permissionModel.get('results') && permissionModel.get('results').success > 0 ?\r\n            lang.RestorePublicAccessSuccessMessageWithCount :\r\n            lang.RestorePublicAccessSuccessMessage, permissionModel);\r\n        GlobalMessage.showMessage('success', successMsg);\r\n        deferred.resolve(permissionModel);\r\n      }).fail(function (error) {\r\n        var commandError = error ? new CommandError(error, permissionModel) :\r\n                           error;\r\n        self.destroyDialog(status);\r\n        if (self.originatingView && self.originatingView.unblockActions) {\r\n          self.originatingView.unblockActions();\r\n        }\r\n        GlobalMessage.showMessage('error', commandError);\r\n        deferred.reject(permissionModel, commandError);\r\n      });\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (unformattedMsg, permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"type\") === \"public\") {\r\n        displayName = lang.publicAccess;\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(unformattedMsg, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(unformattedMsg, displayName);\r\n      }\r\n      return msg;\r\n    },\r\n\r\n    destroyDialog: function (status) {\r\n      status.dialog && status.dialog.destroy();\r\n    }\r\n  });\r\n\r\n  return RestorePublicAccess;\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.blog',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenBlogCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenBlog'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 356 || type === 357;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var blog = node.get('type') === 356;\r\n      return {\r\n        func: 'll',\r\n        objAction: blog ? 'view' : 'viewincontainer',\r\n        // TODO: Is the logStopConditionID parameter important for the blog entry?\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenBlogCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.faq',['csui/lib/jquery', 'csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function ($, CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenFaqCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenFAQ'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 123475 || type === 123476;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var faq = node.get('type') === 123475,\r\n          urlQuery = $.param({\r\n            func: 'll',\r\n            objAction: 'view',\r\n            objId: faq ? node.get('id') : node.get('volume_id'),\r\n            nexturl: location.href\r\n          });\r\n      return faq ? urlQuery : urlQuery + '#entry_' + node.get('id');\r\n    }\r\n\r\n  });\r\n\r\n  return OpenFaqCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.forum',['csui/lib/jquery', 'csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function ($, CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenForumCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenForum'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 123469 || type === 123470;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var forum = node.get('type') === 123469;\r\n      return {\r\n        func: 'll',\r\n        objAction: forum ? 'view' : 'viewincontainer',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenForumCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.wiki',['csui/lib/jquery', 'csui/utils/url',\r\n  'csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function ($, Url, CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenWikiCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenWiki'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 5573 || type === 5574;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var url = OpenClassicPageCommand.prototype.getUrl.apply(this, arguments),\r\n          wiki = node.get('type') === 5573;\r\n      return wiki ? url : Url.combine(url, 'open', node.get('id'));\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var wiki = node.get('type') === 5573;\r\n      if (wiki) {\r\n        return {\r\n          func: 'll',\r\n          objAction: 'browse',\r\n          objId: node.get('id'),\r\n          viewType: 1,\r\n          nexturl: location.href\r\n        };\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return OpenWikiCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.mailstore',['csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenMailStoreCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenMailStore'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 3030331;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var mailStore = node.get('type') === 3030331;\r\n      if (mailStore) {\r\n        return {\r\n          func: 'll',\r\n          objAction: 'browse',\r\n          objId: node.get('id'),\r\n          viewType: 1,\r\n          nexturl: location.href\r\n        };\r\n      }\r\n    }\r\n  });\r\n\r\n  return OpenMailStoreCommand;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/goto.location',['require', 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/models/command'\r\n], function (require, $, base, _, lang, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var GoToLocationCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"goToLocation\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && this._isSupported(node);\r\n    },\r\n\r\n    _isSupported: function (node) {\r\n      var supportedObjects = [144], //this may be extend in future for other object types also\r\n          support          = $.inArray(node.get('type'), supportedObjects) !== -1;\r\n      return support;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          node     = CommandHelper.getJustOneNode(status),\r\n          nodeModel;\r\n      if (node && this._isSupported(node)) {\r\n        nodeModel = node.parent;\r\n        if (nodeModel && nodeModel.get('type') === undefined) {\r\n          // When the object is not accessable then we are not getting the parent type so we\r\n          // need to retrieve this value as per the DefaultActionController implementation\r\n          nodeModel.fetch().done(function () {\r\n            status.originatingView && this.executeDefaultAction(nodeModel, status.originatingView);\r\n          }).fail(function (resp) {\r\n            require(['csui/dialogs/modal.alert/modal.alert'], function (ModalAlert) {\r\n              var error = new base.Error(resp);\r\n              ModalAlert.showError(error.message);\r\n            });\r\n\r\n          });\r\n          deferred.resolve();\r\n        }     \r\n      else {\r\n        status.originatingView && this.executeDefaultAction(nodeModel, status.originatingView); \r\n        deferred.resolve();\r\n        }\r\n      }\r\n      return deferred.promise();\r\n    },\r\n\r\n    executeDefaultAction: function (node, originatingView) {\r\n      var args = {node: node};\r\n      originatingView.trigger('before:defaultAction', args);\r\n      if (!args.cancel) {\r\n        var self = originatingView;\r\n        originatingView.defaultActionController && originatingView.defaultActionController\r\n            .executeAction(node, {\r\n              context: originatingView.context,\r\n              originatingView: originatingView\r\n            })\r\n            .done(function () {\r\n              self.trigger('executed:defaultAction', args);\r\n            });\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return GoToLocationCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/collection/collect',[\r\n  'module', 'require', 'csui/lib/jquery', 'csui/lib/backbone',\r\n  'csui/utils/base', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/collection/nls/lang', 'csui/models/command',\r\n  'csui/utils/commands/multiple.items', 'csui/utils/commandhelper'\r\n], function (module, require, $, Backbone, base, _, lang, CommandModel,\r\n    MultipleItemsCommand, CommandHelper) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  var GlobalMessage, TaskQueue, UploadFileCollection, PageLeavingBlocker,\r\n      NextNodeModelFactory, CollectionConflictView, nodeLinks;\r\n\r\n  var CollectCommandParent = CommandModel.extend({});\r\n  _.extend(CollectCommandParent.prototype, MultipleItemsCommand); //apply required mixin\r\n\r\n  var Collect = CollectCommandParent.extend({\r\n\r\n    defaults: {\r\n      signature: \"Collect\",\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForOne: lang.CollectOneItemSuccessMessage,\r\n        formatForTwo: lang.CollectManyItemsSuccessMessage,\r\n        formatForMany: lang.CollectManyItemsSuccessMessage,\r\n        formatForFive: lang.CollectManyItemsSuccessMessage,\r\n      },\r\n      errorMessages: {\r\n        formatForOne: lang.CollectOneItemFailMessage,\r\n        formatForTwo: lang.CollectManyItemsFailMessage,\r\n        formatForMany: lang.CollectManyItemsFailMessage,\r\n        formatForFive: lang.CollectManyItemsFailMessage,\r\n      }\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var enable = this._isSupported(status.container),\r\n          nodes  = CommandHelper.getAtLeastOneNode(status);\r\n      enable = !!enable && !!nodes && nodes.length;\r\n      return enable;\r\n    },\r\n\r\n    _isSupported: function (node) {\r\n      var unsupportedObjects = [298], //this may be extend in future for other object types also\r\n          // in case of favorites and recently widgets container is undefined so still need to enable command\r\n          support            = !!node ? $.inArray(node.get('type'), unsupportedObjects) === -1 :\r\n                               true;\r\n      return support;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var that     = this,\r\n          deferred = $.Deferred();\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/controls/conflict.resolver/impl/collection.conflicts/collection.conflicts.view',\r\n        'csui/utils/taskqueue', 'csui/models/fileuploads', 'csui/utils/page.leaving.blocker',\r\n        'csui/utils/contexts/factories/next.node', 'csui/utils/node.links/node.links'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        CollectionConflictView = arguments[1];\r\n        TaskQueue = arguments[2];\r\n        UploadFileCollection = arguments[3];\r\n        PageLeavingBlocker = arguments[4];\r\n        NextNodeModelFactory = arguments[5];\r\n        nodeLinks = arguments[6];\r\n\r\n        that._addToCollection(status, options).done(function (container) {\r\n          var selectedNodes    = status.nodes.models,\r\n              nodes            = _.map(selectedNodes, function (node) {\r\n                return {\r\n                  name: node.get('name'),\r\n                  state: 'pending',\r\n                  count: 0,\r\n                  total: 1,\r\n                  node: node\r\n                };\r\n              }),\r\n              targetFolder     = container.nodes,\r\n              uploadCollection = new UploadFileCollection(nodes, {connector: connector}),\r\n              connector        = (status.container && status.container.connector) ||\r\n                                 (status.originatingView && status.originatingView.connector);\r\n          that._announceOperationStart(status);\r\n          uploadCollection.each(function (fileUpload) {\r\n            var node = fileUpload.get('node');\r\n            fileUpload.node = node;\r\n            fileUpload.unset('node');\r\n            fileUpload.set('mime_type', node.get('mime_type'));\r\n          });\r\n\r\n          that._addSelectedNodesToCollection(uploadCollection, connector, targetFolder[0],\r\n              status.collection)\r\n              .then(function (promises) {\r\n                GlobalMessage.hideFileUploadProgress();\r\n                var result = that._checkPromisess(promises);\r\n                if (result.failedNodes.length) {\r\n                  that._showDialog(result.failedNodes).then(\r\n                      function (resolveOption, dialog) {\r\n                        dialog.kill();\r\n                        //if any success items are there then show global message\r\n                        if (result.successNodes.length) {\r\n                          var msgOptions = {\r\n                            context: status.context,\r\n                            nextNodeModelFactory: NextNodeModelFactory,\r\n                            link_url: nodeLinks.getUrl(targetFolder[0]),\r\n                            targetFolder: targetFolder[0]\r\n                          };\r\n                          that.showSuccessWithLink(result.successNodes.models, msgOptions);\r\n                        }\r\n                      });\r\n\r\n                } else if (result.successNodes.length) {\r\n                  // display result message\r\n                  var msgOptions = {\r\n                    context: status.context,\r\n                    nextNodeModelFactory: NextNodeModelFactory,\r\n                    link_url: nodeLinks.getUrl(targetFolder[0]),\r\n                    targetFolder: targetFolder[0]\r\n                  };\r\n                  that.showSuccessWithLink(promises, msgOptions);\r\n                }\r\n              });\r\n          that._announceOperationEnd(status);\r\n        });\r\n\r\n        deferred.resolve();\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _addToCollection: function (status, options) {\r\n      var self     = this,\r\n          deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n          function (NodePicker) {\r\n            var pickerOptions = _.extend({\r\n              selectableTypes: [298],\r\n              showAllTypes: true,\r\n              orderBy: 'type asc',\r\n              dialogTitle: lang.collectItemsDialogTitle,\r\n              selectButtonLabel: lang.selectCollectButtonLabel,\r\n              globalSearch: true,\r\n              selectMultiple: false,\r\n              context: options ? options.context : status.context,\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              resolveShortcuts: true\r\n            }, status);\r\n\r\n            self.nodePicker = new NodePicker(pickerOptions);\r\n\r\n            self.nodePicker\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                })\r\n                .fail(function () {\r\n                  deferred.reject.apply(deferred, arguments);\r\n                });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _addSelectedNodesToCollection: function (uploadCollection, connector, targetFolder,\r\n        targetCollection) {\r\n      var self     = this,\r\n          queue    = new TaskQueue({\r\n            parallelism: config.parallelism\r\n          }),\r\n          count    = 0,\r\n          promises = _.map(uploadCollection.models, function (model) {\r\n            var deferred = $.Deferred();\r\n            queue.pending.add({\r\n              worker: function () {\r\n                var node     = model.node,\r\n                    node_id  = node.get('id'),\r\n                    targetId = targetFolder.get('id');\r\n                self._collectNode(connector, targetId, node_id)\r\n                    .done(function () {\r\n\r\n                      model.set('count', 1);\r\n                      model.deferred.resolve(model);\r\n\r\n                      deferred.resolve(model);\r\n                    })\r\n                    .fail(function (cause) {\r\n                      deferred.resolve(model);\r\n                    });\r\n                return deferred.promise();\r\n              }\r\n            });\r\n            count++;\r\n            return deferred.promise(promises);  // return promises\r\n          });\r\n      GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: lang.CollectingOneItem,\r\n        oneFileSuccess: lang.CollectOneItemSuccessMessage,\r\n        multiFileSuccess: lang.CollectManyItemsSuccessMessage,\r\n        oneFilePending: lang.CollectingOneItem,\r\n        multiFilePending: lang.CollectingItems,\r\n        oneFileFailure: lang.CollectOneItemFailMessage,\r\n        multiFileFailure: lang.CollectManyItemsFailMessage2,\r\n        someFileSuccess: lang.CollectManyItemsSuccessMessage,\r\n        someFilePending: lang.CollectingItems,\r\n        someFileFailure: lang.CollectManyItemsFailMessage2,\r\n        enableCancel: false\r\n      });\r\n\r\n      return $.whenAll.apply($, promises);\r\n    },\r\n\r\n    _collectNode: function (connector, targetFolderID, node_id) {\r\n      var deferred = $.Deferred();\r\n      var nodeAttr = {\r\n        \"collection_id\": targetFolderID\r\n      };\r\n\r\n      var collectOptions = {\r\n        url: connector.connection.url.replace('/v1', '/v2') + '/nodes/' + node_id,\r\n        type: 'PUT',\r\n        data: nodeAttr,\r\n        contentType: 'application/x-www-form-urlencoded'\r\n      };\r\n\r\n      connector.makeAjaxCall(collectOptions).done(function (resp) {\r\n        deferred.resolve(resp);\r\n\r\n      }).fail(function (resp) {\r\n        deferred.reject(resp);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _checkPromisess: function (promises) {\r\n      if (!_.isArray(promises)) {\r\n        promises = [promises];\r\n      }\r\n\r\n      var successPromises = new Backbone.Collection(),\r\n          failedPromises  = new Backbone.Collection();\r\n\r\n      _.each(promises, function (prom) {\r\n        if (prom !== undefined) {\r\n          if (!prom.cancelled) {\r\n            if (prom.get(\"count\") === undefined) {\r\n              //which is not resolved or rejected\r\n            } else if (prom.get(\"count\")) {\r\n              successPromises.push(prom);\r\n            }\r\n            else {\r\n              failedPromises.push(prom);\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      return {\r\n        successNodes: successPromises,\r\n        failedNodes: failedPromises\r\n      };\r\n    },\r\n\r\n    _showDialog: function (conflictFiles) {\r\n      var deferred = $.Deferred(),\r\n          buttons  = [{\r\n            id: 'close',\r\n            label: lang.conflictsDialogCloseLabel,\r\n            toolTip: lang.conflictsDialogCloseLabel,\r\n            click: function (args) {\r\n              deferred.resolve('close', args.dialog);\r\n            }\r\n          }];\r\n      this._showConflictDialog(conflictFiles, buttons);\r\n      return deferred;\r\n    },\r\n\r\n    _showConflictDialog: function (collection, buttons) {\r\n      var self     = this,\r\n          deferred = $.Deferred();\r\n      require(['csui/controls/dialog/dialog.view'], function (DialogView) {\r\n        var failureMessage = base.formatMessage(collection.length, self.get(\"errorMessages\")),\r\n            dialog         = new DialogView({\r\n              title: failureMessage,\r\n              midSize: true,\r\n              iconLeft: 'csui-icon-notification-information',\r\n              className: \"csui-collection-conflicts-dialog\",\r\n              view: self._getListView(collection),\r\n              buttons: buttons\r\n            });\r\n        dialog.show();\r\n        return dialog;\r\n      });\r\n\r\n    },\r\n\r\n    _getListView: function (conflictFiles) {\r\n      var retVal = new CollectionConflictView(_.extend({}, {collection: conflictFiles}));\r\n      return retVal;\r\n    },\r\n\r\n    _announceOperationStart: function (status) {\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.blockActions) {\r\n        originatingView.blockActions();\r\n      }\r\n      PageLeavingBlocker.enable(this.get('pageLeavingWarning'));\r\n    },\r\n\r\n    _announceOperationEnd: function (status) {\r\n      PageLeavingBlocker.disable();\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return Collect;\r\n\r\n});\r\n\n","csui.define('bundles/csui-commands',[\r\n  // Commands\r\n  'csui/integration/folderbrowser/commands/go.to.node.history',\r\n  'csui/integration/folderbrowser/commands/open.full.page.container',\r\n  'csui/utils/commands',\r\n  'csui/utils/commands/add.categories',\r\n  'csui/utils/commands/add',\r\n  'csui/utils/commands/add.item.metadata',\r\n  'csui/utils/commands/add.version',\r\n  'csui/utils/commands/browse',\r\n  'csui/utils/commands/collection/collect.items',\r\n  'csui/utils/commands/collection/remove.collected.items',\r\n  'csui/utils/commands/confirmable',\r\n  'csui/utils/commands/copy',\r\n  'csui/utils/commands/copy.link',\r\n  'csui/utils/commands/create.perspective',\r\n  'csui/utils/commands/delete',\r\n  'csui/utils/commands/download',\r\n  'csui/utils/commands/zipanddownload',\r\n  'csui/utils/commands/edit',\r\n  // TODO: Move these 3 commands and also their toolbar\r\n  // configurations (flyouts) to les.fastedit.\r\n  'csui/utils/commands/editactivex',\r\n  'csui/utils/commands/editofficeonline',\r\n  'csui/utils/commands/edit.perspective',\r\n  'csui/utils/commands/editwebdav',\r\n  'csui/utils/commands/email.link',\r\n  'csui/utils/commands/execute.saved.query',\r\n  'csui/utils/commands/favorite.add',\r\n  'csui/utils/commands/favorite.remove',\r\n  'csui/utils/commands/inlineedit',\r\n  'csui/utils/commands/move',\r\n  'csui/utils/commands/multiple.items',\r\n  'csui/utils/commands/navigate',\r\n  'csui/utils/commands/node',\r\n  'csui/utils/commands/open',\r\n  'csui/utils/commands/open.node.perspective',\r\n  'csui/utils/commands/open.classic.page',\r\n  'csui/utils/commands/open.discussion',\r\n  'csui/utils/commands/open.form',\r\n  'csui/utils/commands/open.milestone',\r\n  'csui/utils/commands/open.channel',\r\n  'csui/utils/commands/open.news',\r\n  'csui/utils/commands/open.poll',\r\n  'csui/utils/commands/open.prospector',\r\n  'csui/utils/commands/open.specific.classic.page',\r\n  'csui/utils/commands/open.specific.node.perspective',\r\n  'csui/utils/commands/open.task',\r\n  'csui/utils/commands/open.taskgroup',\r\n  'csui/utils/commands/open.tasklist',\r\n  'csui/utils/commands/open.topic',\r\n  'csui/utils/commands/permissions',\r\n  'csui/utils/commands/properties',\r\n  'csui/utils/commands/rename',\r\n  'csui/utils/commands/rename.favorite',\r\n  'csui/utils/commands/reserve',\r\n  'csui/utils/commands/run.livereport',\r\n  'csui/utils/commands/sign.out',\r\n  'csui/utils/commands/switch.to.classic',\r\n  'csui/utils/commands/unreserve',\r\n  'csui/utils/commands/user.profile',\r\n  'csui/utils/commands/versions',\r\n  'csui/utils/commands/versions/delete',\r\n  'csui/utils/commands/versions/download',\r\n  'csui/utils/commands/versions/open',\r\n  'csui/utils/commands/versions/properties',\r\n  'csui/utils/commands/filter',\r\n  'csui/utils/commands/description.toggle',\r\n  'csui/utils/commands/thumbnail.toggle',\r\n  'csui/utils/commands/save.filter',\r\n  'csui/utils/commands/maximize.widget.view',\r\n  'csui/utils/commands/restore.widget.size',\r\n  'csui/utils/commands/permissions/apply.permission',\r\n  'csui/utils/commands/permissions/edit.permission',\r\n  'csui/utils/commands/permissions/change.owner.permission',\r\n  'csui/utils/commands/permissions/delete.permission',\r\n  'csui/utils/commands/permissions/add.user.group',\r\n  'csui/utils/commands/permissions/add.owner.group',\r\n  'csui/utils/commands/permissions/restore.public.access',\r\n\r\n  // TODO: Remove this. Localizable string for csui commands  are\r\n  // private in csui and must not be referred to from other components.\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commands/nls/root/localized.strings',\r\n  'i18n!csui/utils/commands/collection/nls/lang',\r\n  'csui/utils/commands/collection/nls/root/lang',\r\n\r\n  // TODO: Remove this, as long as the module owners take over\r\n  // the commands and default action rules\r\n  'csui/temporary/cop/commands/open.blog',\r\n  'csui/temporary/cop/commands/open.faq',\r\n  'csui/temporary/cop/commands/open.forum',\r\n  'csui/temporary/cop/commands/open.wiki',\r\n  'csui/temporary/cop/commands/open.mailstore',\r\n\r\n  // Other modules, that commands directly depend on.\r\n  'csui/dialogs/file.open/file.open.dialog',\r\n  'csui/models/command',\r\n  'csui/models/commands',\r\n  'csui/utils/command.error',\r\n  'csui/utils/commandhelper',\r\n  'csui/utils/commands/open.plugins/open.plugins',\r\n  'csui/utils/commands/goto.location',\r\n  'csui/utils/commands/collection/collect',\r\n  'csui/utils/node.links/node.links',\r\n  'csui/utils/routing'\r\n], {});\r\n\n"]}